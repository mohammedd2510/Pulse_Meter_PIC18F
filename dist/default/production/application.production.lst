

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jan 08 19:28:24 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1,inline
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   113                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   114                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   115   000000                     
   116                           ; Generated 23/03/2023 GMT
   117                           ; 
   118                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   119                           ; All rights reserved.
   120                           ; 
   121                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   122                           ; 
   123                           ; Redistribution and use in source and binary forms, with or without modification, are
   124                           ; permitted provided that the following conditions are met:
   125                           ; 
   126                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   127                           ;        conditions and the following disclaimer.
   128                           ; 
   129                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   130                           ;        of conditions and the following disclaimer in the documentation and/or other
   131                           ;        materials provided with the distribution. Publication is not required when
   132                           ;        this file is used in an embedded application.
   133                           ; 
   134                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   135                           ;        software without specific prior written permission.
   136                           ; 
   137                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   138                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   139                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   140                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   141                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   142                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   143                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   144                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   145                           ; 
   146                           ; 
   147                           ; Code-generator required, PIC18F4620 Definitions
   148                           ; 
   149                           ; SFR Addresses
   150   000000                     
   151                           	psect	idataCOMRAM
   152   004434                     __pidataCOMRAM:
   153                           	callstack 0
   154                           
   155                           ;initializer for _led1
   156   004434  71                 	db	113
   157                           
   158                           	psect	idataBANK0
   159   00437E                     __pidataBANK0:
   160                           	callstack 0
   161                           
   162                           ;initializer for _tris_registers
   163   00437E  92                 	db	146
   164   00437F  0F                 	db	15
   165   004380  93                 	db	147
   166   004381  0F                 	db	15
   167   004382  94                 	db	148
   168   004383  0F                 	db	15
   169   004384  95                 	db	149
   170   004385  0F                 	db	15
   171   004386  96                 	db	150
   172   004387  0F                 	db	15
   173                           
   174                           ;initializer for _lcd1
   175   004388  03                 	db	3
   176   004389  0B                 	db	11
   177   00438A  13                 	db	19
   178   00438B  1B                 	db	27
   179   00438C  23                 	db	35
   180   00438D  2B                 	db	43
   181                           
   182                           	psect	idataBANK1
   183   004358                     __pidataBANK1:
   184                           	callstack 0
   185                           
   186                           ;initializer for _port_registers
   187   004358  80                 	db	128
   188   004359  0F                 	db	15
   189   00435A  81                 	db	129
   190   00435B  0F                 	db	15
   191   00435C  82                 	db	130
   192   00435D  0F                 	db	15
   193   00435E  83                 	db	131
   194   00435F  0F                 	db	15
   195   004360  84                 	db	132
   196   004361  0F                 	db	15
   197                           
   198                           ;initializer for _lat_registers
   199   004362  89                 	db	137
   200   004363  0F                 	db	15
   201   004364  8A                 	db	138
   202   004365  0F                 	db	15
   203   004366  8B                 	db	139
   204   004367  0F                 	db	15
   205   004368  8C                 	db	140
   206   004369  0F                 	db	15
   207   00436A  8D                 	db	141
   208   00436B  0F                 	db	15
   209                           
   210                           	psect	smallconst
   211   001000                     __psmallconst:
   212                           	callstack 0
   213   001000  00                 	db	0
   214   001001                     _btn_values:
   215                           	callstack 0
   216   001001  37                 	db	55
   217   001002  38                 	db	56
   218   001003  39                 	db	57
   219   001004  2F                 	db	47
   220   001005  34                 	db	52
   221   001006  35                 	db	53
   222   001007  36                 	db	54
   223   001008  2A                 	db	42
   224   001009  31                 	db	49
   225   00100A  32                 	db	50
   226   00100B  33                 	db	51
   227   00100C  2D                 	db	45
   228   00100D  23                 	db	35
   229   00100E  30                 	db	48
   230   00100F  3D                 	db	61
   231   001010  2B                 	db	43
   232   001011                     __end_of_btn_values:
   233                           	callstack 0
   234   001011                     STR_6:
   235   001011  46                 	db	70	;'F'
   236   001012  72                 	db	114	;'r'
   237   001013  65                 	db	101	;'e'
   238   001014  71                 	db	113	;'q'
   239   001015  75                 	db	117	;'u'
   240   001016  65                 	db	101	;'e'
   241   001017  6E                 	db	110	;'n'
   242   001018  63                 	db	99	;'c'
   243   001019  79                 	db	121	;'y'
   244   00101A  3A                 	db	58	;':'
   245   00101B  20                 	db	32
   246   00101C  31                 	db	49	;'1'
   247   00101D  2D                 	db	45
   248   00101E  3E                 	db	62	;'>'
   249   00101F  31                 	db	49	;'1'
   250   001020  30                 	db	48	;'0'
   251   001021  30                 	db	48	;'0'
   252   001022  30                 	db	48	;'0'
   253   001023  48                 	db	72	;'H'
   254   001024  7A                 	db	122	;'z'
   255   001025  00                 	db	0
   256   001026                     STR_7:
   257   001026  44                 	db	68	;'D'
   258   001027  75                 	db	117	;'u'
   259   001028  74                 	db	116	;'t'
   260   001029  79                 	db	121	;'y'
   261   00102A  20                 	db	32
   262   00102B  43                 	db	67	;'C'
   263   00102C  79                 	db	121	;'y'
   264   00102D  63                 	db	99	;'c'
   265   00102E  6C                 	db	108	;'l'
   266   00102F  65                 	db	101	;'e'
   267   001030  3A                 	db	58	;':'
   268   001031  20                 	db	32
   269   001032  36                 	db	54	;'6'
   270   001033  2D                 	db	45
   271   001034  3E                 	db	62	;'>'
   272   001035  39                 	db	57	;'9'
   273   001036  33                 	db	51	;'3'
   274   001037  25                 	db	37
   275   001038  00                 	db	0
   276   001039                     STR_4:
   277   001039  20                 	db	32
   278   00103A  20                 	db	32
   279   00103B  20                 	db	32
   280   00103C  20                 	db	32
   281   00103D  20                 	db	32
   282   00103E  50                 	db	80	;'P'
   283   00103F  75                 	db	117	;'u'
   284   001040  6C                 	db	108	;'l'
   285   001041  73                 	db	115	;'s'
   286   001042  65                 	db	101	;'e'
   287   001043  20                 	db	32
   288   001044  4D                 	db	77	;'M'
   289   001045  65                 	db	101	;'e'
   290   001046  74                 	db	116	;'t'
   291   001047  65                 	db	101	;'e'
   292   001048  72                 	db	114	;'r'
   293   001049  20                 	db	32
   294   00104A  00                 	db	0
   295   00104B                     STR_5:
   296   00104B  20                 	db	32
   297   00104C  20                 	db	32
   298   00104D  20                 	db	32
   299   00104E  20                 	db	32
   300   00104F  20                 	db	32
   301   001050  46                 	db	70	;'F'
   302   001051  6F                 	db	111	;'o'
   303   001052  72                 	db	114	;'r'
   304   001053  20                 	db	32
   305   001054  41                 	db	65	;'A'
   306   001055  63                 	db	99	;'c'
   307   001056  63                 	db	99	;'c'
   308   001057  75                 	db	117	;'u'
   309   001058  72                 	db	114	;'r'
   310   001059  61                 	db	97	;'a'
   311   00105A  63                 	db	99	;'c'
   312   00105B  79                 	db	121	;'y'
   313   00105C  00                 	db	0
   314   00105D                     STR_10:
   315   00105D  20                 	db	32
   316   00105E  44                 	db	68	;'D'
   317   00105F  75                 	db	117	;'u'
   318   001060  74                 	db	116	;'t'
   319   001061  79                 	db	121	;'y'
   320   001062  20                 	db	32
   321   001063  43                 	db	67	;'C'
   322   001064  79                 	db	121	;'y'
   323   001065  63                 	db	99	;'c'
   324   001066  6C                 	db	108	;'l'
   325   001067  65                 	db	101	;'e'
   326   001068  20                 	db	32
   327   001069  3D                 	db	61	;'='
   328   00106A  20                 	db	32
   329   00106B  00                 	db	0
   330   00106C                     STR_8:
   331   00106C  20                 	db	32
   332   00106D  46                 	db	70	;'F'
   333   00106E  72                 	db	114	;'r'
   334   00106F  65                 	db	101	;'e'
   335   001070  71                 	db	113	;'q'
   336   001071  75                 	db	117	;'u'
   337   001072  65                 	db	101	;'e'
   338   001073  6E                 	db	110	;'n'
   339   001074  63                 	db	99	;'c'
   340   001075  79                 	db	121	;'y'
   341   001076  20                 	db	32
   342   001077  3D                 	db	61	;'='
   343   001078  20                 	db	32
   344   001079  00                 	db	0
   345   00107A                     STR_9:
   346   00107A  48                 	db	72	;'H'
   347   00107B  7A                 	db	122	;'z'
   348   00107C  20                 	db	32
   349   00107D  20                 	db	32
   350   00107E  20                 	db	32
   351   00107F  00                 	db	0
   352   001080                     STR_11:
   353   001080  25                 	db	37
   354   001081  20                 	db	32
   355   001082  20                 	db	32
   356   001083  20                 	db	32
   357   001084  00                 	db	0
   358   001085                     STR_1:
   359   001085  25                 	db	37
   360   001086  69                 	db	105	;'i'
   361   001087  00                 	db	0
   362   001088  00                 	db	0	; dummy byte at the end
   363   000000                     
   364                           	psect	nvBANK0
   365   0000FF                     __pnvBANK0:
   366                           	callstack 0
   367   0000FF                     _ret:
   368                           	callstack 0
   369   0000FF                     	ds	1
   370   000000                     _ADRESL	set	4035
   371   000000                     _ADRESH	set	4036
   372   000000                     _TMR0H	set	4055
   373                           
   374                           ; #config settings
   375                           
   376                           	psect	cinit
   377   00399C                     __pcinit:
   378                           	callstack 0
   379   00399C                     start_initialization:
   380                           	callstack 0
   381   00399C                     __initialization:
   382                           	callstack 0
   383                           
   384                           ; Initialize objects allocated to BANK1 (20 bytes)
   385                           ; load TBLPTR registers with __pidataBANK1
   386   00399C  0E58               	movlw	low __pidataBANK1
   387   00399E  6EF6               	movwf	tblptrl,c
   388   0039A0  0E43               	movlw	high __pidataBANK1
   389   0039A2  6EF7               	movwf	tblptrh,c
   390   0039A4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   391   0039A6  6EF8               	movwf	tblptru,c
   392   0039A8  EE01  F086         	lfsr	0,__pdataBANK1
   393   0039AC  EE10 F014          	lfsr	1,20
   394   0039B0                     copy_data0:
   395   0039B0  0009               	tblrd		*+
   396   0039B2  CFF5 FFEE          	movff	tablat,postinc0
   397   0039B6  50E5               	movf	postdec1,w,c
   398   0039B8  50E1               	movf	fsr1l,w,c
   399   0039BA  E1FA               	bnz	copy_data0
   400                           
   401                           ; Initialize objects allocated to BANK0 (16 bytes)
   402                           ; load TBLPTR registers with __pidataBANK0
   403   0039BC  0E7E               	movlw	low __pidataBANK0
   404   0039BE  6EF6               	movwf	tblptrl,c
   405   0039C0  0E43               	movlw	high __pidataBANK0
   406   0039C2  6EF7               	movwf	tblptrh,c
   407   0039C4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   408   0039C6  6EF8               	movwf	tblptru,c
   409   0039C8  EE00  F0EF         	lfsr	0,__pdataBANK0
   410   0039CC  EE10 F010          	lfsr	1,16
   411   0039D0                     copy_data1:
   412   0039D0  0009               	tblrd		*+
   413   0039D2  CFF5 FFEE          	movff	tablat,postinc0
   414   0039D6  50E5               	movf	postdec1,w,c
   415   0039D8  50E1               	movf	fsr1l,w,c
   416   0039DA  E1FA               	bnz	copy_data1
   417                           
   418                           ; Initialize objects allocated to COMRAM (1 bytes)
   419                           ; load TBLPTR registers with __pidataCOMRAM
   420   0039DC  0E34               	movlw	low __pidataCOMRAM
   421   0039DE  6EF6               	movwf	tblptrl,c
   422   0039E0  0E44               	movlw	high __pidataCOMRAM
   423   0039E2  6EF7               	movwf	tblptrh,c
   424   0039E4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   425   0039E6  6EF8               	movwf	tblptru,c
   426   0039E8  0009               	tblrd		*+	;fetch initializer
   427   0039EA  CFF5 F057          	movff	tablat,__pdataCOMRAM
   428                           
   429                           ; Clear objects allocated to BANK1 (94 bytes)
   430   0039EE  EE01  F000         	lfsr	0,__pbssBANK1
   431   0039F2  0E5E               	movlw	94
   432   0039F4                     clear_0:
   433   0039F4  6AEE               	clrf	postinc0,c
   434   0039F6  06E8               	decf	wreg,f,c
   435   0039F8  E1FD               	bnz	clear_0
   436                           
   437                           ; Clear objects allocated to BANK0 (41 bytes)
   438   0039FA  EE00  F0C6         	lfsr	0,__pbssBANK0
   439   0039FE  0E29               	movlw	41
   440   003A00                     clear_1:
   441   003A00  6AEE               	clrf	postinc0,c
   442   003A02  06E8               	decf	wreg,f,c
   443   003A04  E1FD               	bnz	clear_1
   444                           
   445                           ; Clear objects allocated to COMRAM (38 bytes)
   446   003A06  EE00  F031         	lfsr	0,__pbssCOMRAM
   447   003A0A  0E26               	movlw	38
   448   003A0C                     clear_2:
   449   003A0C  6AEE               	clrf	postinc0,c
   450   003A0E  06E8               	decf	wreg,f,c
   451   003A10  E1FD               	bnz	clear_2
   452   003A12                     end_of_initialization:
   453                           	callstack 0
   454   003A12                     __end_of__initialization:
   455                           	callstack 0
   456   003A12  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   457   003A14  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   458   003A16  0100               	movlb	0
   459   003A18  EFA8  F01F         	goto	_main	;jump to C main() function
   460                           
   461                           	psect	bssCOMRAM
   462   000031                     __pbssCOMRAM:
   463                           	callstack 0
   464   000031                     _timer3_preload:
   465                           	callstack 0
   466   000031                     	ds	2
   467   000033                     _timer1_preload:
   468                           	callstack 0
   469   000033                     	ds	2
   470   000035                     _TMR1_InterruptHandler:
   471                           	callstack 0
   472   000035                     	ds	2
   473   000037                     _timer0_preload:
   474                           	callstack 0
   475   000037                     	ds	2
   476   000039                     _RB4_InterruptHandler:
   477                           	callstack 0
   478   000039                     	ds	2
   479   00003B                     _INT2_InterruptHandler:
   480                           	callstack 0
   481   00003B                     	ds	2
   482   00003D                     _INT1_InterruptHandler:
   483                           	callstack 0
   484   00003D                     	ds	2
   485   00003F                     CCP_Capture_Mode_Read_Value@F3461:
   486                           	callstack 0
   487   00003F                     	ds	2
   488   000041                     _CCP2_InterruptHandler:
   489                           	callstack 0
   490   000041                     	ds	2
   491   000043                     _CCP1_InterruptHandler:
   492                           	callstack 0
   493   000043                     	ds	2
   494   000045                     _ADC_InterruptHandler:
   495                           	callstack 0
   496   000045                     	ds	2
   497   000047                     _flags:
   498                           	callstack 0
   499   000047                     	ds	1
   500   000048                     _compare_flag:
   501                           	callstack 0
   502   000048                     	ds	1
   503   000049                     _ovf_cnt:
   504                           	callstack 0
   505   000049                     	ds	1
   506   00004A                     _timer2_preload:
   507                           	callstack 0
   508   00004A                     	ds	1
   509   00004B                     _RB7_pin_init_value:
   510                           	callstack 0
   511   00004B                     	ds	1
   512   00004C                     _RB6_pin_init_value:
   513                           	callstack 0
   514   00004C                     	ds	1
   515   00004D                     _RB5_pin_init_value:
   516                           	callstack 0
   517   00004D                     	ds	1
   518   00004E                     _RB4_pin_init_value:
   519                           	callstack 0
   520   00004E                     	ds	1
   521   00004F                     relay_turn_off@F3323:
   522                           	callstack 0
   523   00004F                     	ds	1
   524   000050                     relay_turn_on@F3318:
   525                           	callstack 0
   526   000050                     	ds	1
   527   000051                     relay_initialize@F3313:
   528                           	callstack 0
   529   000051                     	ds	1
   530   000052                     led_toggle@F3334:
   531                           	callstack 0
   532   000052                     	ds	1
   533   000053                     led_turn_off@F3329:
   534                           	callstack 0
   535   000053                     	ds	1
   536   000054                     led_turn_on@F3324:
   537                           	callstack 0
   538   000054                     	ds	1
   539   000055                     led_initialize@F3319:
   540                           	callstack 0
   541   000055                     	ds	1
   542   000056                     _Duty_Cycle:
   543                           	callstack 0
   544   000056                     	ds	1
   545                           
   546                           	psect	dataCOMRAM
   547   000057                     __pdataCOMRAM:
   548                           	callstack 0
   549   000057                     _led1:
   550                           	callstack 0
   551   000057                     	ds	1
   552                           
   553                           	psect	bssBANK0
   554   0000C6                     __pbssBANK0:
   555                           	callstack 0
   556   0000C6                     _width:
   557                           	callstack 0
   558   0000C6                     	ds	2
   559   0000C8                     _prec:
   560                           	callstack 0
   561   0000C8                     	ds	2
   562   0000CA                     _TMR3_InterruptHandler:
   563                           	callstack 0
   564   0000CA                     	ds	2
   565   0000CC                     _TMR0_InterruptHandler:
   566                           	callstack 0
   567   0000CC                     	ds	2
   568   0000CE                     _RB7_InterruptHandler:
   569                           	callstack 0
   570   0000CE                     	ds	2
   571   0000D0                     _RB6_InterruptHandler:
   572                           	callstack 0
   573   0000D0                     	ds	2
   574   0000D2                     _RB5_InterruptHandler:
   575                           	callstack 0
   576   0000D2                     	ds	2
   577   0000D4                     _INT0_InterruptHandler:
   578                           	callstack 0
   579   0000D4                     	ds	2
   580   0000D6                     _cap_flag:
   581                           	callstack 0
   582   0000D6                     	ds	1
   583   0000D7                     _timer1_obj:
   584                           	callstack 0
   585   0000D7                     	ds	6
   586   0000DD                     _Cap3:
   587                           	callstack 0
   588   0000DD                     	ds	4
   589   0000E1                     _Cap2:
   590                           	callstack 0
   591   0000E1                     	ds	4
   592   0000E5                     _Cap1:
   593                           	callstack 0
   594   0000E5                     	ds	4
   595   0000E9                     _Frequency:
   596                           	callstack 0
   597   0000E9                     	ds	4
   598   0000ED                     _timer2_obj:
   599                           	callstack 0
   600   0000ED                     	ds	2
   601                           
   602                           	psect	dataBANK0
   603   0000EF                     __pdataBANK0:
   604                           	callstack 0
   605   0000EF                     _tris_registers:
   606                           	callstack 0
   607   0000EF                     	ds	10
   608   0000F9                     _lcd1:
   609                           	callstack 0
   610   0000F9                     	ds	6
   611                           
   612                           	psect	bssBANK1
   613   000100                     __pbssBANK1:
   614                           	callstack 0
   615   000100                     	ds	11
   616   00010B                     _timer3_obj:
   617                           	callstack 0
   618   00010B                     	ds	6
   619   000111                     	ds	6
   620   000117                     	ds	5
   621   00011C                     	ds	4
   622   000120                     	ds	4
   623   000124                     _dbuf:
   624                           	callstack 0
   625   000124                     	ds	32
   626   000144                     _ccp1_obj:
   627                           	callstack 0
   628   000144                     	ds	13
   629   000151                     _ccp2_obj:
   630                           	callstack 0
   631   000151                     	ds	13
   632                           
   633                           	psect	dataBANK1
   634   000186                     __pdataBANK1:
   635                           	callstack 0
   636   000186                     _port_registers:
   637                           	callstack 0
   638   000186                     	ds	10
   639   000190                     _lat_registers:
   640                           	callstack 0
   641   000190                     	ds	10
   642                           
   643                           	psect	cstackBANK1
   644   00015E                     __pcstackBANK1:
   645                           	callstack 0
   646   00015E                     ?___fltol:
   647                           	callstack 0
   648   00015E                     sprintf@ap:
   649                           	callstack 0
   650   00015E                     ___fltol@f1:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x0
   654   00015E                     	ds	2
   655   000160                     sprintf@f:
   656                           	callstack 0
   657                           
   658                           ; 12 bytes @ 0x2
   659   000160                     	ds	2
   660   000162                     ??___fltol:
   661                           
   662                           ; 1 bytes @ 0x4
   663   000162                     	ds	4
   664   000166                     CCP_PWM_Set_Duty@_ccp_obj:
   665                           	callstack 0
   666   000166                     Pulse_Meter_Calculate@XTAL_FREQ_MHZ:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x8
   670   000166                     	ds	2
   671   000168                     CCP_PWM_Set_Duty@_duty:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0xA
   675   000168                     	ds	1
   676   000169                     ??_CCP_PWM_Set_Duty:
   677                           
   678                           ; 1 bytes @ 0xB
   679   000169                     	ds	1
   680   00016A                     Pulse_Meter_Calculate@TimerPrescaler:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0xC
   684   00016A                     	ds	1
   685   00016B                     CCP_PWM_Set_Duty@l_duty_temp:
   686                           	callstack 0
   687   00016B                     Pulse_Meter_Calculate@Pulse_Freq:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0xD
   691   00016B                     	ds	1
   692   00016C                     convert_uint32_to_string@Temp_str:
   693                           	callstack 0
   694                           
   695                           ; 11 bytes @ 0xE
   696   00016C                     	ds	1
   697   00016D                     Pulse_Meter_Calculate@Pulse_Duty_Cycle:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0xF
   701   00016D                     	ds	2
   702   00016F                     Pulse_Meter_Calculate@Freq:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x11
   706   00016F                     	ds	4
   707   000173                     Pulse_Meter_Calculate@Duty_Cycle:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x15
   711   000173                     	ds	4
   712   000177                     convert_uint32_to_string@cnt:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0x19
   716   000177                     	ds	1
   717   000178                     Pulse_Meter_Display@Pulse_Freq:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x1A
   721   000178                     	ds	4
   722   00017C                     Pulse_Meter_Display@Pulse_Duty_Cycle:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0x1E
   726   00017C                     	ds	1
   727   00017D                     Pulse_Meter_Display@Freq_Str:
   728                           	callstack 0
   729                           
   730                           ; 5 bytes @ 0x1F
   731   00017D                     	ds	5
   732   000182                     Pulse_Meter_Display@Duty_Cycle_Str:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x24
   736   000182                     	ds	4
   737                           
   738                           	psect	cstackBANK0
   739   000080                     __pcstackBANK0:
   740                           	callstack 0
   741   000080                     ??_abs:
   742   000080                     gpio_pin_write_logic@ret:
   743                           	callstack 0
   744   000080                     memset@k:
   745                           	callstack 0
   746   000080                     fputs@s:
   747                           	callstack 0
   748   000080                     ___lmul@product:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x0
   752   000080                     	ds	1
   753   000081                     lcd_send_4bits@lcd:
   754                           	callstack 0
   755   000081                     lcd_4bit_send_enable_signal@lcd:
   756                           	callstack 0
   757   000081                     gpio_pin_initialize@pin_config:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x1
   761   000081                     	ds	1
   762   000082                     memset@s:
   763                           	callstack 0
   764   000082                     fputs@fp:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x2
   768   000082                     	ds	1
   769   000083                     ??_gpio_pin_initialize:
   770   000083                     lcd_send_4bits@_data_command:
   771                           	callstack 0
   772   000083                     lcd_4bit_send_enable_signal@ret:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x3
   776   000083                     	ds	1
   777   000084                     ?___lldiv:
   778                           	callstack 0
   779   000084                     ?___xxtofl:
   780                           	callstack 0
   781   000084                     lcd_send_4bits@ret:
   782                           	callstack 0
   783   000084                     gpio_pin_initialize@ret:
   784                           	callstack 0
   785   000084                     fputs@c:
   786                           	callstack 0
   787   000084                     ___lldiv@dividend:
   788                           	callstack 0
   789   000084                     ___xxtofl@val:
   790                           	callstack 0
   791                           
   792                           ; 4 bytes @ 0x4
   793   000084                     	ds	1
   794   000085                     lcd_4bit_send_command@lcd:
   795                           	callstack 0
   796   000085                     lcd_4bit_send_char_data@lcd:
   797                           	callstack 0
   798   000085                     fputs@i:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x5
   802   000085                     	ds	2
   803   000087                     lcd_4bit_send_command@command:
   804                           	callstack 0
   805   000087                     lcd_4bit_send_char_data@data:
   806                           	callstack 0
   807   000087                     pad@fp:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x7
   811   000087                     	ds	1
   812   000088                     ??___xxtofl:
   813   000088                     lcd_4bit_send_command@ret:
   814                           	callstack 0
   815   000088                     lcd_4bit_send_char_data@ret:
   816                           	callstack 0
   817   000088                     ___lldiv@divisor:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x8
   821   000088                     	ds	1
   822   000089                     lcd_4bit_initialize@lcd:
   823                           	callstack 0
   824   000089                     lcd_4bit_send_string@lcd:
   825                           	callstack 0
   826   000089                     lcd_4bit_set_cursor@lcd:
   827                           	callstack 0
   828   000089                     pad@buf:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x9
   832   000089                     	ds	2
   833   00008B                     ??_lcd_4bit_initialize:
   834   00008B                     lcd_4bit_set_cursor@row:
   835                           	callstack 0
   836   00008B                     lcd_4bit_send_string@str:
   837                           	callstack 0
   838   00008B                     pad@p:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0xB
   842   00008B                     	ds	1
   843   00008C                     lcd_4bit_set_cursor@column:
   844                           	callstack 0
   845   00008C                     ___xxtofl@sign:
   846                           	callstack 0
   847   00008C                     ___lldiv@quotient:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0xC
   851   00008C                     	ds	1
   852   00008D                     ??_lcd_4bit_set_cursor:
   853   00008D                     ??_pad:
   854   00008D                     lcd_4bit_initialize@l_data_pins_counter:
   855                           	callstack 0
   856   00008D                     ___xxtofl@exp:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0xD
   860   00008D                     	ds	1
   861   00008E                     lcd_4bit_initialize@ret:
   862                           	callstack 0
   863   00008E                     pad@i:
   864                           	callstack 0
   865   00008E                     ___xxtofl@arg:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0xE
   869   00008E                     	ds	1
   870   00008F                     lcd_4bit_send_string_pos@lcd:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0xF
   874   00008F                     	ds	1
   875   000090                     ___lldiv@counter:
   876                           	callstack 0
   877   000090                     pad@w:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x10
   881   000090                     	ds	1
   882   000091                     lcd_4bit_send_string_pos@row:
   883                           	callstack 0
   884   000091                     CCP_PWM_Mode_Init@_ccp_obj:
   885                           	callstack 0
   886                           
   887                           ; 2 bytes @ 0x11
   888   000091                     	ds	1
   889   000092                     ?___flmul:
   890                           	callstack 0
   891   000092                     lcd_4bit_send_string_pos@column:
   892                           	callstack 0
   893   000092                     dtoa@fp:
   894                           	callstack 0
   895   000092                     ___flmul@b:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0x12
   899   000092                     	ds	1
   900   000093                     CCP_PWM_Mode_Init@ret:
   901                           	callstack 0
   902   000093                     lcd_4bit_send_string_pos@str:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x13
   906   000093                     	ds	1
   907   000094                     CCP_Init@_ccp_obj:
   908                           	callstack 0
   909   000094                     dtoa@d:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x14
   913   000094                     	ds	1
   914   000095                     ??_Welcome_Message:
   915                           
   916                           ; 1 bytes @ 0x15
   917   000095                     	ds	1
   918   000096                     ??_CCP_Init:
   919   000096                     _dtoa$3386:
   920                           	callstack 0
   921   000096                     ___flmul@a:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x16
   925   000096                     	ds	2
   926   000098                     CCP_Init@ret:
   927                           	callstack 0
   928   000098                     dtoa@p:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x18
   932   000098                     	ds	2
   933   00009A                     ??___flmul:
   934   00009A                     dtoa@w:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x1A
   938   00009A                     	ds	2
   939   00009C                     dtoa@s:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x1C
   943   00009C                     	ds	1
   944   00009D                     dtoa@i:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x1D
   948   00009D                     	ds	1
   949   00009E                     ___flmul@sign:
   950                           	callstack 0
   951                           
   952                           ; 1 bytes @ 0x1E
   953   00009E                     	ds	1
   954   00009F                     ___flmul@aexp:
   955                           	callstack 0
   956   00009F                     vfpfcnvrt@fp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x1F
   960   00009F                     	ds	1
   961   0000A0                     ___flmul@grs:
   962                           	callstack 0
   963                           
   964                           ; 4 bytes @ 0x20
   965   0000A0                     	ds	1
   966   0000A1                     vfpfcnvrt@fmt:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x21
   970   0000A1                     	ds	2
   971   0000A3                     vfpfcnvrt@ap:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x23
   975   0000A3                     	ds	1
   976   0000A4                     ___flmul@bexp:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x24
   980   0000A4                     	ds	1
   981   0000A5                     ??_vfpfcnvrt:
   982   0000A5                     ___flmul@prod:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x25
   986   0000A5                     	ds	2
   987   0000A7                     vfpfcnvrt@convarg:
   988                           	callstack 0
   989                           
   990                           ; 4 bytes @ 0x27
   991   0000A7                     	ds	2
   992   0000A9                     ___flmul@temp:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x29
   996   0000A9                     	ds	2
   997   0000AB                     ?___fldiv:
   998                           	callstack 0
   999   0000AB                     vfpfcnvrt@cp:
  1000                           	callstack 0
  1001   0000AB                     ___fldiv@b:
  1002                           	callstack 0
  1003                           
  1004                           ; 4 bytes @ 0x2B
  1005   0000AB                     	ds	2
  1006   0000AD                     ?_vfprintf:
  1007                           	callstack 0
  1008   0000AD                     vfprintf@fp:
  1009                           	callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x2D
  1012   0000AD                     	ds	2
  1013   0000AF                     vfprintf@fmt:
  1014                           	callstack 0
  1015   0000AF                     ___fldiv@a:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x2F
  1019   0000AF                     	ds	2
  1020   0000B1                     vfprintf@ap:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x31
  1024   0000B1                     	ds	2
  1025   0000B3                     ??___fldiv:
  1026   0000B3                     vfprintf@cfmt:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x33
  1030   0000B3                     	ds	2
  1031   0000B5                     ?_sprintf:
  1032                           	callstack 0
  1033   0000B5                     sprintf@s:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x35
  1037   0000B5                     	ds	2
  1038   0000B7                     sprintf@fmt:
  1039                           	callstack 0
  1040   0000B7                     ___fldiv@rem:
  1041                           	callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x37
  1044   0000B7                     	ds	4
  1045   0000BB                     ___fldiv@sign:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x3B
  1049   0000BB                     	ds	1
  1050   0000BC                     ___fldiv@new_exp:
  1051                           	callstack 0
  1052                           
  1053                           ; 2 bytes @ 0x3C
  1054   0000BC                     	ds	1
  1055   0000BD                     convert_uint8_to_string@str:
  1056                           	callstack 0
  1057   0000BD                     convert_uint32_to_string@value:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x3D
  1061   0000BD                     	ds	1
  1062   0000BE                     ___fldiv@grs:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x3E
  1066   0000BE                     	ds	1
  1067   0000BF                     convert_uint8_to_string@Temp_str:
  1068                           	callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x3F
  1071   0000BF                     	ds	2
  1072   0000C1                     convert_uint32_to_string@str:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x41
  1076   0000C1                     	ds	1
  1077   0000C2                     ___fldiv@bexp:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x42
  1081   0000C2                     	ds	1
  1082   0000C3                     convert_uint8_to_string@value:
  1083                           	callstack 0
  1084   0000C3                     ___fldiv@aexp:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x43
  1088   0000C3                     	ds	1
  1089   0000C4                     convert_uint8_to_string@cnt:
  1090                           	callstack 0
  1091   0000C4                     ___fltol@sign1:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x44
  1095   0000C4                     	ds	1
  1096   0000C5                     ___fltol@exp1:
  1097                           	callstack 0
  1098                           
  1099                           ; 1 bytes @ 0x45
  1100   0000C5                     	ds	1
  1101                           
  1102                           	psect	cstackCOMRAM
  1103   000001                     __pcstackCOMRAM:
  1104                           	callstack 0
  1105   000001                     i2CCP_Capture_Mode_Read_Value@_ccp_obj:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x0
  1109   000001                     	ds	2
  1110   000003                     i2CCP_Capture_Mode_Read_Value@capture_value:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x2
  1114   000003                     	ds	2
  1115   000005                     ??i2_CCP_Capture_Mode_Read_Value:
  1116                           
  1117                           ; 1 bytes @ 0x4
  1118   000005                     	ds	4
  1119   000009                     i2CCP_Capture_Mode_Read_Value@capture_temp_value:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x8
  1123   000009                     	ds	2
  1124   00000B                     ??i2_CCP1_Callback_ISR:
  1125                           
  1126                           ; 1 bytes @ 0xA
  1127   00000B                     	ds	4
  1128   00000F                     ??_InterruptManagerHigh:
  1129   00000F                     
  1130                           ; 1 bytes @ 0xE
  1131   00000F                     	ds	4
  1132   000013                     CCP_Capture_Mode_Read_Value@_ccp_obj:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x12
  1136   000013                     	ds	2
  1137   000015                     CCP_Capture_Mode_Read_Value@capture_value:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x14
  1141   000015                     	ds	2
  1142   000017                     ??_CCP_Capture_Mode_Read_Value:
  1143                           
  1144                           ; 1 bytes @ 0x16
  1145   000017                     	ds	4
  1146   00001B                     CCP_Capture_Mode_Read_Value@capture_temp_value:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x1A
  1150   00001B                     	ds	2
  1151   00001D                     ??_CCP1_Callback_ISR:
  1152                           
  1153                           ; 1 bytes @ 0x1C
  1154   00001D                     	ds	4
  1155   000021                     ??_InterruptManagerLow:
  1156                           
  1157                           ; 1 bytes @ 0x20
  1158   000021                     	ds	7
  1159   000028                     ?___awdiv:
  1160                           	callstack 0
  1161   000028                     ?___awmod:
  1162                           	callstack 0
  1163   000028                     ?___lmul:
  1164                           	callstack 0
  1165   000028                     CCP_Capture_Compare_Timer_Config@_ccp_obj:
  1166                           	callstack 0
  1167   000028                     CCP1_Interrupt_Init@_ccp_obj:
  1168                           	callstack 0
  1169   000028                     CCP2_Interrupt_Init@_ccp_obj:
  1170                           	callstack 0
  1171   000028                     gpio_pin_direction_initialize@pin_config:
  1172                           	callstack 0
  1173   000028                     gpio_pin_write_logic@pin_config:
  1174                           	callstack 0
  1175   000028                     Timer1_Write_Value@_timer:
  1176                           	callstack 0
  1177   000028                     Timer1_Mode_Select@_timer:
  1178                           	callstack 0
  1179   000028                     Timer2_Init@_timer:
  1180                           	callstack 0
  1181   000028                     ___awdiv@dividend:
  1182                           	callstack 0
  1183   000028                     ___awmod@dividend:
  1184                           	callstack 0
  1185   000028                     memset@dest:
  1186                           	callstack 0
  1187   000028                     fputc@c:
  1188                           	callstack 0
  1189   000028                     ___lmul@multiplier:
  1190                           	callstack 0
  1191                           
  1192                           ; 4 bytes @ 0x27
  1193   000028                     	ds	2
  1194   00002A                     ??_gpio_pin_direction_initialize:
  1195   00002A                     ??_Timer2_Init:
  1196   00002A                     gpio_pin_write_logic@logic:
  1197                           	callstack 0
  1198   00002A                     Timer1_Init@_timer:
  1199                           	callstack 0
  1200   00002A                     Timer1_Write_Value@_value:
  1201                           	callstack 0
  1202   00002A                     ___awdiv@divisor:
  1203                           	callstack 0
  1204   00002A                     ___awmod@divisor:
  1205                           	callstack 0
  1206   00002A                     memset@c:
  1207                           	callstack 0
  1208   00002A                     fputc@fp:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x29
  1212   00002A                     	ds	1
  1213   00002B                     ??_gpio_pin_write_logic:
  1214   00002B                     Timer2_Init@ret:
  1215                           	callstack 0
  1216   00002B                     CCP_Capture_Mode_Init@_ccp_obj:
  1217                           	callstack 0
  1218   00002B                     CCP_Interrupt_Init@_ccp_obj:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x2A
  1222   00002B                     	ds	1
  1223   00002C                     ??_fputc:
  1224   00002C                     ??_Timer1_Init:
  1225   00002C                     ___awdiv@counter:
  1226                           	callstack 0
  1227   00002C                     ___awmod@counter:
  1228                           	callstack 0
  1229   00002C                     memset@n:
  1230                           	callstack 0
  1231   00002C                     ___lmul@multiplicand:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x2B
  1235   00002C                     	ds	1
  1236   00002D                     ??_CCP_Capture_Mode_Init:
  1237   00002D                     ??_CCP_Interrupt_Init:
  1238   00002D                     ___awdiv@sign:
  1239                           	callstack 0
  1240   00002D                     ___awmod@sign:
  1241                           	callstack 0
  1242                           
  1243                           ; 1 bytes @ 0x2C
  1244   00002D                     	ds	1
  1245   00002E                     ??_memset:
  1246   00002E                     ?_abs:
  1247                           	callstack 0
  1248   00002E                     Timer1_Init@ret:
  1249                           	callstack 0
  1250   00002E                     ___awdiv@quotient:
  1251                           	callstack 0
  1252   00002E                     abs@a:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x2D
  1256   00002E                     	ds	1
  1257   00002F                     CCP_Capture_Mode_Init@ret:
  1258                           	callstack 0
  1259   00002F                     CCP_Interrupt_Init@ret:
  1260                           	callstack 0
  1261                           
  1262                           ; 1 bytes @ 0x2E
  1263   00002F                     	ds	1
  1264   000030                     ??_CCP_PWM_Mode_Init:
  1265   000030                     gpio_pin_direction_initialize@ret:
  1266                           	callstack 0
  1267                           
  1268                           ; 1 bytes @ 0x2F
  1269   000030                     	ds	1
  1270   000031                     
  1271                           ; 1 bytes @ 0x30
  1272 ;;
  1273 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1274 ;;
  1275 ;; *************** function _main *****************
  1276 ;; Defined at:
  1277 ;;		line 22 in file "application.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;		None
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;		None
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  2  1380[None  ] int 
  1284 ;; Registers used:
  1285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;Total ram usage:        0 bytes
  1296 ;; Hardware stack levels required when called: 18
  1297 ;; This function calls:
  1298 ;;		_CCP_PWM_Set_Duty
  1299 ;;		_Pulse_Meter_Calculate
  1300 ;;		_Pulse_Meter_Display
  1301 ;;		_Pulse_Meter_Init
  1302 ;;		_Welcome_Message
  1303 ;; This function is called by:
  1304 ;;		Startup code after reset
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text0
  1309   003F50                     __ptext0:
  1310                           	callstack 0
  1311   003F50                     _main:
  1312                           	callstack 13
  1313   003F50                     
  1314                           ;application.c: 25:     Pulse_Meter_Init();
  1315   003F50  ECEE  F021         	call	_Pulse_Meter_Init	;wreg free
  1316   003F54                     
  1317                           ;application.c: 27:     Welcome_Message();
  1318   003F54  EC69  F017         	call	_Welcome_Message	;wreg free
  1319   003F58                     
  1320                           ;application.c: 30:     CCP_PWM_Set_Duty(&ccp2_obj,6);
  1321   003F58  0E51               	movlw	low _ccp2_obj
  1322   003F5A  0101               	movlb	1	; () banked
  1323   003F5C  6F66               	movwf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),b
  1324   003F5E  0E01               	movlw	high _ccp2_obj
  1325   003F60  6F67               	movwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),b
  1326   003F62  0E06               	movlw	6
  1327   003F64  6F68               	movwf	CCP_PWM_Set_Duty@_duty& (0+255),b
  1328   003F66  ECA7  F010         	call	_CCP_PWM_Set_Duty	;wreg free
  1329   003F6A                     l10342:
  1330                           
  1331                           ;application.c: 34:     {;application.c: 35:         Pulse_Meter_Calculate(16,1,&Frequen
      +                          cy,&Duty_Cycle);
  1332   003F6A  0E10               	movlw	16
  1333   003F6C  0101               	movlb	1	; () banked
  1334   003F6E  6F66               	movwf	Pulse_Meter_Calculate@XTAL_FREQ_MHZ& (0+255),b
  1335   003F70  0E00               	movlw	0
  1336   003F72  6F67               	movwf	(Pulse_Meter_Calculate@XTAL_FREQ_MHZ+1)& (0+255),b
  1337   003F74  0E00               	movlw	0
  1338   003F76  6F68               	movwf	(Pulse_Meter_Calculate@XTAL_FREQ_MHZ+2)& (0+255),b
  1339   003F78  0E00               	movlw	0
  1340   003F7A  6F69               	movwf	(Pulse_Meter_Calculate@XTAL_FREQ_MHZ+3)& (0+255),b
  1341   003F7C  0E01               	movlw	1
  1342   003F7E  6F6A               	movwf	Pulse_Meter_Calculate@TimerPrescaler& (0+255),b
  1343   003F80  0EE9               	movlw	low _Frequency
  1344   003F82  6F6B               	movwf	Pulse_Meter_Calculate@Pulse_Freq& (0+255),b
  1345   003F84  0E00               	movlw	high _Frequency
  1346   003F86  6F6C               	movwf	(Pulse_Meter_Calculate@Pulse_Freq+1)& (0+255),b
  1347   003F88  0E56               	movlw	low _Duty_Cycle
  1348   003F8A  6F6D               	movwf	Pulse_Meter_Calculate@Pulse_Duty_Cycle& (0+255),b
  1349   003F8C  0E00               	movlw	high _Duty_Cycle
  1350   003F8E  6F6E               	movwf	(Pulse_Meter_Calculate@Pulse_Duty_Cycle+1)& (0+255),b
  1351   003F90  EC51  F00D         	call	_Pulse_Meter_Calculate	;wreg free
  1352   003F94                     
  1353                           ;application.c: 36:         Pulse_Meter_Display(Frequency,Duty_Cycle);
  1354   003F94  C0E9  F178         	movff	_Frequency,Pulse_Meter_Display@Pulse_Freq
  1355   003F98  C0EA  F179         	movff	_Frequency+1,Pulse_Meter_Display@Pulse_Freq+1
  1356   003F9C  C0EB  F17A         	movff	_Frequency+2,Pulse_Meter_Display@Pulse_Freq+2
  1357   003FA0  C0EC  F17B         	movff	_Frequency+3,Pulse_Meter_Display@Pulse_Freq+3
  1358   003FA4  C056  F17C         	movff	_Duty_Cycle,Pulse_Meter_Display@Pulse_Duty_Cycle
  1359   003FA8  EC59  F018         	call	_Pulse_Meter_Display	;wreg free
  1360   003FAC  EFB5  F01F         	goto	l10342
  1361   003FB0  EF30  F001         	goto	start
  1362   003FB4                     __end_of_main:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _Welcome_Message *****************
  1366 ;; Defined at:
  1367 ;;		line 34 in file "Pulse_Meter.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 13
  1388 ;; This function calls:
  1389 ;;		_lcd_4bit_send_command
  1390 ;;		_lcd_4bit_send_string_pos
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text1
  1397   002ED2                     __ptext1:
  1398                           	callstack 0
  1399   002ED2                     _Welcome_Message:
  1400                           	callstack 17
  1401   002ED2                     
  1402                           ;Pulse_Meter.c: 36:     lcd_4bit_send_string_pos(&lcd1, 1, 1, "     Pulse Meter ");
  1403   002ED2  0EF9               	movlw	low _lcd1
  1404   002ED4  0100               	movlb	0	; () banked
  1405   002ED6  6F8F               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  1406   002ED8  0E00               	movlw	high _lcd1
  1407   002EDA  6F90               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  1408   002EDC  0E01               	movlw	1
  1409   002EDE  6F91               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  1410   002EE0  0E01               	movlw	1
  1411   002EE2  6F92               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  1412   002EE4  0E39               	movlw	low STR_4
  1413   002EE6  6F93               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  1414   002EE8  0E10               	movlw	high STR_4
  1415   002EEA  6F94               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  1416   002EEC  EC38  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  1417   002EF0                     
  1418                           ;Pulse_Meter.c: 37:     _delay((unsigned long)((300)*(16000000UL/4000.0)));
  1419   002EF0  0E07               	movlw	7
  1420   002EF2  0100               	movlb	0	; () banked
  1421   002EF4  6F96               	movwf	(??_Welcome_Message+1)& (0+255),b
  1422   002EF6  0E17               	movlw	23
  1423   002EF8  6F95               	movwf	??_Welcome_Message& (0+255),b
  1424   002EFA  0E6A               	movlw	106
  1425   002EFC                     u10487:
  1426   002EFC  2EE8               	decfsz	wreg,f,c
  1427   002EFE  D7FE               	bra	u10487
  1428   002F00  2F95               	decfsz	??_Welcome_Message& (0+255),f,b
  1429   002F02  D7FC               	bra	u10487
  1430   002F04  2F96               	decfsz	(??_Welcome_Message+1)& (0+255),f,b
  1431   002F06  D7FA               	bra	u10487
  1432   002F08  F000               	nop	
  1433   002F0A                     
  1434                           ;Pulse_Meter.c: 38:     lcd_4bit_send_string_pos(&lcd1, 2, 1, "     For Accuracy");
  1435   002F0A  0EF9               	movlw	low _lcd1
  1436   002F0C  0100               	movlb	0	; () banked
  1437   002F0E  6F8F               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  1438   002F10  0E00               	movlw	high _lcd1
  1439   002F12  6F90               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  1440   002F14  0E02               	movlw	2
  1441   002F16  6F91               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  1442   002F18  0E01               	movlw	1
  1443   002F1A  6F92               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  1444   002F1C  0E4B               	movlw	low STR_5
  1445   002F1E  6F93               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  1446   002F20  0E10               	movlw	high STR_5
  1447   002F22  6F94               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  1448   002F24  EC38  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  1449                           
  1450                           ;Pulse_Meter.c: 39:     _delay((unsigned long)((300)*(16000000UL/4000.0)));
  1451   002F28  0E07               	movlw	7
  1452   002F2A  0100               	movlb	0	; () banked
  1453   002F2C  6F96               	movwf	(??_Welcome_Message+1)& (0+255),b
  1454   002F2E  0E17               	movlw	23
  1455   002F30  6F95               	movwf	??_Welcome_Message& (0+255),b
  1456   002F32  0E6A               	movlw	106
  1457   002F34                     u10497:
  1458   002F34  2EE8               	decfsz	wreg,f,c
  1459   002F36  D7FE               	bra	u10497
  1460   002F38  2F95               	decfsz	??_Welcome_Message& (0+255),f,b
  1461   002F3A  D7FC               	bra	u10497
  1462   002F3C  2F96               	decfsz	(??_Welcome_Message+1)& (0+255),f,b
  1463   002F3E  D7FA               	bra	u10497
  1464   002F40  F000               	nop	
  1465   002F42                     
  1466                           ;Pulse_Meter.c: 40:     lcd_4bit_send_string_pos(&lcd1, 3, 1, "Frequency: 1->1000Hz");
  1467   002F42  0EF9               	movlw	low _lcd1
  1468   002F44  0100               	movlb	0	; () banked
  1469   002F46  6F8F               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  1470   002F48  0E00               	movlw	high _lcd1
  1471   002F4A  6F90               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  1472   002F4C  0E03               	movlw	3
  1473   002F4E  6F91               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  1474   002F50  0E01               	movlw	1
  1475   002F52  6F92               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  1476   002F54  0E11               	movlw	low STR_6
  1477   002F56  6F93               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  1478   002F58  0E10               	movlw	high STR_6
  1479   002F5A  6F94               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  1480   002F5C  EC38  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  1481   002F60                     
  1482                           ;Pulse_Meter.c: 41:     _delay((unsigned long)((300)*(16000000UL/4000.0)));
  1483   002F60  0E07               	movlw	7
  1484   002F62  0100               	movlb	0	; () banked
  1485   002F64  6F96               	movwf	(??_Welcome_Message+1)& (0+255),b
  1486   002F66  0E17               	movlw	23
  1487   002F68  6F95               	movwf	??_Welcome_Message& (0+255),b
  1488   002F6A  0E6A               	movlw	106
  1489   002F6C                     u10507:
  1490   002F6C  2EE8               	decfsz	wreg,f,c
  1491   002F6E  D7FE               	bra	u10507
  1492   002F70  2F95               	decfsz	??_Welcome_Message& (0+255),f,b
  1493   002F72  D7FC               	bra	u10507
  1494   002F74  2F96               	decfsz	(??_Welcome_Message+1)& (0+255),f,b
  1495   002F76  D7FA               	bra	u10507
  1496   002F78  F000               	nop	
  1497                           
  1498                           ;Pulse_Meter.c: 42:     lcd_4bit_send_string_pos(&lcd1, 4, 1, "Duty Cycle: 6->93%");
  1499   002F7A  0EF9               	movlw	low _lcd1
  1500   002F7C  0100               	movlb	0	; () banked
  1501   002F7E  6F8F               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  1502   002F80  0E00               	movlw	high _lcd1
  1503   002F82  6F90               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  1504   002F84  0E04               	movlw	4
  1505   002F86  6F91               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  1506   002F88  0E01               	movlw	1
  1507   002F8A  6F92               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  1508   002F8C  0E26               	movlw	low STR_7
  1509   002F8E  6F93               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  1510   002F90  0E10               	movlw	high STR_7
  1511   002F92  6F94               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  1512   002F94  EC38  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  1513   002F98                     
  1514                           ;Pulse_Meter.c: 43:     _delay((unsigned long)((2000)*(16000000UL/4000.0)));
  1515   002F98  0E29               	movlw	41
  1516   002F9A  0100               	movlb	0	; () banked
  1517   002F9C  6F96               	movwf	(??_Welcome_Message+1)& (0+255),b
  1518   002F9E  0E96               	movlw	150
  1519   002FA0  6F95               	movwf	??_Welcome_Message& (0+255),b
  1520   002FA2  0E7F               	movlw	127
  1521   002FA4                     u10517:
  1522   002FA4  2EE8               	decfsz	wreg,f,c
  1523   002FA6  D7FE               	bra	u10517
  1524   002FA8  2F95               	decfsz	??_Welcome_Message& (0+255),f,b
  1525   002FAA  D7FC               	bra	u10517
  1526   002FAC  2F96               	decfsz	(??_Welcome_Message+1)& (0+255),f,b
  1527   002FAE  D7FA               	bra	u10517
  1528   002FB0                     
  1529                           ;Pulse_Meter.c: 44:     lcd_4bit_send_command(&lcd1, 0X01);
  1530   002FB0  0EF9               	movlw	low _lcd1
  1531   002FB2  0100               	movlb	0	; () banked
  1532   002FB4  6F85               	movwf	lcd_4bit_send_command@lcd& (0+255),b
  1533   002FB6  0E00               	movlw	high _lcd1
  1534   002FB8  6F86               	movwf	(lcd_4bit_send_command@lcd+1)& (0+255),b
  1535   002FBA  0E01               	movlw	1
  1536   002FBC  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  1537   002FBE  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  1538   002FC2  0012               	return		;funcret
  1539   002FC4                     __end_of_Welcome_Message:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _Pulse_Meter_Init *****************
  1543 ;; Defined at:
  1544 ;;		line 54 in file "Pulse_Meter.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 13
  1565 ;; This function calls:
  1566 ;;		_ecu_layer_initialize
  1567 ;;		_mcal_layer_initialize
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text2
  1574   0043DC                     __ptext2:
  1575                           	callstack 0
  1576   0043DC                     _Pulse_Meter_Init:
  1577                           	callstack 17
  1578   0043DC                     
  1579                           ;Pulse_Meter.c: 56:     mcal_layer_initialize();
  1580   0043DC  ECB6  F021         	call	_mcal_layer_initialize	;wreg free
  1581                           
  1582                           ;Pulse_Meter.c: 57:     ecu_layer_initialize();
  1583   0043E0  ECC7  F021         	call	_ecu_layer_initialize	;wreg free
  1584   0043E4  0012               	return		;funcret
  1585   0043E6                     __end_of_Pulse_Meter_Init:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _mcal_layer_initialize *****************
  1589 ;; Defined at:
  1590 ;;		line 13 in file "MCAL_Layer/mcal_layer_init.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;		None
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;Total ram usage:        0 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 12
  1611 ;; This function calls:
  1612 ;;		_CCP1_Capture_Mode_Init
  1613 ;;		_CCP2_PWM_1KHZ_INIT
  1614 ;;		_Timer1_Timer_Init
  1615 ;;		_Timer2_Timer_Init
  1616 ;; This function is called by:
  1617 ;;		_Pulse_Meter_Init
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text3
  1622   00436C                     __ptext3:
  1623                           	callstack 0
  1624   00436C                     _mcal_layer_initialize:
  1625                           	callstack 17
  1626   00436C                     
  1627                           ;MCAL_Layer/mcal_layer_init.c: 16:     Timer2_Timer_Init();
  1628   00436C  EC88  F021         	call	_Timer2_Timer_Init	;wreg free
  1629   004370                     
  1630                           ;MCAL_Layer/mcal_layer_init.c: 17:     CCP2_PWM_1KHZ_INIT();
  1631   004370  EC7F  F020         	call	_CCP2_PWM_1KHZ_INIT	;wreg free
  1632   004374                     
  1633                           ;MCAL_Layer/mcal_layer_init.c: 23:     Timer1_Timer_Init();
  1634   004374  EC72  F021         	call	_Timer1_Timer_Init	;wreg free
  1635                           
  1636                           ;MCAL_Layer/mcal_layer_init.c: 24:     CCP1_Capture_Mode_Init();
  1637   004378  ECC2  F020         	call	_CCP1_Capture_Mode_Init	;wreg free
  1638   00437C  0012               	return		;funcret
  1639   00437E                     __end_of_mcal_layer_initialize:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _Timer2_Timer_Init *****************
  1643 ;; Defined at:
  1644 ;;		line 27 in file "MCAL_Layer/mcal_layer_init.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; Hardware stack levels required when called: 9
  1665 ;; This function calls:
  1666 ;;		_Timer2_Init
  1667 ;; This function is called by:
  1668 ;;		_mcal_layer_initialize
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text4
  1673   004310                     __ptext4:
  1674                           	callstack 0
  1675   004310                     _Timer2_Timer_Init:
  1676                           	callstack 19
  1677   004310                     
  1678                           ;MCAL_Layer/mcal_layer_init.c: 28:     timer2_obj.timer2_preload_value = 0;
  1679   004310  0E00               	movlw	0
  1680   004312  0100               	movlb	0	; () banked
  1681   004314  6FED               	movwf	_timer2_obj& (0+255),b
  1682                           
  1683                           ;MCAL_Layer/mcal_layer_init.c: 29:     timer2_obj.postscaler_value =1U;
  1684   004316  51EE               	movf	(_timer2_obj+1)& (0+255),w,b
  1685   004318  0BC3               	andlw	-61
  1686   00431A  0904               	iorlw	4
  1687   00431C  6FEE               	movwf	(_timer2_obj+1)& (0+255),b
  1688                           
  1689                           ;MCAL_Layer/mcal_layer_init.c: 30:     timer2_obj.prescaler_value = 2U;
  1690   00431E  51EE               	movf	(_timer2_obj+1)& (0+255),w,b
  1691   004320  0BFC               	andlw	-4
  1692   004322  0902               	iorlw	2
  1693   004324  6FEE               	movwf	(_timer2_obj+1)& (0+255),b
  1694   004326                     
  1695                           ; BSR set to: 0
  1696                           ;MCAL_Layer/mcal_layer_init.c: 31:     ret=Timer2_Init(&timer2_obj);
  1697   004326  0EED               	movlw	low _timer2_obj
  1698   004328  6E28               	movwf	Timer2_Init@_timer^0,c
  1699   00432A  0E00               	movlw	high _timer2_obj
  1700   00432C  6E29               	movwf	(Timer2_Init@_timer+1)^0,c
  1701   00432E  EC0E  F01D         	call	_Timer2_Init	;wreg free
  1702   004332  0100               	movlb	0	; () banked
  1703   004334  6FFF               	movwf	_ret& (0+255),b
  1704   004336                     
  1705                           ; BSR set to: 0
  1706   004336  0012               	return		;funcret
  1707   004338                     __end_of_Timer2_Timer_Init:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _Timer2_Init *****************
  1711 ;; Defined at:
  1712 ;;		line 13 in file "MCAL_Layer/Timer2/hal_timer2.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  _timer          2   39[COMRAM] PTR const struct .
  1715 ;;		 -> timer2_obj(2), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  ret             1   42[COMRAM] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      unsigned char 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1727 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;Total ram usage:        4 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 8
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_Timer2_Timer_Init
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text5
  1742   003A1C                     __ptext5:
  1743                           	callstack 0
  1744   003A1C                     _Timer2_Init:
  1745                           	callstack 19
  1746   003A1C                     
  1747                           ;MCAL_Layer/Timer2/hal_timer2.c: 13: Std_ReturnType Timer2_Init(const timer2_t *_timer);
      +                          MCAL_Layer/Timer2/hal_timer2.c: 14: {;MCAL_Layer/Timer2/hal_timer2.c: 15:     Std_Return
      +                          Type ret=(Std_ReturnType)0x01;
  1748   003A1C  0E01               	movlw	1
  1749   003A1E  6E2B               	movwf	Timer2_Init@ret^0,c
  1750   003A20                     
  1751                           ;MCAL_Layer/Timer2/hal_timer2.c: 16:     if(_timer==((void*)0)){
  1752   003A20  5028               	movf	Timer2_Init@_timer^0,w,c
  1753   003A22  1029               	iorwf	(Timer2_Init@_timer+1)^0,w,c
  1754   003A24  A4D8               	btfss	status,2,c
  1755   003A26  EF17  F01D         	goto	u5471
  1756   003A2A  EF19  F01D         	goto	u5470
  1757   003A2E                     u5471:
  1758   003A2E  EF1D  F01D         	goto	l1291
  1759   003A32                     u5470:
  1760   003A32                     
  1761                           ;MCAL_Layer/Timer2/hal_timer2.c: 17:         ret=(Std_ReturnType)0x00;
  1762   003A32  0E00               	movlw	0
  1763   003A34  6E2B               	movwf	Timer2_Init@ret^0,c
  1764                           
  1765                           ;MCAL_Layer/Timer2/hal_timer2.c: 18:     }
  1766   003A36  EF4B  F01D         	goto	l6408
  1767   003A3A                     l1291:
  1768                           
  1769                           ;MCAL_Layer/Timer2/hal_timer2.c: 20:     {;MCAL_Layer/Timer2/hal_timer2.c: 21:         (
      +                          (*((volatile T2CON_t *)(0xFCA))).TMR2ON = 0);
  1770   003A3A  94CA               	bcf	202,2,c	;volatile
  1771   003A3C                     
  1772                           ;MCAL_Layer/Timer2/hal_timer2.c: 22:         ((*((volatile T2CON_t *)(0xFCA))).T2OUTPS =
      +                           _timer->postscaler_value);
  1773   003A3C  EE20 F001          	lfsr	2,1
  1774   003A40  5028               	movf	Timer2_Init@_timer^0,w,c
  1775   003A42  26D9               	addwf	fsr2l,f,c
  1776   003A44  5029               	movf	(Timer2_Init@_timer+1)^0,w,c
  1777   003A46  22DA               	addwfc	fsr2h,f,c
  1778   003A48  30DF               	rrcf	223,w,c
  1779   003A4A  32E8               	rrcf	wreg,f,c
  1780   003A4C  0B0F               	andlw	15
  1781   003A4E  6E2A               	movwf	??_Timer2_Init^0,c
  1782   003A50  462A               	rlncf	??_Timer2_Init^0,f,c
  1783   003A52  462A               	rlncf	??_Timer2_Init^0,f,c
  1784   003A54  462A               	rlncf	??_Timer2_Init^0,f,c
  1785   003A56  50CA               	movf	202,w,c	;volatile
  1786   003A58  182A               	xorwf	??_Timer2_Init^0,w,c
  1787   003A5A  0B87               	andlw	-121
  1788   003A5C  182A               	xorwf	??_Timer2_Init^0,w,c
  1789   003A5E  6ECA               	movwf	202,c	;volatile
  1790                           
  1791                           ;MCAL_Layer/Timer2/hal_timer2.c: 23:         ((*((volatile T2CON_t *)(0xFCA))).T2CKPS = 
      +                          _timer->prescaler_value);
  1792   003A60  EE20 F001          	lfsr	2,1
  1793   003A64  5028               	movf	Timer2_Init@_timer^0,w,c
  1794   003A66  26D9               	addwf	fsr2l,f,c
  1795   003A68  5029               	movf	(Timer2_Init@_timer+1)^0,w,c
  1796   003A6A  22DA               	addwfc	fsr2h,f,c
  1797   003A6C  50DF               	movf	223,w,c
  1798   003A6E  0B03               	andlw	3
  1799   003A70  6E2A               	movwf	??_Timer2_Init^0,c
  1800   003A72  50CA               	movf	202,w,c	;volatile
  1801   003A74  182A               	xorwf	??_Timer2_Init^0,w,c
  1802   003A76  0BFC               	andlw	-4
  1803   003A78  182A               	xorwf	??_Timer2_Init^0,w,c
  1804   003A7A  6ECA               	movwf	202,c	;volatile
  1805   003A7C                     
  1806                           ;MCAL_Layer/Timer2/hal_timer2.c: 24:         (*((volatile uint8 *)(0xFCC))) = _timer->ti
      +                          mer2_preload_value;
  1807   003A7C  C028  FFD9         	movff	Timer2_Init@_timer,fsr2l
  1808   003A80  C029  FFDA         	movff	Timer2_Init@_timer+1,fsr2h
  1809   003A84  50DF               	movf	indf2,w,c
  1810   003A86  6ECC               	movwf	204,c	;volatile
  1811   003A88                     
  1812                           ;MCAL_Layer/Timer2/hal_timer2.c: 25:         timer2_preload = _timer->timer2_preload_val
      +                          ue;
  1813   003A88  C028  FFD9         	movff	Timer2_Init@_timer,fsr2l
  1814   003A8C  C029  FFDA         	movff	Timer2_Init@_timer+1,fsr2h
  1815   003A90  50DF               	movf	indf2,w,c
  1816   003A92  6E4A               	movwf	_timer2_preload^0,c
  1817   003A94                     
  1818                           ;MCAL_Layer/Timer2/hal_timer2.c: 50:         ((*((volatile T2CON_t *)(0xFCA))).TMR2ON = 
      +                          1);
  1819   003A94  84CA               	bsf	202,2,c	;volatile
  1820   003A96                     l6408:
  1821                           
  1822                           ;MCAL_Layer/Timer2/hal_timer2.c: 52:     return ret;
  1823   003A96  502B               	movf	Timer2_Init@ret^0,w,c
  1824   003A98  0012               	return		;funcret
  1825   003A9A                     __end_of_Timer2_Init:
  1826                           	callstack 0
  1827                           
  1828 ;; *************** function _Timer1_Timer_Init *****************
  1829 ;; Defined at:
  1830 ;;		line 80 in file "MCAL_Layer/mcal_layer_init.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 10
  1851 ;; This function calls:
  1852 ;;		_Timer1_Init
  1853 ;; This function is called by:
  1854 ;;		_mcal_layer_initialize
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text6
  1859   0042E4                     __ptext6:
  1860                           	callstack 0
  1861   0042E4                     _Timer1_Timer_Init:
  1862                           	callstack 18
  1863   0042E4                     
  1864                           ;MCAL_Layer/mcal_layer_init.c: 81:     timer1_obj.timer1_preload_value = 0;
  1865   0042E4  0E00               	movlw	0
  1866   0042E6  0100               	movlb	0	; () banked
  1867   0042E8  6FDB               	movwf	(_timer1_obj+4)& (0+255),b
  1868   0042EA  0E00               	movlw	0
  1869   0042EC  6FDA               	movwf	(_timer1_obj+3)& (0+255),b
  1870   0042EE                     
  1871                           ; BSR set to: 0
  1872                           ;MCAL_Layer/mcal_layer_init.c: 82:     timer1_obj.timer1_mode = 0;
  1873   0042EE  95DC               	bcf	(_timer1_obj+5)& (0+255),2,b
  1874   0042F0                     
  1875                           ; BSR set to: 0
  1876                           ;MCAL_Layer/mcal_layer_init.c: 83:     timer1_obj.timer1_reg_wr_mode = 0U;
  1877   0042F0  9BDC               	bcf	(_timer1_obj+5)& (0+255),5,b
  1878                           
  1879                           ;MCAL_Layer/mcal_layer_init.c: 84:     timer1_obj.prescaler_value = 0U;
  1880   0042F2  0EFC               	movlw	-4
  1881   0042F4  17DC               	andwf	(_timer1_obj+5)& (0+255),f,b
  1882   0042F6                     
  1883                           ; BSR set to: 0
  1884                           ;MCAL_Layer/mcal_layer_init.c: 85:     timer1_obj.TMR1_InterruptHandler = TMR1_Callback_
      +                          ISR;
  1885   0042F6  0E9E               	movlw	low _TMR1_Callback_ISR
  1886   0042F8  6FD7               	movwf	_timer1_obj& (0+255),b
  1887   0042FA  0E43               	movlw	high _TMR1_Callback_ISR
  1888   0042FC  6FD8               	movwf	(_timer1_obj+1)& (0+255),b
  1889   0042FE                     
  1890                           ; BSR set to: 0
  1891                           ;MCAL_Layer/mcal_layer_init.c: 86:     ret=Timer1_Init(&timer1_obj);
  1892   0042FE  0ED7               	movlw	low _timer1_obj
  1893   004300  6E2A               	movwf	Timer1_Init@_timer^0,c
  1894   004302  0E00               	movlw	high _timer1_obj
  1895   004304  6E2B               	movwf	(Timer1_Init@_timer+1)^0,c
  1896   004306  ECE2  F017         	call	_Timer1_Init	;wreg free
  1897   00430A  0100               	movlb	0	; () banked
  1898   00430C  6FFF               	movwf	_ret& (0+255),b
  1899   00430E                     
  1900                           ; BSR set to: 0
  1901   00430E  0012               	return		;funcret
  1902   004310                     __end_of_Timer1_Timer_Init:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _Timer1_Init *****************
  1906 ;; Defined at:
  1907 ;;		line 12 in file "MCAL_Layer/Timer1/hal_timer1.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;  _timer          2   41[COMRAM] PTR const struct .
  1910 ;;		 -> timer1_obj(6), 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  ret             1   45[COMRAM] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      unsigned char 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1925 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1926 ;;Total ram usage:        5 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 9
  1929 ;; This function calls:
  1930 ;;		_Timer1_Mode_Select
  1931 ;; This function is called by:
  1932 ;;		_Timer1_Timer_Init
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text7
  1937   002FC4                     __ptext7:
  1938                           	callstack 0
  1939   002FC4                     _Timer1_Init:
  1940                           	callstack 18
  1941   002FC4                     
  1942                           ;MCAL_Layer/Timer1/hal_timer1.c: 12: Std_ReturnType Timer1_Init(const timer1_t *_timer);
      +                          MCAL_Layer/Timer1/hal_timer1.c: 13: {;MCAL_Layer/Timer1/hal_timer1.c: 14:     Std_Return
      +                          Type ret=(Std_ReturnType)0x01;
  1943   002FC4  0E01               	movlw	1
  1944   002FC6  6E2E               	movwf	Timer1_Init@ret^0,c
  1945   002FC8                     
  1946                           ;MCAL_Layer/Timer1/hal_timer1.c: 15:     if(_timer==((void*)0)){
  1947   002FC8  502A               	movf	Timer1_Init@_timer^0,w,c
  1948   002FCA  102B               	iorwf	(Timer1_Init@_timer+1)^0,w,c
  1949   002FCC  A4D8               	btfss	status,2,c
  1950   002FCE  EFEB  F017         	goto	u5441
  1951   002FD2  EFED  F017         	goto	u5440
  1952   002FD6                     u5441:
  1953   002FD6  EFF1  F017         	goto	l1248
  1954   002FDA                     u5440:
  1955   002FDA                     
  1956                           ;MCAL_Layer/Timer1/hal_timer1.c: 16:         ret=(Std_ReturnType)0x00;
  1957   002FDA  0E00               	movlw	0
  1958   002FDC  6E2E               	movwf	Timer1_Init@ret^0,c
  1959                           
  1960                           ;MCAL_Layer/Timer1/hal_timer1.c: 17:     }
  1961   002FDE  EF57  F018         	goto	l6390
  1962   002FE2                     l1248:
  1963                           
  1964                           ;MCAL_Layer/Timer1/hal_timer1.c: 19:     {;MCAL_Layer/Timer1/hal_timer1.c: 20:         (
      +                          (*((volatile T1CON_t *)(0xFCD))).TMR1ON = 0);
  1965   002FE2  90CD               	bcf	205,0,c	;volatile
  1966   002FE4                     
  1967                           ;MCAL_Layer/Timer1/hal_timer1.c: 21:         ((*((volatile T1CON_t *)(0xFCD))).T1CKPS = 
      +                          _timer->prescaler_value);
  1968   002FE4  EE20 F005          	lfsr	2,5
  1969   002FE8  502A               	movf	Timer1_Init@_timer^0,w,c
  1970   002FEA  26D9               	addwf	fsr2l,f,c
  1971   002FEC  502B               	movf	(Timer1_Init@_timer+1)^0,w,c
  1972   002FEE  22DA               	addwfc	fsr2h,f,c
  1973   002FF0  50DF               	movf	223,w,c
  1974   002FF2  0B03               	andlw	3
  1975   002FF4  6E2C               	movwf	??_Timer1_Init^0,c
  1976   002FF6  3A2C               	swapf	??_Timer1_Init^0,f,c
  1977   002FF8  50CD               	movf	205,w,c	;volatile
  1978   002FFA  182C               	xorwf	??_Timer1_Init^0,w,c
  1979   002FFC  0BCF               	andlw	-49
  1980   002FFE  182C               	xorwf	??_Timer1_Init^0,w,c
  1981   003000  6ECD               	movwf	205,c	;volatile
  1982   003002                     
  1983                           ;MCAL_Layer/Timer1/hal_timer1.c: 22:         Timer1_Mode_Select(_timer);
  1984   003002  C02A  F028         	movff	Timer1_Init@_timer,Timer1_Mode_Select@_timer
  1985   003006  C02B  F029         	movff	Timer1_Init@_timer+1,Timer1_Mode_Select@_timer+1
  1986   00300A  EC4D  F01D         	call	_Timer1_Mode_Select	;wreg free
  1987   00300E                     
  1988                           ;MCAL_Layer/Timer1/hal_timer1.c: 23:         (*((volatile uint8 *)(0xFCF))) = (_timer->t
      +                          imer1_preload_value) >> 8 ;
  1989   00300E  EE20 F003          	lfsr	2,3
  1990   003012  502A               	movf	Timer1_Init@_timer^0,w,c
  1991   003014  26D9               	addwf	fsr2l,f,c
  1992   003016  502B               	movf	(Timer1_Init@_timer+1)^0,w,c
  1993   003018  22DA               	addwfc	fsr2h,f,c
  1994   00301A  CFDE F02C          	movff	postinc2,??_Timer1_Init
  1995   00301E  CFDD F02D          	movff	postdec2,??_Timer1_Init+1
  1996   003022  C02D  F02C         	movff	??_Timer1_Init+1,??_Timer1_Init
  1997   003026  6A2D               	clrf	(??_Timer1_Init+1)^0,c
  1998   003028  502C               	movf	??_Timer1_Init^0,w,c
  1999   00302A  6ECF               	movwf	207,c	;volatile
  2000   00302C                     
  2001                           ;MCAL_Layer/Timer1/hal_timer1.c: 24:         (*((volatile uint8 *)(0xFCE))) = (uint8)(_t
      +                          imer->timer1_preload_value);
  2002   00302C  EE20 F003          	lfsr	2,3
  2003   003030  502A               	movf	Timer1_Init@_timer^0,w,c
  2004   003032  26D9               	addwf	fsr2l,f,c
  2005   003034  502B               	movf	(Timer1_Init@_timer+1)^0,w,c
  2006   003036  22DA               	addwfc	fsr2h,f,c
  2007   003038  50DF               	movf	indf2,w,c
  2008   00303A  6ECE               	movwf	206,c	;volatile
  2009   00303C                     
  2010                           ;MCAL_Layer/Timer1/hal_timer1.c: 25:         timer1_preload = _timer->timer1_preload_val
      +                          ue;
  2011   00303C  EE20 F003          	lfsr	2,3
  2012   003040  502A               	movf	Timer1_Init@_timer^0,w,c
  2013   003042  26D9               	addwf	fsr2l,f,c
  2014   003044  502B               	movf	(Timer1_Init@_timer+1)^0,w,c
  2015   003046  22DA               	addwfc	fsr2h,f,c
  2016   003048  CFDE F033          	movff	postinc2,_timer1_preload
  2017   00304C  CFDD F034          	movff	postdec2,_timer1_preload+1
  2018   003050                     
  2019                           ;MCAL_Layer/Timer1/hal_timer1.c: 28:         ((*((volatile PIE1_t *)(0xF9D))).TMR1IE=1);
  2020   003050  809D               	bsf	157,0,c	;volatile
  2021   003052                     
  2022                           ;MCAL_Layer/Timer1/hal_timer1.c: 29:         ((*((volatile PIR1_t *)(0xF9E))).TMR1IF=0);
  2023   003052  909E               	bcf	158,0,c	;volatile
  2024   003054                     
  2025                           ;MCAL_Layer/Timer1/hal_timer1.c: 30:         TMR1_InterruptHandler = _timer->TMR1_Interr
      +                          uptHandler;
  2026   003054  C02A  FFD9         	movff	Timer1_Init@_timer,fsr2l
  2027   003058  C02B  FFDA         	movff	Timer1_Init@_timer+1,fsr2h
  2028   00305C  CFDE F035          	movff	postinc2,_TMR1_InterruptHandler
  2029   003060  CFDD F036          	movff	postdec2,_TMR1_InterruptHandler+1
  2030   003064                     
  2031                           ;MCAL_Layer/Timer1/hal_timer1.c: 37:             ((*((volatile RCON_t *)(0xFD0))).IPEN=1
      +                          );
  2032   003064  8ED0               	bsf	208,7,c	;volatile
  2033   003066                     
  2034                           ;MCAL_Layer/Timer1/hal_timer1.c: 38:             if(_timer->priority == INTERRUPT_HIGH_P
      +                          RIORITY){
  2035   003066  EE20 F002          	lfsr	2,2
  2036   00306A  502A               	movf	Timer1_Init@_timer^0,w,c
  2037   00306C  26D9               	addwf	fsr2l,f,c
  2038   00306E  502B               	movf	(Timer1_Init@_timer+1)^0,w,c
  2039   003070  22DA               	addwfc	fsr2h,f,c
  2040   003072  04DE               	decf	postinc2,w,c
  2041   003074  A4D8               	btfss	status,2,c
  2042   003076  EF3F  F018         	goto	u5451
  2043   00307A  EF41  F018         	goto	u5450
  2044   00307E                     u5451:
  2045   00307E  EF45  F018         	goto	l6386
  2046   003082                     u5450:
  2047   003082                     
  2048                           ;MCAL_Layer/Timer1/hal_timer1.c: 39:                 ((*((volatile IPR1_t *)(0xF9F))).TM
      +                          R1IP=1);
  2049   003082  809F               	bsf	159,0,c	;volatile
  2050                           
  2051                           ;MCAL_Layer/Timer1/hal_timer1.c: 40:                 ((*((volatile INTCON_t *)(0xFF2))).
      +                          GIEH = 1);
  2052   003084  8EF2               	bsf	242,7,c	;volatile
  2053                           
  2054                           ;MCAL_Layer/Timer1/hal_timer1.c: 41:             }
  2055   003086  EF56  F018         	goto	l1251
  2056   00308A                     l6386:
  2057   00308A  EE20 F002          	lfsr	2,2
  2058   00308E  502A               	movf	Timer1_Init@_timer^0,w,c
  2059   003090  26D9               	addwf	fsr2l,f,c
  2060   003092  502B               	movf	(Timer1_Init@_timer+1)^0,w,c
  2061   003094  22DA               	addwfc	fsr2h,f,c
  2062   003096  50DF               	movf	indf2,w,c
  2063   003098  A4D8               	btfss	status,2,c
  2064   00309A  EF51  F018         	goto	u5461
  2065   00309E  EF53  F018         	goto	u5460
  2066   0030A2                     u5461:
  2067   0030A2  EF56  F018         	goto	l1251
  2068   0030A6                     u5460:
  2069   0030A6                     
  2070                           ;MCAL_Layer/Timer1/hal_timer1.c: 43:             {;MCAL_Layer/Timer1/hal_timer1.c: 44:  
      +                                      ((*((volatile IPR1_t *)(0xF9F))).TMR1IP=0);
  2071   0030A6  909F               	bcf	159,0,c	;volatile
  2072                           
  2073                           ;MCAL_Layer/Timer1/hal_timer1.c: 45:              ((*((volatile INTCON_t *)(0xFF2))).GIE
      +                          H = 1);
  2074   0030A8  8EF2               	bsf	242,7,c	;volatile
  2075                           
  2076                           ;MCAL_Layer/Timer1/hal_timer1.c: 46:              ((*((volatile INTCON_t *)(0xFF2))).GIE
      +                          L = 1);
  2077   0030AA  8CF2               	bsf	242,6,c	;volatile
  2078   0030AC                     l1251:
  2079                           
  2080                           ;MCAL_Layer/Timer1/hal_timer1.c: 50:         ((*((volatile T1CON_t *)(0xFCD))).TMR1ON = 
      +                          1);
  2081   0030AC  80CD               	bsf	205,0,c	;volatile
  2082   0030AE                     l6390:
  2083                           
  2084                           ;MCAL_Layer/Timer1/hal_timer1.c: 52:     return ret;
  2085   0030AE  502E               	movf	Timer1_Init@ret^0,w,c
  2086   0030B0  0012               	return		;funcret
  2087   0030B2                     __end_of_Timer1_Init:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _Timer1_Mode_Select *****************
  2091 ;; Defined at:
  2092 ;;		line 127 in file "MCAL_Layer/Timer1/hal_timer1.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  _timer          2   39[COMRAM] PTR const struct .
  2095 ;;		 -> timer1_obj(6), 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;Total ram usage:        2 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 8
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_Timer1_Init
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text8
  2122   003A9A                     __ptext8:
  2123                           	callstack 0
  2124   003A9A                     _Timer1_Mode_Select:
  2125                           	callstack 18
  2126   003A9A                     
  2127                           ;MCAL_Layer/Timer1/hal_timer1.c: 128:    if (0 == _timer->timer1_mode){
  2128   003A9A  EE20 F005          	lfsr	2,5
  2129   003A9E  5028               	movf	Timer1_Mode_Select@_timer^0,w,c
  2130   003AA0  26D9               	addwf	fsr2l,f,c
  2131   003AA2  5029               	movf	(Timer1_Mode_Select@_timer+1)^0,w,c
  2132   003AA4  22DA               	addwfc	fsr2h,f,c
  2133   003AA6  B4DF               	btfsc	indf2,2,c
  2134   003AA8  EF58  F01D         	goto	u5331
  2135   003AAC  EF5A  F01D         	goto	u5330
  2136   003AB0                     u5331:
  2137   003AB0  EF5D  F01D         	goto	l6270
  2138   003AB4                     u5330:
  2139   003AB4                     
  2140                           ;MCAL_Layer/Timer1/hal_timer1.c: 129:         ((*((volatile T1CON_t *)(0xFCD))).TMR1CS =
      +                           0);
  2141   003AB4  92CD               	bcf	205,1,c	;volatile
  2142                           
  2143                           ;MCAL_Layer/Timer1/hal_timer1.c: 130:     }
  2144   003AB6  EF8B  F01D         	goto	l1286
  2145   003ABA                     l6270:
  2146   003ABA  EE20 F005          	lfsr	2,5
  2147   003ABE  5028               	movf	Timer1_Mode_Select@_timer^0,w,c
  2148   003AC0  26D9               	addwf	fsr2l,f,c
  2149   003AC2  5029               	movf	(Timer1_Mode_Select@_timer+1)^0,w,c
  2150   003AC4  22DA               	addwfc	fsr2h,f,c
  2151   003AC6  A4DF               	btfss	indf2,2,c
  2152   003AC8  EF68  F01D         	goto	u5341
  2153   003ACC  EF6A  F01D         	goto	u5340
  2154   003AD0                     u5341:
  2155   003AD0  EF8B  F01D         	goto	l1286
  2156   003AD4                     u5340:
  2157   003AD4                     
  2158                           ;MCAL_Layer/Timer1/hal_timer1.c: 132:         ((*((volatile T1CON_t *)(0xFCD))).TMR1CS =
      +                           1);
  2159   003AD4  82CD               	bsf	205,1,c	;volatile
  2160   003AD6                     
  2161                           ;MCAL_Layer/Timer1/hal_timer1.c: 133:             if (0 == _timer->timer1_counter_mode)
  2162   003AD6  EE20 F005          	lfsr	2,5
  2163   003ADA  5028               	movf	Timer1_Mode_Select@_timer^0,w,c
  2164   003ADC  26D9               	addwf	fsr2l,f,c
  2165   003ADE  5029               	movf	(Timer1_Mode_Select@_timer+1)^0,w,c
  2166   003AE0  22DA               	addwfc	fsr2h,f,c
  2167   003AE2  B6DF               	btfsc	indf2,3,c
  2168   003AE4  EF76  F01D         	goto	u5351
  2169   003AE8  EF78  F01D         	goto	u5350
  2170   003AEC                     u5351:
  2171   003AEC  EF7B  F01D         	goto	l6278
  2172   003AF0                     u5350:
  2173   003AF0                     
  2174                           ;MCAL_Layer/Timer1/hal_timer1.c: 134:             {;MCAL_Layer/Timer1/hal_timer1.c: 135:
      +                                          ((*((volatile T1CON_t *)(0xFCD))).T1SYNC = 0);
  2175   003AF0  94CD               	bcf	205,2,c	;volatile
  2176                           
  2177                           ;MCAL_Layer/Timer1/hal_timer1.c: 136:             }
  2178   003AF2  EF8B  F01D         	goto	l1286
  2179   003AF6                     l6278:
  2180   003AF6  EE20 F005          	lfsr	2,5
  2181   003AFA  5028               	movf	Timer1_Mode_Select@_timer^0,w,c
  2182   003AFC  26D9               	addwf	fsr2l,f,c
  2183   003AFE  5029               	movf	(Timer1_Mode_Select@_timer+1)^0,w,c
  2184   003B00  22DA               	addwfc	fsr2h,f,c
  2185   003B02  A6DF               	btfss	indf2,3,c
  2186   003B04  EF86  F01D         	goto	u5361
  2187   003B08  EF88  F01D         	goto	u5360
  2188   003B0C                     u5361:
  2189   003B0C  EF8B  F01D         	goto	l1285
  2190   003B10                     u5360:
  2191   003B10                     
  2192                           ;MCAL_Layer/Timer1/hal_timer1.c: 138:             {;MCAL_Layer/Timer1/hal_timer1.c: 139:
      +                                          ((*((volatile T1CON_t *)(0xFCD))).T1SYNC = 1);
  2193   003B10  84CD               	bsf	205,2,c	;volatile
  2194                           
  2195                           ;MCAL_Layer/Timer1/hal_timer1.c: 140:             }
  2196   003B12  EF8B  F01D         	goto	l1286
  2197   003B16                     l1285:
  2198   003B16                     l1286:
  2199   003B16  0012               	return		;funcret
  2200   003B18                     __end_of_Timer1_Mode_Select:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _CCP2_PWM_1KHZ_INIT *****************
  2204 ;; Defined at:
  2205 ;;		line 33 in file "MCAL_Layer/mcal_layer_init.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;		None
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;Total ram usage:        0 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 11
  2226 ;; This function calls:
  2227 ;;		_CCP_Init
  2228 ;; This function is called by:
  2229 ;;		_mcal_layer_initialize
  2230 ;; This function uses a non-reentrant model
  2231 ;;
  2232                           
  2233                           	psect	text9
  2234   0040FE                     __ptext9:
  2235                           	callstack 0
  2236   0040FE                     _CCP2_PWM_1KHZ_INIT:
  2237                           	callstack 17
  2238   0040FE                     
  2239                           ;MCAL_Layer/mcal_layer_init.c: 35:     ccp2_obj.ccp_inst =CCP2_INST;
  2240   0040FE  0E01               	movlw	1
  2241   004100  0101               	movlb	1	; () banked
  2242   004102  6F52               	movwf	(_ccp2_obj+1)& (0+255),b
  2243                           
  2244                           ;MCAL_Layer/mcal_layer_init.c: 36:     ccp2_obj.ccp_mode =CCP_PWM_MODE_SELECTED;
  2245   004104  0E02               	movlw	2
  2246   004106  6F53               	movwf	(_ccp2_obj+2)& (0+255),b
  2247                           
  2248                           ;MCAL_Layer/mcal_layer_init.c: 37:     ccp2_obj.ccp_mode_variant = ((uint8)0x0C);
  2249   004108  0E0C               	movlw	12
  2250   00410A  6F54               	movwf	(_ccp2_obj+3)& (0+255),b
  2251   00410C                     
  2252                           ; BSR set to: 1
  2253                           ;MCAL_Layer/mcal_layer_init.c: 38:     ccp2_obj.ccp_pin.direction=OUTPUT;
  2254   00410C  9D55               	bcf	(_ccp2_obj+4)& (0+255),6,b
  2255                           
  2256                           ;MCAL_Layer/mcal_layer_init.c: 39:     ccp2_obj.ccp_pin.port=PORTC_INDEX;
  2257   00410E  5155               	movf	(_ccp2_obj+4)& (0+255),w,b
  2258   004110  0BF8               	andlw	-8
  2259   004112  0902               	iorlw	2
  2260   004114  6F55               	movwf	(_ccp2_obj+4)& (0+255),b
  2261                           
  2262                           ;MCAL_Layer/mcal_layer_init.c: 40:     ccp2_obj.ccp_pin.pin=PIN1;
  2263   004116  5155               	movf	(_ccp2_obj+4)& (0+255),w,b
  2264   004118  0BC7               	andlw	-57
  2265   00411A  0908               	iorlw	8
  2266   00411C  6F55               	movwf	(_ccp2_obj+4)& (0+255),b
  2267                           
  2268                           ;MCAL_Layer/mcal_layer_init.c: 41:     ccp2_obj.Timer2_Prescaler_Value=16U;
  2269   00411E  0E10               	movlw	16
  2270   004120  6F5D               	movwf	(_ccp2_obj+12)& (0+255),b
  2271                           
  2272                           ;MCAL_Layer/mcal_layer_init.c: 42:     ccp2_obj.PWM_Frequency=1000;
  2273   004122  0EE8               	movlw	232
  2274   004124  6F59               	movwf	(_ccp2_obj+8)& (0+255),b
  2275   004126  0E03               	movlw	3
  2276   004128  6F5A               	movwf	(_ccp2_obj+9)& (0+255),b
  2277   00412A  0E00               	movlw	0
  2278   00412C  6F5B               	movwf	(_ccp2_obj+10)& (0+255),b
  2279   00412E  0E00               	movlw	0
  2280   004130  6F5C               	movwf	(_ccp2_obj+11)& (0+255),b
  2281   004132                     
  2282                           ; BSR set to: 1
  2283                           ;MCAL_Layer/mcal_layer_init.c: 43:     CCP_Init(&ccp2_obj);
  2284   004132  0E51               	movlw	low _ccp2_obj
  2285   004134  0100               	movlb	0	; () banked
  2286   004136  6F94               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2287   004138  0E01               	movlw	high _ccp2_obj
  2288   00413A  6F95               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2289   00413C  ECED  F016         	call	_CCP_Init	;wreg free
  2290   004140  0012               	return		;funcret
  2291   004142                     __end_of_CCP2_PWM_1KHZ_INIT:
  2292                           	callstack 0
  2293                           
  2294 ;; *************** function _CCP1_Capture_Mode_Init *****************
  2295 ;; Defined at:
  2296 ;;		line 68 in file "MCAL_Layer/mcal_layer_init.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;Total ram usage:        0 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 11
  2317 ;; This function calls:
  2318 ;;		_CCP_Init
  2319 ;; This function is called by:
  2320 ;;		_mcal_layer_initialize
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text10
  2325   004184                     __ptext10:
  2326                           	callstack 0
  2327   004184                     _CCP1_Capture_Mode_Init:
  2328                           	callstack 17
  2329   004184                     
  2330                           ;MCAL_Layer/mcal_layer_init.c: 70:     ccp1_obj.ccp_capt_comp_timer = CCP1_TIMER1_CCP2_T
      +                          IMER3;
  2331   004184  0E01               	movlw	1
  2332   004186  0101               	movlb	1	; () banked
  2333   004188  6F44               	movwf	_ccp1_obj& (0+255),b
  2334                           
  2335                           ;MCAL_Layer/mcal_layer_init.c: 71:     ccp1_obj.ccp_inst =CCP1_INST;
  2336   00418A  0E00               	movlw	0
  2337   00418C  6F45               	movwf	(_ccp1_obj+1)& (0+255),b
  2338                           
  2339                           ;MCAL_Layer/mcal_layer_init.c: 72:     ccp1_obj.ccp_mode =CCP_CAPTURE_MODE_SELECTED;
  2340   00418E  0E00               	movlw	0
  2341   004190  6F46               	movwf	(_ccp1_obj+2)& (0+255),b
  2342                           
  2343                           ;MCAL_Layer/mcal_layer_init.c: 73:     ccp1_obj.ccp_mode_variant = ((uint8)0x05);
  2344   004192  0E05               	movlw	5
  2345   004194  6F47               	movwf	(_ccp1_obj+3)& (0+255),b
  2346   004196                     
  2347                           ; BSR set to: 1
  2348                           ;MCAL_Layer/mcal_layer_init.c: 74:     ccp1_obj.ccp_pin.direction=INPUT;
  2349   004196  8D48               	bsf	(_ccp1_obj+4)& (0+255),6,b
  2350                           
  2351                           ;MCAL_Layer/mcal_layer_init.c: 75:     ccp1_obj.ccp_pin.port=PORTC_INDEX;
  2352   004198  5148               	movf	(_ccp1_obj+4)& (0+255),w,b
  2353   00419A  0BF8               	andlw	-8
  2354   00419C  0902               	iorlw	2
  2355   00419E  6F48               	movwf	(_ccp1_obj+4)& (0+255),b
  2356                           
  2357                           ;MCAL_Layer/mcal_layer_init.c: 76:     ccp1_obj.ccp_pin.pin=PIN2;
  2358   0041A0  5148               	movf	(_ccp1_obj+4)& (0+255),w,b
  2359   0041A2  0BC7               	andlw	-57
  2360   0041A4  0910               	iorlw	16
  2361   0041A6  6F48               	movwf	(_ccp1_obj+4)& (0+255),b
  2362   0041A8                     
  2363                           ; BSR set to: 1
  2364                           ;MCAL_Layer/mcal_layer_init.c: 77:     ccp1_obj.CCP_Interrupt_Handler = CCP1_Callback_IS
      +                          R;
  2365   0041A8  0E44               	movlw	low _CCP1_Callback_ISR
  2366   0041AA  6F49               	movwf	(_ccp1_obj+5)& (0+255),b
  2367   0041AC  0E29               	movlw	high _CCP1_Callback_ISR
  2368   0041AE  6F4A               	movwf	(_ccp1_obj+6)& (0+255),b
  2369   0041B0                     
  2370                           ; BSR set to: 1
  2371                           ;MCAL_Layer/mcal_layer_init.c: 78:     CCP_Init(&ccp1_obj);
  2372   0041B0  0E44               	movlw	low _ccp1_obj
  2373   0041B2  0100               	movlb	0	; () banked
  2374   0041B4  6F94               	movwf	CCP_Init@_ccp_obj& (0+255),b
  2375   0041B6  0E01               	movlw	high _ccp1_obj
  2376   0041B8  6F95               	movwf	(CCP_Init@_ccp_obj+1)& (0+255),b
  2377   0041BA  ECED  F016         	call	_CCP_Init	;wreg free
  2378   0041BE  0012               	return		;funcret
  2379   0041C0                     __end_of_CCP1_Capture_Mode_Init:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _CCP_Init *****************
  2383 ;; Defined at:
  2384 ;;		line 26 in file "MCAL_Layer/CCP/hal_ccp.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  _ccp_obj        2   20[BANK0 ] PTR const struct .
  2387 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  ret             1   24[BANK0 ] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      unsigned char 
  2392 ;; Registers used:
  2393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2399 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;Total ram usage:        5 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 10
  2406 ;; This function calls:
  2407 ;;		_CCP_Capture_Mode_Init
  2408 ;;		_CCP_Interrupt_Init
  2409 ;;		_CCP_PWM_Mode_Init
  2410 ;;		_gpio_pin_initialize
  2411 ;; This function is called by:
  2412 ;;		_CCP2_PWM_1KHZ_INIT
  2413 ;;		_CCP1_Capture_Mode_Init
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text11
  2418   002DDA                     __ptext11:
  2419                           	callstack 0
  2420   002DDA                     _CCP_Init:
  2421                           	callstack 17
  2422   002DDA                     
  2423                           ;MCAL_Layer/CCP/hal_ccp.c: 27:     Std_ReturnType ret=(Std_ReturnType)0x01;
  2424   002DDA  0E01               	movlw	1
  2425   002DDC  0100               	movlb	0	; () banked
  2426   002DDE  6F98               	movwf	CCP_Init@ret& (0+255),b
  2427   002DE0                     
  2428                           ; BSR set to: 0
  2429                           ;MCAL_Layer/CCP/hal_ccp.c: 28:     if(_ccp_obj==((void*)0))
  2430   002DE0  5194               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  2431   002DE2  1195               	iorwf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2432   002DE4  A4D8               	btfss	status,2,c
  2433   002DE6  EFF7  F016         	goto	u9031
  2434   002DEA  EFF9  F016         	goto	u9030
  2435   002DEE                     u9031:
  2436   002DEE  EFFB  F016         	goto	l9050
  2437   002DF2                     u9030:
  2438   002DF2                     
  2439                           ; BSR set to: 0
  2440                           ;MCAL_Layer/CCP/hal_ccp.c: 31:     }
  2441   002DF2  EF68  F017         	goto	l487
  2442   002DF6                     l9050:
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;MCAL_Layer/CCP/hal_ccp.c: 33:     {;MCAL_Layer/CCP/hal_ccp.c: 35:         if (_ccp_obj-
      +                          >ccp_inst == CCP1_INST){
  2446   002DF6  EE20 F001          	lfsr	2,1
  2447   002DFA  5194               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  2448   002DFC  26D9               	addwf	fsr2l,f,c
  2449   002DFE  5195               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2450   002E00  22DA               	addwfc	fsr2h,f,c
  2451   002E02  50DF               	movf	indf2,w,c
  2452   002E04  A4D8               	btfss	status,2,c
  2453   002E06  EF07  F017         	goto	u9041
  2454   002E0A  EF09  F017         	goto	u9040
  2455   002E0E                     u9041:
  2456   002E0E  EF0D  F017         	goto	l9054
  2457   002E12                     u9040:
  2458   002E12                     
  2459                           ; BSR set to: 0
  2460                           ;MCAL_Layer/CCP/hal_ccp.c: 36:             ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = (
      +                          (uint8)0x00));
  2461   002E12  0EF0               	movlw	-16
  2462   002E14  16BD               	andwf	189,f,c	;volatile
  2463                           
  2464                           ;MCAL_Layer/CCP/hal_ccp.c: 37:         }
  2465   002E16  EF3B  F017         	goto	l9066
  2466   002E1A                     l9054:
  2467                           
  2468                           ; BSR set to: 0
  2469   002E1A  EE20 F001          	lfsr	2,1
  2470   002E1E  5194               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  2471   002E20  26D9               	addwf	fsr2l,f,c
  2472   002E22  5195               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2473   002E24  22DA               	addwfc	fsr2h,f,c
  2474   002E26  04DE               	decf	postinc2,w,c
  2475   002E28  A4D8               	btfss	status,2,c
  2476   002E2A  EF19  F017         	goto	u9051
  2477   002E2E  EF1B  F017         	goto	u9050
  2478   002E32                     u9051:
  2479   002E32  EF1F  F017         	goto	l9058
  2480   002E36                     u9050:
  2481   002E36                     
  2482                           ; BSR set to: 0
  2483                           ;MCAL_Layer/CCP/hal_ccp.c: 39:             ((*((volatile CCP2CON_t *)(0xFBA))).CCP2M = (
      +                          (uint8)0x00));
  2484   002E36  0EF0               	movlw	-16
  2485   002E38  16BA               	andwf	186,f,c	;volatile
  2486                           
  2487                           ;MCAL_Layer/CCP/hal_ccp.c: 40:         }
  2488   002E3A  EF3B  F017         	goto	l9066
  2489   002E3E                     l9058:
  2490                           
  2491                           ; BSR set to: 0
  2492   002E3E  0E00               	movlw	0
  2493   002E40  6F98               	movwf	CCP_Init@ret& (0+255),b
  2494   002E42  EF3B  F017         	goto	l9066
  2495   002E46                     l9060:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;MCAL_Layer/CCP/hal_ccp.c: 48:                 ret &= CCP_Capture_Mode_Init(_ccp_obj);
  2499   002E46  C094  F02B         	movff	CCP_Init@_ccp_obj,CCP_Capture_Mode_Init@_ccp_obj
  2500   002E4A  C095  F02C         	movff	CCP_Init@_ccp_obj+1,CCP_Capture_Mode_Init@_ccp_obj+1
  2501   002E4E  EC0C  F012         	call	_CCP_Capture_Mode_Init	;wreg free
  2502   002E52  0100               	movlb	0	; () banked
  2503   002E54  1798               	andwf	CCP_Init@ret& (0+255),f,b
  2504                           
  2505                           ;MCAL_Layer/CCP/hal_ccp.c: 49:                 break;
  2506   002E56  EF56  F017         	goto	l9068
  2507   002E5A                     l9062:
  2508                           
  2509                           ; BSR set to: 0
  2510                           ;MCAL_Layer/CCP/hal_ccp.c: 60:                 ret &= CCP_PWM_Mode_Init(_ccp_obj);
  2511   002E5A  C094  F091         	movff	CCP_Init@_ccp_obj,CCP_PWM_Mode_Init@_ccp_obj
  2512   002E5E  C095  F092         	movff	CCP_Init@_ccp_obj+1,CCP_PWM_Mode_Init@_ccp_obj+1
  2513   002E62  EC38  F015         	call	_CCP_PWM_Mode_Init	;wreg free
  2514   002E66  0100               	movlb	0	; () banked
  2515   002E68  1798               	andwf	CCP_Init@ret& (0+255),f,b
  2516                           
  2517                           ;MCAL_Layer/CCP/hal_ccp.c: 61:                 break;
  2518   002E6A  EF56  F017         	goto	l9068
  2519   002E6E                     l9064:
  2520                           
  2521                           ; BSR set to: 0
  2522   002E6E  0E00               	movlw	0
  2523   002E70  6F98               	movwf	CCP_Init@ret& (0+255),b
  2524                           
  2525                           ;MCAL_Layer/CCP/hal_ccp.c: 64:         }
  2526   002E72  EF56  F017         	goto	l9068
  2527   002E76                     l9066:
  2528                           
  2529                           ; BSR set to: 0
  2530   002E76  EE20 F002          	lfsr	2,2
  2531   002E7A  5194               	movf	CCP_Init@_ccp_obj& (0+255),w,b
  2532   002E7C  26D9               	addwf	fsr2l,f,c
  2533   002E7E  5195               	movf	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2534   002E80  22DA               	addwfc	fsr2h,f,c
  2535   002E82  50DF               	movf	indf2,w,c
  2536   002E84  6F96               	movwf	??_CCP_Init& (0+255),b
  2537   002E86  6B97               	clrf	(??_CCP_Init+1)& (0+255),b
  2538                           
  2539                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2540                           ; Switch size 1, requested type "simple"
  2541                           ; Number of cases is 1, Range of values is 0 to 0
  2542                           ; switch strategies available:
  2543                           ; Name         Instructions Cycles
  2544                           ; simple_byte            4     3 (average)
  2545                           ;	Chosen strategy is simple_byte
  2546   002E88  5197               	movf	(??_CCP_Init+1)& (0+255),w,b
  2547   002E8A  0A00               	xorlw	0	; case 0
  2548   002E8C  B4D8               	btfsc	status,2,c
  2549   002E8E  EF4B  F017         	goto	l10496
  2550   002E92  EF37  F017         	goto	l9064
  2551   002E96                     l10496:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ; Switch size 1, requested type "simple"
  2555                           ; Number of cases is 2, Range of values is 0 to 2
  2556                           ; switch strategies available:
  2557                           ; Name         Instructions Cycles
  2558                           ; simple_byte            7     4 (average)
  2559                           ;	Chosen strategy is simple_byte
  2560   002E96  5196               	movf	??_CCP_Init& (0+255),w,b
  2561   002E98  0A00               	xorlw	0	; case 0
  2562   002E9A  B4D8               	btfsc	status,2,c
  2563   002E9C  EF23  F017         	goto	l9060
  2564   002EA0  0A02               	xorlw	2	; case 2
  2565   002EA2  B4D8               	btfsc	status,2,c
  2566   002EA4  EF2D  F017         	goto	l9062
  2567   002EA8  EF37  F017         	goto	l9064
  2568   002EAC                     l9068:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;MCAL_Layer/CCP/hal_ccp.c: 66:         ret &= gpio_pin_initialize(&(_ccp_obj->ccp_pin));
  2572   002EAC  0E04               	movlw	4
  2573   002EAE  2594               	addwf	CCP_Init@_ccp_obj& (0+255),w,b
  2574   002EB0  6F81               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  2575   002EB2  0E00               	movlw	0
  2576   002EB4  2195               	addwfc	(CCP_Init@_ccp_obj+1)& (0+255),w,b
  2577   002EB6  6F82               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  2578   002EB8  EC44  F01C         	call	_gpio_pin_initialize	;wreg free
  2579   002EBC  0100               	movlb	0	; () banked
  2580   002EBE  1798               	andwf	CCP_Init@ret& (0+255),f,b
  2581   002EC0                     
  2582                           ; BSR set to: 0
  2583                           ;MCAL_Layer/CCP/hal_ccp.c: 69:        ret&= CCP_Interrupt_Init(_ccp_obj);
  2584   002EC0  C094  F02B         	movff	CCP_Init@_ccp_obj,CCP_Interrupt_Init@_ccp_obj
  2585   002EC4  C095  F02C         	movff	CCP_Init@_ccp_obj+1,CCP_Interrupt_Init@_ccp_obj+1
  2586   002EC8  EC49  F01E         	call	_CCP_Interrupt_Init	;wreg free
  2587   002ECC  0100               	movlb	0	; () banked
  2588   002ECE  1798               	andwf	CCP_Init@ret& (0+255),f,b
  2589   002ED0                     l487:
  2590                           
  2591                           ; BSR set to: 0
  2592   002ED0  0012               	return		;funcret
  2593   002ED2                     __end_of_CCP_Init:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _CCP_PWM_Mode_Init *****************
  2597 ;; Defined at:
  2598 ;;		line 431 in file "MCAL_Layer/CCP/hal_ccp.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  _ccp_obj        2   17[BANK0 ] PTR const struct .
  2601 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  ret             1   19[BANK0 ] unsigned char 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  1    wreg      unsigned char 
  2606 ;; Registers used:
  2607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2613 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;Total ram usage:        4 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 9
  2620 ;; This function calls:
  2621 ;;		___lldiv
  2622 ;;		___lmul
  2623 ;; This function is called by:
  2624 ;;		_CCP_Init
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text12
  2629   002A70                     __ptext12:
  2630                           	callstack 0
  2631   002A70                     _CCP_PWM_Mode_Init:
  2632                           	callstack 17
  2633   002A70                     
  2634                           ;MCAL_Layer/CCP/hal_ccp.c: 431: static Std_ReturnType CCP_PWM_Mode_Init(const ccp_t * _c
      +                          cp_obj );MCAL_Layer/CCP/hal_ccp.c: 432: {;MCAL_Layer/CCP/hal_ccp.c: 433:     Std_ReturnT
      +                          ype ret = (Std_ReturnType)0x01;
  2635   002A70  0E01               	movlw	1
  2636   002A72  0100               	movlb	0	; () banked
  2637   002A74  6F93               	movwf	CCP_PWM_Mode_Init@ret& (0+255),b
  2638   002A76                     
  2639                           ; BSR set to: 0
  2640                           ;MCAL_Layer/CCP/hal_ccp.c: 434:     if (((void*)0) == _ccp_obj)
  2641   002A76  5191               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2642   002A78  1192               	iorwf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2643   002A7A  A4D8               	btfss	status,2,c
  2644   002A7C  EF42  F015         	goto	u8921
  2645   002A80  EF44  F015         	goto	u8920
  2646   002A84                     u8921:
  2647   002A84  EF48  F015         	goto	l8956
  2648   002A88                     u8920:
  2649   002A88                     
  2650                           ; BSR set to: 0
  2651                           ;MCAL_Layer/CCP/hal_ccp.c: 435:     {;MCAL_Layer/CCP/hal_ccp.c: 436:         ret = (Std_
      +                          ReturnType)0x00;
  2652   002A88  0E00               	movlw	0
  2653   002A8A  6F93               	movwf	CCP_PWM_Mode_Init@ret& (0+255),b
  2654                           
  2655                           ;MCAL_Layer/CCP/hal_ccp.c: 437:     }
  2656   002A8C  EFCB  F015         	goto	l8976
  2657   002A90                     l8956:
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;MCAL_Layer/CCP/hal_ccp.c: 439:     {;MCAL_Layer/CCP/hal_ccp.c: 440:         if (_ccp_ob
      +                          j->ccp_inst == CCP1_INST)
  2661   002A90  EE20 F001          	lfsr	2,1
  2662   002A94  5191               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2663   002A96  26D9               	addwf	fsr2l,f,c
  2664   002A98  5192               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2665   002A9A  22DA               	addwfc	fsr2h,f,c
  2666   002A9C  50DF               	movf	indf2,w,c
  2667   002A9E  A4D8               	btfss	status,2,c
  2668   002AA0  EF54  F015         	goto	u8931
  2669   002AA4  EF56  F015         	goto	u8930
  2670   002AA8                     u8931:
  2671   002AA8  EF6F  F015         	goto	l8964
  2672   002AAC                     u8930:
  2673   002AAC                     
  2674                           ; BSR set to: 0
  2675                           ;MCAL_Layer/CCP/hal_ccp.c: 441:         {;MCAL_Layer/CCP/hal_ccp.c: 442:             if(
      +                          ((uint8)0x0C) ==_ccp_obj->ccp_mode_variant)
  2676   002AAC  EE20 F003          	lfsr	2,3
  2677   002AB0  5191               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2678   002AB2  26D9               	addwf	fsr2l,f,c
  2679   002AB4  5192               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2680   002AB6  22DA               	addwfc	fsr2h,f,c
  2681   002AB8  0E0C               	movlw	12
  2682   002ABA  18DE               	xorwf	postinc2,w,c
  2683   002ABC  A4D8               	btfss	status,2,c
  2684   002ABE  EF63  F015         	goto	u8941
  2685   002AC2  EF65  F015         	goto	u8940
  2686   002AC6                     u8941:
  2687   002AC6  EF6B  F015         	goto	l8962
  2688   002ACA                     u8940:
  2689   002ACA                     
  2690                           ; BSR set to: 0
  2691                           ;MCAL_Layer/CCP/hal_ccp.c: 443:             {;MCAL_Layer/CCP/hal_ccp.c: 444:            
      +                           ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8)0x0C));
  2692   002ACA  50BD               	movf	189,w,c	;volatile
  2693   002ACC  0BF0               	andlw	-16
  2694   002ACE  090C               	iorlw	12
  2695   002AD0  6EBD               	movwf	189,c	;volatile
  2696                           
  2697                           ;MCAL_Layer/CCP/hal_ccp.c: 445:             }
  2698   002AD2  EF90  F015         	goto	l8974
  2699   002AD6                     l8962:
  2700                           
  2701                           ; BSR set to: 0
  2702                           ;MCAL_Layer/CCP/hal_ccp.c: 447:             {;MCAL_Layer/CCP/hal_ccp.c: 448:            
      +                           ret = (Std_ReturnType)0x00;
  2703   002AD6  0E00               	movlw	0
  2704   002AD8  6F93               	movwf	CCP_PWM_Mode_Init@ret& (0+255),b
  2705   002ADA  EF90  F015         	goto	l8974
  2706   002ADE                     l8964:
  2707                           
  2708                           ; BSR set to: 0
  2709   002ADE  EE20 F001          	lfsr	2,1
  2710   002AE2  5191               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2711   002AE4  26D9               	addwf	fsr2l,f,c
  2712   002AE6  5192               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2713   002AE8  22DA               	addwfc	fsr2h,f,c
  2714   002AEA  04DE               	decf	postinc2,w,c
  2715   002AEC  A4D8               	btfss	status,2,c
  2716   002AEE  EF7B  F015         	goto	u8951
  2717   002AF2  EF7D  F015         	goto	u8950
  2718   002AF6                     u8951:
  2719   002AF6  EF6B  F015         	goto	l8962
  2720   002AFA                     u8950:
  2721   002AFA                     
  2722                           ; BSR set to: 0
  2723                           ;MCAL_Layer/CCP/hal_ccp.c: 452:         {;MCAL_Layer/CCP/hal_ccp.c: 453:             if(
      +                          ((uint8)0x0C) ==_ccp_obj->ccp_mode_variant)
  2724   002AFA  EE20 F003          	lfsr	2,3
  2725   002AFE  5191               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2726   002B00  26D9               	addwf	fsr2l,f,c
  2727   002B02  5192               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2728   002B04  22DA               	addwfc	fsr2h,f,c
  2729   002B06  0E0C               	movlw	12
  2730   002B08  18DE               	xorwf	postinc2,w,c
  2731   002B0A  A4D8               	btfss	status,2,c
  2732   002B0C  EF8A  F015         	goto	u8961
  2733   002B10  EF8C  F015         	goto	u8960
  2734   002B14                     u8961:
  2735   002B14  EF6B  F015         	goto	l8962
  2736   002B18                     u8960:
  2737   002B18                     
  2738                           ; BSR set to: 0
  2739                           ;MCAL_Layer/CCP/hal_ccp.c: 454:             {;MCAL_Layer/CCP/hal_ccp.c: 455:            
      +                           ((*((volatile CCP2CON_t *)(0xFBA))).CCP2M = ((uint8)0x0C));
  2740   002B18  50BA               	movf	186,w,c	;volatile
  2741   002B1A  0BF0               	andlw	-16
  2742   002B1C  090C               	iorlw	12
  2743   002B1E  6EBA               	movwf	186,c	;volatile
  2744   002B20                     l8974:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;MCAL_Layer/CCP/hal_ccp.c: 464:          (*((volatile uint8 *)(0xFCB))) = (uint8)((16000
      +                          000UL/(_ccp_obj->PWM_Frequency * _ccp_obj->Timer2_Prescaler_Value * 4))-1);
  2748   002B20  0E00               	movlw	0
  2749   002B22  6F84               	movwf	___lldiv@dividend& (0+255),b
  2750   002B24  0E24               	movlw	36
  2751   002B26  6F85               	movwf	(___lldiv@dividend+1)& (0+255),b
  2752   002B28  0EF4               	movlw	244
  2753   002B2A  6F86               	movwf	(___lldiv@dividend+2)& (0+255),b
  2754   002B2C  0E00               	movlw	0
  2755   002B2E  6F87               	movwf	(___lldiv@dividend+3)& (0+255),b
  2756   002B30  EE20 F00C          	lfsr	2,12
  2757   002B34  5191               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2758   002B36  26D9               	addwf	fsr2l,f,c
  2759   002B38  5192               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2760   002B3A  22DA               	addwfc	fsr2h,f,c
  2761   002B3C  50DF               	movf	indf2,w,c
  2762   002B3E  6E30               	movwf	??_CCP_PWM_Mode_Init^0,c
  2763   002B40  5030               	movf	??_CCP_PWM_Mode_Init^0,w,c
  2764   002B42  6E28               	movwf	___lmul@multiplier^0,c
  2765   002B44  6A29               	clrf	(___lmul@multiplier+1)^0,c
  2766   002B46  6A2A               	clrf	(___lmul@multiplier+2)^0,c
  2767   002B48  6A2B               	clrf	(___lmul@multiplier+3)^0,c
  2768   002B4A  EE20 F008          	lfsr	2,8
  2769   002B4E  5191               	movf	CCP_PWM_Mode_Init@_ccp_obj& (0+255),w,b
  2770   002B50  26D9               	addwf	fsr2l,f,c
  2771   002B52  5192               	movf	(CCP_PWM_Mode_Init@_ccp_obj+1)& (0+255),w,b
  2772   002B54  22DA               	addwfc	fsr2h,f,c
  2773   002B56  CFDE F02C          	movff	postinc2,___lmul@multiplicand
  2774   002B5A  CFDE F02D          	movff	postinc2,___lmul@multiplicand+1
  2775   002B5E  CFDE F02E          	movff	postinc2,___lmul@multiplicand+2
  2776   002B62  CFDE F02F          	movff	postinc2,___lmul@multiplicand+3
  2777   002B66  EC71  F01F         	call	___lmul	;wreg free
  2778   002B6A  0E02               	movlw	2
  2779   002B6C                     u8975:
  2780   002B6C  90D8               	bcf	status,0,c
  2781   002B6E  3628               	rlcf	?___lmul^0,f,c
  2782   002B70  3629               	rlcf	(?___lmul+1)^0,f,c
  2783   002B72  362A               	rlcf	(?___lmul+2)^0,f,c
  2784   002B74  362B               	rlcf	(?___lmul+3)^0,f,c
  2785   002B76  2EE8               	decfsz	wreg,f,c
  2786   002B78  EFB6  F015         	goto	u8975
  2787   002B7C  C028  F088         	movff	?___lmul,___lldiv@divisor
  2788   002B80  C029  F089         	movff	?___lmul+1,___lldiv@divisor+1
  2789   002B84  C02A  F08A         	movff	?___lmul+2,___lldiv@divisor+2
  2790   002B88  C02B  F08B         	movff	?___lmul+3,___lldiv@divisor+3
  2791   002B8C  EC02  F01B         	call	___lldiv	;wreg free
  2792   002B90  0100               	movlb	0	; () banked
  2793   002B92  0584               	decf	?___lldiv& (0+255),w,b
  2794   002B94  6ECB               	movwf	203,c	;volatile
  2795   002B96                     l8976:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;MCAL_Layer/CCP/hal_ccp.c: 466:     return ret;
  2799   002B96  5193               	movf	CCP_PWM_Mode_Init@ret& (0+255),w,b
  2800   002B98                     
  2801                           ; BSR set to: 0
  2802   002B98  0012               	return		;funcret
  2803   002B9A                     __end_of_CCP_PWM_Mode_Init:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function ___lldiv *****************
  2807 ;; Defined at:
  2808 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\__lldiv.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  dividend        4    4[BANK0 ] unsigned long 
  2811 ;;  divisor         4    8[BANK0 ] unsigned long 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  quotient        4   12[BANK0 ] unsigned long 
  2814 ;;  counter         1   16[BANK0 ] unsigned char 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  4    4[BANK0 ] unsigned long 
  2817 ;; Registers used:
  2818 ;;		wreg, status,2, status,0
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2824 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;Total ram usage:       13 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 8
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_CCP_PWM_Mode_Init
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text13
  2839   003604                     __ptext13:
  2840                           	callstack 0
  2841   003604                     ___lldiv:
  2842                           	callstack 17
  2843   003604  0E00               	movlw	0
  2844   003606  0100               	movlb	0	; () banked
  2845   003608  6F8C               	movwf	___lldiv@quotient& (0+255),b
  2846   00360A  0E00               	movlw	0
  2847   00360C  6F8D               	movwf	(___lldiv@quotient+1)& (0+255),b
  2848   00360E  0E00               	movlw	0
  2849   003610  6F8E               	movwf	(___lldiv@quotient+2)& (0+255),b
  2850   003612  0E00               	movlw	0
  2851   003614  6F8F               	movwf	(___lldiv@quotient+3)& (0+255),b
  2852   003616                     
  2853                           ; BSR set to: 0
  2854   003616  5188               	movf	___lldiv@divisor& (0+255),w,b
  2855   003618  1189               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  2856   00361A  118A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  2857   00361C  118B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  2858   00361E  B4D8               	btfsc	status,2,c
  2859   003620  EF14  F01B         	goto	u8711
  2860   003624  EF16  F01B         	goto	u8710
  2861   003628                     u8711:
  2862   003628  EF4C  F01B         	goto	l1527
  2863   00362C                     u8710:
  2864   00362C                     
  2865                           ; BSR set to: 0
  2866   00362C  0E01               	movlw	1
  2867   00362E  6F90               	movwf	___lldiv@counter& (0+255),b
  2868   003630  EF20  F01B         	goto	l8790
  2869   003634                     l8788:
  2870                           
  2871                           ; BSR set to: 0
  2872   003634  90D8               	bcf	status,0,c
  2873   003636  3788               	rlcf	___lldiv@divisor& (0+255),f,b
  2874   003638  3789               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  2875   00363A  378A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  2876   00363C  378B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  2877   00363E  2B90               	incf	___lldiv@counter& (0+255),f,b
  2878   003640                     l8790:
  2879                           
  2880                           ; BSR set to: 0
  2881   003640  AF8B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  2882   003642  EF25  F01B         	goto	u8721
  2883   003646  EF27  F01B         	goto	u8720
  2884   00364A                     u8721:
  2885   00364A  EF1A  F01B         	goto	l8788
  2886   00364E                     u8720:
  2887   00364E                     l8792:
  2888                           
  2889                           ; BSR set to: 0
  2890   00364E  90D8               	bcf	status,0,c
  2891   003650  378C               	rlcf	___lldiv@quotient& (0+255),f,b
  2892   003652  378D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  2893   003654  378E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  2894   003656  378F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  2895   003658                     
  2896                           ; BSR set to: 0
  2897   003658  5188               	movf	___lldiv@divisor& (0+255),w,b
  2898   00365A  5D84               	subwf	___lldiv@dividend& (0+255),w,b
  2899   00365C  5189               	movf	(___lldiv@divisor+1)& (0+255),w,b
  2900   00365E  5985               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  2901   003660  518A               	movf	(___lldiv@divisor+2)& (0+255),w,b
  2902   003662  5986               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  2903   003664  518B               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2904   003666  5987               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  2905   003668  A0D8               	btfss	status,0,c
  2906   00366A  EF39  F01B         	goto	u8731
  2907   00366E  EF3B  F01B         	goto	u8730
  2908   003672                     u8731:
  2909   003672  EF44  F01B         	goto	l8800
  2910   003676                     u8730:
  2911   003676                     
  2912                           ; BSR set to: 0
  2913   003676  5188               	movf	___lldiv@divisor& (0+255),w,b
  2914   003678  5F84               	subwf	___lldiv@dividend& (0+255),f,b
  2915   00367A  5189               	movf	(___lldiv@divisor+1)& (0+255),w,b
  2916   00367C  5B85               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  2917   00367E  518A               	movf	(___lldiv@divisor+2)& (0+255),w,b
  2918   003680  5B86               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  2919   003682  518B               	movf	(___lldiv@divisor+3)& (0+255),w,b
  2920   003684  5B87               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  2921   003686                     
  2922                           ; BSR set to: 0
  2923   003686  818C               	bsf	___lldiv@quotient& (0+255),0,b
  2924   003688                     l8800:
  2925                           
  2926                           ; BSR set to: 0
  2927   003688  90D8               	bcf	status,0,c
  2928   00368A  338B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  2929   00368C  338A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  2930   00368E  3389               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  2931   003690  3388               	rrcf	___lldiv@divisor& (0+255),f,b
  2932   003692                     
  2933                           ; BSR set to: 0
  2934   003692  2F90               	decfsz	___lldiv@counter& (0+255),f,b
  2935   003694  EF27  F01B         	goto	l8792
  2936   003698                     l1527:
  2937                           
  2938                           ; BSR set to: 0
  2939   003698  C08C  F084         	movff	___lldiv@quotient,?___lldiv
  2940   00369C  C08D  F085         	movff	___lldiv@quotient+1,?___lldiv+1
  2941   0036A0  C08E  F086         	movff	___lldiv@quotient+2,?___lldiv+2
  2942   0036A4  C08F  F087         	movff	___lldiv@quotient+3,?___lldiv+3
  2943   0036A8                     
  2944                           ; BSR set to: 0
  2945   0036A8  0012               	return		;funcret
  2946   0036AA                     __end_of___lldiv:
  2947                           	callstack 0
  2948                           
  2949 ;; *************** function _CCP_Interrupt_Init *****************
  2950 ;; Defined at:
  2951 ;;		line 570 in file "MCAL_Layer/CCP/hal_ccp.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;  _ccp_obj        2   42[COMRAM] PTR const struct .
  2954 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  ret             1   46[COMRAM] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      unsigned char 
  2959 ;; Registers used:
  2960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;Total ram usage:        5 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 9
  2973 ;; This function calls:
  2974 ;;		_CCP1_Interrupt_Init
  2975 ;;		_CCP2_Interrupt_Init
  2976 ;; This function is called by:
  2977 ;;		_CCP_Init
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text14
  2982   003C92                     __ptext14:
  2983                           	callstack 0
  2984   003C92                     _CCP_Interrupt_Init:
  2985                           	callstack 17
  2986   003C92                     
  2987                           ;MCAL_Layer/CCP/hal_ccp.c: 570: static Std_ReturnType CCP_Interrupt_Init(const ccp_t * _
      +                          ccp_obj );MCAL_Layer/CCP/hal_ccp.c: 571: {;MCAL_Layer/CCP/hal_ccp.c: 572:     Std_Return
      +                          Type ret=(Std_ReturnType)0x01;
  2988   003C92  0E01               	movlw	1
  2989   003C94  6E2F               	movwf	CCP_Interrupt_Init@ret^0,c
  2990   003C96                     
  2991                           ;MCAL_Layer/CCP/hal_ccp.c: 573:     if(_ccp_obj==((void*)0))
  2992   003C96  502B               	movf	CCP_Interrupt_Init@_ccp_obj^0,w,c
  2993   003C98  102C               	iorwf	(CCP_Interrupt_Init@_ccp_obj+1)^0,w,c
  2994   003C9A  A4D8               	btfss	status,2,c
  2995   003C9C  EF52  F01E         	goto	u8981
  2996   003CA0  EF54  F01E         	goto	u8980
  2997   003CA4                     u8981:
  2998   003CA4  EF68  F01E         	goto	l8992
  2999   003CA8                     u8980:
  3000   003CA8                     l8984:
  3001                           
  3002                           ;MCAL_Layer/CCP/hal_ccp.c: 574:     {;MCAL_Layer/CCP/hal_ccp.c: 575:         ret=(Std_Re
      +                          turnType)0x00;
  3003   003CA8  0E00               	movlw	0
  3004   003CAA  6E2F               	movwf	CCP_Interrupt_Init@ret^0,c
  3005                           
  3006                           ;MCAL_Layer/CCP/hal_ccp.c: 576:     }
  3007   003CAC  EF83  F01E         	goto	l8994
  3008   003CB0                     l8986:
  3009   003CB0  C02B  F028         	movff	CCP_Interrupt_Init@_ccp_obj,CCP1_Interrupt_Init@_ccp_obj
  3010   003CB4  C02C  F029         	movff	CCP_Interrupt_Init@_ccp_obj+1,CCP1_Interrupt_Init@_ccp_obj+1
  3011   003CB8  ECC1  F01E         	call	_CCP1_Interrupt_Init	;wreg free
  3012                           
  3013                           ;MCAL_Layer/CCP/hal_ccp.c: 582:                 break;
  3014   003CBC  EF83  F01E         	goto	l8994
  3015   003CC0                     l8988:
  3016   003CC0  C02B  F028         	movff	CCP_Interrupt_Init@_ccp_obj,CCP2_Interrupt_Init@_ccp_obj
  3017   003CC4  C02C  F029         	movff	CCP_Interrupt_Init@_ccp_obj+1,CCP2_Interrupt_Init@_ccp_obj+1
  3018   003CC8  EC85  F01E         	call	_CCP2_Interrupt_Init	;wreg free
  3019                           
  3020                           ;MCAL_Layer/CCP/hal_ccp.c: 586:                 break;
  3021   003CCC  EF83  F01E         	goto	l8994
  3022   003CD0                     l8992:
  3023   003CD0  EE20 F001          	lfsr	2,1
  3024   003CD4  502B               	movf	CCP_Interrupt_Init@_ccp_obj^0,w,c
  3025   003CD6  26D9               	addwf	fsr2l,f,c
  3026   003CD8  502C               	movf	(CCP_Interrupt_Init@_ccp_obj+1)^0,w,c
  3027   003CDA  22DA               	addwfc	fsr2h,f,c
  3028   003CDC  50DF               	movf	indf2,w,c
  3029   003CDE  6E2D               	movwf	??_CCP_Interrupt_Init^0,c
  3030   003CE0  6A2E               	clrf	(??_CCP_Interrupt_Init+1)^0,c
  3031                           
  3032                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3033                           ; Switch size 1, requested type "simple"
  3034                           ; Number of cases is 1, Range of values is 0 to 0
  3035                           ; switch strategies available:
  3036                           ; Name         Instructions Cycles
  3037                           ; simple_byte            4     3 (average)
  3038                           ;	Chosen strategy is simple_byte
  3039   003CE2  502E               	movf	(??_CCP_Interrupt_Init+1)^0,w,c
  3040   003CE4  0A00               	xorlw	0	; case 0
  3041   003CE6  B4D8               	btfsc	status,2,c
  3042   003CE8  EF78  F01E         	goto	l10498
  3043   003CEC  EF54  F01E         	goto	l8984
  3044   003CF0                     l10498:
  3045                           
  3046                           ; Switch size 1, requested type "simple"
  3047                           ; Number of cases is 2, Range of values is 0 to 1
  3048                           ; switch strategies available:
  3049                           ; Name         Instructions Cycles
  3050                           ; simple_byte            7     4 (average)
  3051                           ;	Chosen strategy is simple_byte
  3052   003CF0  502D               	movf	??_CCP_Interrupt_Init^0,w,c
  3053   003CF2  0A00               	xorlw	0	; case 0
  3054   003CF4  B4D8               	btfsc	status,2,c
  3055   003CF6  EF58  F01E         	goto	l8986
  3056   003CFA  0A01               	xorlw	1	; case 1
  3057   003CFC  B4D8               	btfsc	status,2,c
  3058   003CFE  EF60  F01E         	goto	l8988
  3059   003D02  EF54  F01E         	goto	l8984
  3060   003D06                     l8994:
  3061                           
  3062                           ;MCAL_Layer/CCP/hal_ccp.c: 591:     return ret;
  3063   003D06  502F               	movf	CCP_Interrupt_Init@ret^0,w,c
  3064   003D08  0012               	return		;funcret
  3065   003D0A                     __end_of_CCP_Interrupt_Init:
  3066                           	callstack 0
  3067                           
  3068 ;; *************** function _CCP2_Interrupt_Init *****************
  3069 ;; Defined at:
  3070 ;;		line 533 in file "MCAL_Layer/CCP/hal_ccp.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  _ccp_obj        2   39[COMRAM] PTR const struct .
  3073 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  ret             1    0        unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      unsigned char 
  3078 ;; Registers used:
  3079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:        3 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 8
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_CCP_Interrupt_Init
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text15
  3100   003D0A                     __ptext15:
  3101                           	callstack 0
  3102   003D0A                     _CCP2_Interrupt_Init:
  3103                           	callstack 17
  3104   003D0A                     
  3105                           ;MCAL_Layer/CCP/hal_ccp.c: 536:     if(_ccp_obj==((void*)0))
  3106   003D0A  5028               	movf	CCP2_Interrupt_Init@_ccp_obj^0,w,c
  3107   003D0C  1029               	iorwf	(CCP2_Interrupt_Init@_ccp_obj+1)^0,w,c
  3108   003D0E  A4D8               	btfss	status,2,c
  3109   003D10  EF8C  F01E         	goto	u8661
  3110   003D14  EF8E  F01E         	goto	u8660
  3111   003D18                     u8661:
  3112   003D18  EF90  F01E         	goto	l620
  3113   003D1C                     u8660:
  3114   003D1C                     l8756:
  3115                           
  3116                           ;MCAL_Layer/CCP/hal_ccp.c: 539:     }
  3117   003D1C  EFC0  F01E         	goto	l626
  3118   003D20                     l620:
  3119                           
  3120                           ;MCAL_Layer/CCP/hal_ccp.c: 541:     {;MCAL_Layer/CCP/hal_ccp.c: 542:         ((*((volati
      +                          le PIE2_t *)(0xFA0))).CCP2IE=1);
  3121   003D20  80A0               	bsf	160,0,c	;volatile
  3122                           
  3123                           ;MCAL_Layer/CCP/hal_ccp.c: 543:         ((*((volatile PIR2_t *)(0xFA1))).CCP2IF=0);
  3124   003D22  90A1               	bcf	161,0,c	;volatile
  3125   003D24                     
  3126                           ;MCAL_Layer/CCP/hal_ccp.c: 544:         CCP2_InterruptHandler = _ccp_obj->CCP_Interrupt_
      +                          Handler;
  3127   003D24  EE20 F005          	lfsr	2,5
  3128   003D28  5028               	movf	CCP2_Interrupt_Init@_ccp_obj^0,w,c
  3129   003D2A  26D9               	addwf	fsr2l,f,c
  3130   003D2C  5029               	movf	(CCP2_Interrupt_Init@_ccp_obj+1)^0,w,c
  3131   003D2E  22DA               	addwfc	fsr2h,f,c
  3132   003D30  CFDE F041          	movff	postinc2,_CCP2_InterruptHandler
  3133   003D34  CFDD F042          	movff	postdec2,_CCP2_InterruptHandler+1
  3134   003D38                     
  3135                           ;MCAL_Layer/CCP/hal_ccp.c: 551:             ((*((volatile RCON_t *)(0xFD0))).IPEN=1);
  3136   003D38  8ED0               	bsf	208,7,c	;volatile
  3137                           
  3138                           ;MCAL_Layer/CCP/hal_ccp.c: 552:             if(_ccp_obj->priority == INTERRUPT_HIGH_PRIO
      +                          RITY){
  3139   003D3A  EE20 F007          	lfsr	2,7
  3140   003D3E  5028               	movf	CCP2_Interrupt_Init@_ccp_obj^0,w,c
  3141   003D40  26D9               	addwf	fsr2l,f,c
  3142   003D42  5029               	movf	(CCP2_Interrupt_Init@_ccp_obj+1)^0,w,c
  3143   003D44  22DA               	addwfc	fsr2h,f,c
  3144   003D46  04DE               	decf	postinc2,w,c
  3145   003D48  A4D8               	btfss	status,2,c
  3146   003D4A  EFA9  F01E         	goto	u8671
  3147   003D4E  EFAB  F01E         	goto	u8670
  3148   003D52                     u8671:
  3149   003D52  EFAF  F01E         	goto	l8764
  3150   003D56                     u8670:
  3151   003D56                     
  3152                           ;MCAL_Layer/CCP/hal_ccp.c: 553:                 ((*((volatile IPR2_t *)(0xFA2))).CCP2IP=
      +                          1);
  3153   003D56  80A2               	bsf	162,0,c	;volatile
  3154                           
  3155                           ;MCAL_Layer/CCP/hal_ccp.c: 554:                 ((*((volatile INTCON_t *)(0xFF2))).GIEH 
      +                          = 1);
  3156   003D58  8EF2               	bsf	242,7,c	;volatile
  3157                           
  3158                           ;MCAL_Layer/CCP/hal_ccp.c: 555:             }
  3159   003D5A  EFC0  F01E         	goto	l626
  3160   003D5E                     l8764:
  3161   003D5E  EE20 F007          	lfsr	2,7
  3162   003D62  5028               	movf	CCP2_Interrupt_Init@_ccp_obj^0,w,c
  3163   003D64  26D9               	addwf	fsr2l,f,c
  3164   003D66  5029               	movf	(CCP2_Interrupt_Init@_ccp_obj+1)^0,w,c
  3165   003D68  22DA               	addwfc	fsr2h,f,c
  3166   003D6A  50DF               	movf	indf2,w,c
  3167   003D6C  A4D8               	btfss	status,2,c
  3168   003D6E  EFBB  F01E         	goto	u8681
  3169   003D72  EFBD  F01E         	goto	u8680
  3170   003D76                     u8681:
  3171   003D76  EF8E  F01E         	goto	l8756
  3172   003D7A                     u8680:
  3173   003D7A                     
  3174                           ;MCAL_Layer/CCP/hal_ccp.c: 557:             {;MCAL_Layer/CCP/hal_ccp.c: 558:            
      +                            ((*((volatile IPR2_t *)(0xFA2))).CCP2IP=0);
  3175   003D7A  90A2               	bcf	162,0,c	;volatile
  3176                           
  3177                           ;MCAL_Layer/CCP/hal_ccp.c: 559:              ((*((volatile INTCON_t *)(0xFF2))).GIEH = 1
      +                          );
  3178   003D7C  8EF2               	bsf	242,7,c	;volatile
  3179                           
  3180                           ;MCAL_Layer/CCP/hal_ccp.c: 560:              ((*((volatile INTCON_t *)(0xFF2))).GIEL = 1
      +                          );
  3181   003D7E  8CF2               	bsf	242,6,c	;volatile
  3182   003D80                     l626:
  3183   003D80  0012               	return		;funcret
  3184   003D82                     __end_of_CCP2_Interrupt_Init:
  3185                           	callstack 0
  3186                           
  3187 ;; *************** function _CCP1_Interrupt_Init *****************
  3188 ;; Defined at:
  3189 ;;		line 496 in file "MCAL_Layer/CCP/hal_ccp.c"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  _ccp_obj        2   39[COMRAM] PTR const struct .
  3192 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  ret             1    0        unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;Total ram usage:        3 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 8
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_CCP_Interrupt_Init
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text16
  3219   003D82                     __ptext16:
  3220                           	callstack 0
  3221   003D82                     _CCP1_Interrupt_Init:
  3222                           	callstack 17
  3223   003D82                     
  3224                           ;MCAL_Layer/CCP/hal_ccp.c: 499:     if(_ccp_obj==((void*)0))
  3225   003D82  5028               	movf	CCP1_Interrupt_Init@_ccp_obj^0,w,c
  3226   003D84  1029               	iorwf	(CCP1_Interrupt_Init@_ccp_obj+1)^0,w,c
  3227   003D86  A4D8               	btfss	status,2,c
  3228   003D88  EFC8  F01E         	goto	u8631
  3229   003D8C  EFCA  F01E         	goto	u8630
  3230   003D90                     u8631:
  3231   003D90  EFCC  F01E         	goto	l611
  3232   003D94                     u8630:
  3233   003D94                     l8736:
  3234                           
  3235                           ;MCAL_Layer/CCP/hal_ccp.c: 502:     }
  3236   003D94  EFFC  F01E         	goto	l617
  3237   003D98                     l611:
  3238                           
  3239                           ;MCAL_Layer/CCP/hal_ccp.c: 504:     {;MCAL_Layer/CCP/hal_ccp.c: 505:         ((*((volati
      +                          le PIE1_t *)(0xF9D))).CCP1IE=1);
  3240   003D98  849D               	bsf	157,2,c	;volatile
  3241                           
  3242                           ;MCAL_Layer/CCP/hal_ccp.c: 506:         ((*((volatile PIR1_t *)(0xF9E))).CCP1IF=0);
  3243   003D9A  949E               	bcf	158,2,c	;volatile
  3244   003D9C                     
  3245                           ;MCAL_Layer/CCP/hal_ccp.c: 507:         CCP1_InterruptHandler = _ccp_obj->CCP_Interrupt_
      +                          Handler;
  3246   003D9C  EE20 F005          	lfsr	2,5
  3247   003DA0  5028               	movf	CCP1_Interrupt_Init@_ccp_obj^0,w,c
  3248   003DA2  26D9               	addwf	fsr2l,f,c
  3249   003DA4  5029               	movf	(CCP1_Interrupt_Init@_ccp_obj+1)^0,w,c
  3250   003DA6  22DA               	addwfc	fsr2h,f,c
  3251   003DA8  CFDE F043          	movff	postinc2,_CCP1_InterruptHandler
  3252   003DAC  CFDD F044          	movff	postdec2,_CCP1_InterruptHandler+1
  3253   003DB0                     
  3254                           ;MCAL_Layer/CCP/hal_ccp.c: 514:             ((*((volatile RCON_t *)(0xFD0))).IPEN=1);
  3255   003DB0  8ED0               	bsf	208,7,c	;volatile
  3256                           
  3257                           ;MCAL_Layer/CCP/hal_ccp.c: 515:             if(_ccp_obj->priority == INTERRUPT_HIGH_PRIO
      +                          RITY){
  3258   003DB2  EE20 F007          	lfsr	2,7
  3259   003DB6  5028               	movf	CCP1_Interrupt_Init@_ccp_obj^0,w,c
  3260   003DB8  26D9               	addwf	fsr2l,f,c
  3261   003DBA  5029               	movf	(CCP1_Interrupt_Init@_ccp_obj+1)^0,w,c
  3262   003DBC  22DA               	addwfc	fsr2h,f,c
  3263   003DBE  04DE               	decf	postinc2,w,c
  3264   003DC0  A4D8               	btfss	status,2,c
  3265   003DC2  EFE5  F01E         	goto	u8641
  3266   003DC6  EFE7  F01E         	goto	u8640
  3267   003DCA                     u8641:
  3268   003DCA  EFEB  F01E         	goto	l8744
  3269   003DCE                     u8640:
  3270   003DCE                     
  3271                           ;MCAL_Layer/CCP/hal_ccp.c: 516:                 ((*((volatile IPR1_t *)(0xF9F))).CCP1IP=
      +                          1);
  3272   003DCE  849F               	bsf	159,2,c	;volatile
  3273                           
  3274                           ;MCAL_Layer/CCP/hal_ccp.c: 517:                 ((*((volatile INTCON_t *)(0xFF2))).GIEH 
      +                          = 1);
  3275   003DD0  8EF2               	bsf	242,7,c	;volatile
  3276                           
  3277                           ;MCAL_Layer/CCP/hal_ccp.c: 518:             }
  3278   003DD2  EFFC  F01E         	goto	l617
  3279   003DD6                     l8744:
  3280   003DD6  EE20 F007          	lfsr	2,7
  3281   003DDA  5028               	movf	CCP1_Interrupt_Init@_ccp_obj^0,w,c
  3282   003DDC  26D9               	addwf	fsr2l,f,c
  3283   003DDE  5029               	movf	(CCP1_Interrupt_Init@_ccp_obj+1)^0,w,c
  3284   003DE0  22DA               	addwfc	fsr2h,f,c
  3285   003DE2  50DF               	movf	indf2,w,c
  3286   003DE4  A4D8               	btfss	status,2,c
  3287   003DE6  EFF7  F01E         	goto	u8651
  3288   003DEA  EFF9  F01E         	goto	u8650
  3289   003DEE                     u8651:
  3290   003DEE  EFCA  F01E         	goto	l8736
  3291   003DF2                     u8650:
  3292   003DF2                     
  3293                           ;MCAL_Layer/CCP/hal_ccp.c: 520:             {;MCAL_Layer/CCP/hal_ccp.c: 521:            
      +                            ((*((volatile IPR1_t *)(0xF9F))).CCP1IP=0);
  3294   003DF2  949F               	bcf	159,2,c	;volatile
  3295                           
  3296                           ;MCAL_Layer/CCP/hal_ccp.c: 522:              ((*((volatile INTCON_t *)(0xFF2))).GIEH = 1
      +                          );
  3297   003DF4  8EF2               	bsf	242,7,c	;volatile
  3298                           
  3299                           ;MCAL_Layer/CCP/hal_ccp.c: 523:              ((*((volatile INTCON_t *)(0xFF2))).GIEL = 1
      +                          );
  3300   003DF6  8CF2               	bsf	242,6,c	;volatile
  3301   003DF8                     l617:
  3302   003DF8  0012               	return		;funcret
  3303   003DFA                     __end_of_CCP1_Interrupt_Init:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _CCP_Capture_Mode_Init *****************
  3307 ;; Defined at:
  3308 ;;		line 314 in file "MCAL_Layer/CCP/hal_ccp.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  _ccp_obj        2   42[COMRAM] PTR const struct .
  3311 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  3312 ;; Auto vars:     Size  Location     Type
  3313 ;;  ret             1   46[COMRAM] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  1    wreg      unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3323 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;Total ram usage:        5 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 9
  3330 ;; This function calls:
  3331 ;;		_CCP_Capture_Compare_Timer_Config
  3332 ;; This function is called by:
  3333 ;;		_CCP_Init
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text17
  3338   002418                     __ptext17:
  3339                           	callstack 0
  3340   002418                     _CCP_Capture_Mode_Init:
  3341                           	callstack 17
  3342   002418                     
  3343                           ;MCAL_Layer/CCP/hal_ccp.c: 314: static Std_ReturnType CCP_Capture_Mode_Init(const ccp_t 
      +                          * _ccp_obj );MCAL_Layer/CCP/hal_ccp.c: 315: {;MCAL_Layer/CCP/hal_ccp.c: 316:     Std_Ret
      +                          urnType ret = (Std_ReturnType)0x01;
  3344   002418  0E01               	movlw	1
  3345   00241A  6E2F               	movwf	CCP_Capture_Mode_Init@ret^0,c
  3346   00241C                     
  3347                           ;MCAL_Layer/CCP/hal_ccp.c: 317:     if (((void*)0) == _ccp_obj)
  3348   00241C  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3349   00241E  102C               	iorwf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3350   002420  A4D8               	btfss	status,2,c
  3351   002422  EF15  F012         	goto	u8891
  3352   002426  EF17  F012         	goto	u8890
  3353   00242A                     u8891:
  3354   00242A  EF1B  F012         	goto	l8904
  3355   00242E                     u8890:
  3356   00242E                     l8902:
  3357                           
  3358                           ;MCAL_Layer/CCP/hal_ccp.c: 318:     {;MCAL_Layer/CCP/hal_ccp.c: 319:         ret = (Std_
      +                          ReturnType)0x00;
  3359   00242E  0E00               	movlw	0
  3360   002430  6E2F               	movwf	CCP_Capture_Mode_Init@ret^0,c
  3361                           
  3362                           ;MCAL_Layer/CCP/hal_ccp.c: 320:     }
  3363   002432  EFB7  F012         	goto	l559
  3364   002436                     l8904:
  3365                           
  3366                           ;MCAL_Layer/CCP/hal_ccp.c: 322:     {;MCAL_Layer/CCP/hal_ccp.c: 323:         CCP_Capture
      +                          _Compare_Timer_Config(_ccp_obj);
  3367   002436  C02B  F028         	movff	CCP_Capture_Mode_Init@_ccp_obj,CCP_Capture_Compare_Timer_Config@_ccp_obj
  3368   00243A  C02C  F029         	movff	CCP_Capture_Mode_Init@_ccp_obj+1,CCP_Capture_Compare_Timer_Config@_ccp_obj+1
  3369   00243E  ECFD  F01E         	call	_CCP_Capture_Compare_Timer_Config	;wreg free
  3370   002442                     
  3371                           ;MCAL_Layer/CCP/hal_ccp.c: 324:         if (_ccp_obj->ccp_inst == CCP1_INST)
  3372   002442  EE20 F001          	lfsr	2,1
  3373   002446  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3374   002448  26D9               	addwf	fsr2l,f,c
  3375   00244A  502C               	movf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3376   00244C  22DA               	addwfc	fsr2h,f,c
  3377   00244E  50DF               	movf	indf2,w,c
  3378   002450  A4D8               	btfss	status,2,c
  3379   002452  EF2D  F012         	goto	u8901
  3380   002456  EF2F  F012         	goto	u8900
  3381   00245A                     u8901:
  3382   00245A  EF6C  F012         	goto	l8922
  3383   00245E                     u8900:
  3384   00245E  EF49  F012         	goto	l8920
  3385   002462                     l8910:
  3386                           
  3387                           ;MCAL_Layer/CCP/hal_ccp.c: 329:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1
      +                          M = ((uint8)0x04));
  3388   002462  50BD               	movf	189,w,c	;volatile
  3389   002464  0BF0               	andlw	-16
  3390   002466  0904               	iorlw	4
  3391   002468  6EBD               	movwf	189,c	;volatile
  3392                           
  3393                           ;MCAL_Layer/CCP/hal_ccp.c: 330:                 break;
  3394   00246A  EFB7  F012         	goto	l559
  3395   00246E                     l8912:
  3396                           
  3397                           ;MCAL_Layer/CCP/hal_ccp.c: 332:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1
      +                          M = ((uint8)0x05));
  3398   00246E  50BD               	movf	189,w,c	;volatile
  3399   002470  0BF0               	andlw	-16
  3400   002472  0905               	iorlw	5
  3401   002474  6EBD               	movwf	189,c	;volatile
  3402                           
  3403                           ;MCAL_Layer/CCP/hal_ccp.c: 333:                 break;
  3404   002476  EFB7  F012         	goto	l559
  3405   00247A                     l8914:
  3406                           
  3407                           ;MCAL_Layer/CCP/hal_ccp.c: 335:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1
      +                          M = ((uint8)0x06));
  3408   00247A  50BD               	movf	189,w,c	;volatile
  3409   00247C  0BF0               	andlw	-16
  3410   00247E  0906               	iorlw	6
  3411   002480  6EBD               	movwf	189,c	;volatile
  3412                           
  3413                           ;MCAL_Layer/CCP/hal_ccp.c: 336:                 break;
  3414   002482  EFB7  F012         	goto	l559
  3415   002486                     l8916:
  3416                           
  3417                           ;MCAL_Layer/CCP/hal_ccp.c: 338:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1
      +                          M = ((uint8)0x07));
  3418   002486  50BD               	movf	189,w,c	;volatile
  3419   002488  0BF0               	andlw	-16
  3420   00248A  0907               	iorlw	7
  3421   00248C  6EBD               	movwf	189,c	;volatile
  3422                           
  3423                           ;MCAL_Layer/CCP/hal_ccp.c: 339:                 break;
  3424   00248E  EFB7  F012         	goto	l559
  3425   002492                     l8920:
  3426   002492  EE20 F003          	lfsr	2,3
  3427   002496  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3428   002498  26D9               	addwf	fsr2l,f,c
  3429   00249A  502C               	movf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3430   00249C  22DA               	addwfc	fsr2h,f,c
  3431   00249E  50DF               	movf	indf2,w,c
  3432   0024A0  6E2D               	movwf	??_CCP_Capture_Mode_Init^0,c
  3433   0024A2  6A2E               	clrf	(??_CCP_Capture_Mode_Init+1)^0,c
  3434                           
  3435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3436                           ; Switch size 1, requested type "simple"
  3437                           ; Number of cases is 1, Range of values is 0 to 0
  3438                           ; switch strategies available:
  3439                           ; Name         Instructions Cycles
  3440                           ; simple_byte            4     3 (average)
  3441                           ;	Chosen strategy is simple_byte
  3442   0024A4  502E               	movf	(??_CCP_Capture_Mode_Init+1)^0,w,c
  3443   0024A6  0A00               	xorlw	0	; case 0
  3444   0024A8  B4D8               	btfsc	status,2,c
  3445   0024AA  EF59  F012         	goto	l10500
  3446   0024AE  EF17  F012         	goto	l8902
  3447   0024B2                     l10500:
  3448                           
  3449                           ; Switch size 1, requested type "simple"
  3450                           ; Number of cases is 4, Range of values is 4 to 7
  3451                           ; switch strategies available:
  3452                           ; Name         Instructions Cycles
  3453                           ; simple_byte           13     7 (average)
  3454                           ;	Chosen strategy is simple_byte
  3455   0024B2  502D               	movf	??_CCP_Capture_Mode_Init^0,w,c
  3456   0024B4  0A04               	xorlw	4	; case 4
  3457   0024B6  B4D8               	btfsc	status,2,c
  3458   0024B8  EF31  F012         	goto	l8910
  3459   0024BC  0A01               	xorlw	1	; case 5
  3460   0024BE  B4D8               	btfsc	status,2,c
  3461   0024C0  EF37  F012         	goto	l8912
  3462   0024C4  0A03               	xorlw	3	; case 6
  3463   0024C6  B4D8               	btfsc	status,2,c
  3464   0024C8  EF3D  F012         	goto	l8914
  3465   0024CC  0A01               	xorlw	1	; case 7
  3466   0024CE  B4D8               	btfsc	status,2,c
  3467   0024D0  EF43  F012         	goto	l8916
  3468   0024D4  EF17  F012         	goto	l8902
  3469   0024D8                     l8922:
  3470   0024D8  EE20 F001          	lfsr	2,1
  3471   0024DC  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3472   0024DE  26D9               	addwf	fsr2l,f,c
  3473   0024E0  502C               	movf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3474   0024E2  22DA               	addwfc	fsr2h,f,c
  3475   0024E4  04DE               	decf	postinc2,w,c
  3476   0024E6  A4D8               	btfss	status,2,c
  3477   0024E8  EF78  F012         	goto	u8911
  3478   0024EC  EF7A  F012         	goto	u8910
  3479   0024F0                     u8911:
  3480   0024F0  EF17  F012         	goto	l8902
  3481   0024F4                     u8910:
  3482   0024F4  EF94  F012         	goto	l8936
  3483   0024F8                     l8926:
  3484                           
  3485                           ;MCAL_Layer/CCP/hal_ccp.c: 348:                 ((*((volatile CCP2CON_t *)(0xFBA))).CCP2
      +                          M = ((uint8)0x04));
  3486   0024F8  50BA               	movf	186,w,c	;volatile
  3487   0024FA  0BF0               	andlw	-16
  3488   0024FC  0904               	iorlw	4
  3489   0024FE  6EBA               	movwf	186,c	;volatile
  3490                           
  3491                           ;MCAL_Layer/CCP/hal_ccp.c: 349:                 break;
  3492   002500  EFB7  F012         	goto	l559
  3493   002504                     l8928:
  3494                           
  3495                           ;MCAL_Layer/CCP/hal_ccp.c: 351:                 ((*((volatile CCP2CON_t *)(0xFBA))).CCP2
      +                          M = ((uint8)0x05));
  3496   002504  50BA               	movf	186,w,c	;volatile
  3497   002506  0BF0               	andlw	-16
  3498   002508  0905               	iorlw	5
  3499   00250A  6EBA               	movwf	186,c	;volatile
  3500                           
  3501                           ;MCAL_Layer/CCP/hal_ccp.c: 352:                 break;
  3502   00250C  EFB7  F012         	goto	l559
  3503   002510                     l8930:
  3504                           
  3505                           ;MCAL_Layer/CCP/hal_ccp.c: 354:                 ((*((volatile CCP2CON_t *)(0xFBA))).CCP2
      +                          M = ((uint8)0x06));
  3506   002510  50BA               	movf	186,w,c	;volatile
  3507   002512  0BF0               	andlw	-16
  3508   002514  0906               	iorlw	6
  3509   002516  6EBA               	movwf	186,c	;volatile
  3510                           
  3511                           ;MCAL_Layer/CCP/hal_ccp.c: 355:                 break;
  3512   002518  EFB7  F012         	goto	l559
  3513   00251C                     l8932:
  3514                           
  3515                           ;MCAL_Layer/CCP/hal_ccp.c: 357:                 ((*((volatile CCP2CON_t *)(0xFBA))).CCP2
      +                          M = ((uint8)0x07));
  3516   00251C  50BA               	movf	186,w,c	;volatile
  3517   00251E  0BF0               	andlw	-16
  3518   002520  0907               	iorlw	7
  3519   002522  6EBA               	movwf	186,c	;volatile
  3520                           
  3521                           ;MCAL_Layer/CCP/hal_ccp.c: 358:                 break;
  3522   002524  EFB7  F012         	goto	l559
  3523   002528                     l8936:
  3524   002528  EE20 F003          	lfsr	2,3
  3525   00252C  502B               	movf	CCP_Capture_Mode_Init@_ccp_obj^0,w,c
  3526   00252E  26D9               	addwf	fsr2l,f,c
  3527   002530  502C               	movf	(CCP_Capture_Mode_Init@_ccp_obj+1)^0,w,c
  3528   002532  22DA               	addwfc	fsr2h,f,c
  3529   002534  50DF               	movf	indf2,w,c
  3530   002536  6E2D               	movwf	??_CCP_Capture_Mode_Init^0,c
  3531   002538  6A2E               	clrf	(??_CCP_Capture_Mode_Init+1)^0,c
  3532                           
  3533                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3534                           ; Switch size 1, requested type "simple"
  3535                           ; Number of cases is 1, Range of values is 0 to 0
  3536                           ; switch strategies available:
  3537                           ; Name         Instructions Cycles
  3538                           ; simple_byte            4     3 (average)
  3539                           ;	Chosen strategy is simple_byte
  3540   00253A  502E               	movf	(??_CCP_Capture_Mode_Init+1)^0,w,c
  3541   00253C  0A00               	xorlw	0	; case 0
  3542   00253E  B4D8               	btfsc	status,2,c
  3543   002540  EFA4  F012         	goto	l10502
  3544   002544  EF17  F012         	goto	l8902
  3545   002548                     l10502:
  3546                           
  3547                           ; Switch size 1, requested type "simple"
  3548                           ; Number of cases is 4, Range of values is 4 to 7
  3549                           ; switch strategies available:
  3550                           ; Name         Instructions Cycles
  3551                           ; simple_byte           13     7 (average)
  3552                           ;	Chosen strategy is simple_byte
  3553   002548  502D               	movf	??_CCP_Capture_Mode_Init^0,w,c
  3554   00254A  0A04               	xorlw	4	; case 4
  3555   00254C  B4D8               	btfsc	status,2,c
  3556   00254E  EF7C  F012         	goto	l8926
  3557   002552  0A01               	xorlw	1	; case 5
  3558   002554  B4D8               	btfsc	status,2,c
  3559   002556  EF82  F012         	goto	l8928
  3560   00255A  0A03               	xorlw	3	; case 6
  3561   00255C  B4D8               	btfsc	status,2,c
  3562   00255E  EF88  F012         	goto	l8930
  3563   002562  0A01               	xorlw	1	; case 7
  3564   002564  B4D8               	btfsc	status,2,c
  3565   002566  EF8E  F012         	goto	l8932
  3566   00256A  EF17  F012         	goto	l8902
  3567   00256E                     l559:
  3568                           
  3569                           ;MCAL_Layer/CCP/hal_ccp.c: 365:     return ret;
  3570   00256E  502F               	movf	CCP_Capture_Mode_Init@ret^0,w,c
  3571   002570  0012               	return		;funcret
  3572   002572                     __end_of_CCP_Capture_Mode_Init:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _CCP_Capture_Compare_Timer_Config *****************
  3576 ;; Defined at:
  3577 ;;		line 469 in file "MCAL_Layer/CCP/hal_ccp.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  _ccp_obj        2   39[COMRAM] PTR const struct .
  3580 ;;		 -> ccp1_obj(13), ccp2_obj(13), 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  ret             1    0        unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      unsigned char 
  3585 ;; Registers used:
  3586 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;Total ram usage:        3 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; Hardware stack levels required when called: 8
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_CCP_Capture_Mode_Init
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text18
  3607   003DFA                     __ptext18:
  3608                           	callstack 0
  3609   003DFA                     _CCP_Capture_Compare_Timer_Config:
  3610                           	callstack 17
  3611   003DFA                     
  3612                           ;MCAL_Layer/CCP/hal_ccp.c: 472:     if (((void*)0) == _ccp_obj)
  3613   003DFA  5028               	movf	CCP_Capture_Compare_Timer_Config@_ccp_obj^0,w,c
  3614   003DFC  1029               	iorwf	(CCP_Capture_Compare_Timer_Config@_ccp_obj+1)^0,w,c
  3615   003DFE  A4D8               	btfss	status,2,c
  3616   003E00  EF04  F01F         	goto	u8591
  3617   003E04  EF06  F01F         	goto	u8590
  3618   003E08                     u8591:
  3619   003E08  EF08  F01F         	goto	l8722
  3620   003E0C                     u8590:
  3621   003E0C                     l8720:
  3622                           
  3623                           ;MCAL_Layer/CCP/hal_ccp.c: 475:     }
  3624   003E0C  EF37  F01F         	goto	l608
  3625   003E10                     l8722:
  3626                           
  3627                           ;MCAL_Layer/CCP/hal_ccp.c: 477:     {;MCAL_Layer/CCP/hal_ccp.c: 478:         if (_ccp_ob
      +                          j->ccp_capt_comp_timer == CCP1_CCP2_TIMER1)
  3628   003E10  C028  FFD9         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj,fsr2l
  3629   003E14  C029  FFDA         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj+1,fsr2h
  3630   003E18  50DF               	movf	indf2,w,c
  3631   003E1A  A4D8               	btfss	status,2,c
  3632   003E1C  EF12  F01F         	goto	u8601
  3633   003E20  EF14  F01F         	goto	u8600
  3634   003E24                     u8601:
  3635   003E24  EF18  F01F         	goto	l8724
  3636   003E28                     u8600:
  3637   003E28  96B1               	bcf	177,3,c	;volatile
  3638   003E2A  9CB1               	bcf	177,6,c	;volatile
  3639   003E2C  EF37  F01F         	goto	l608
  3640   003E30                     l8724:
  3641   003E30  C028  FFD9         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj,fsr2l
  3642   003E34  C029  FFDA         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj+1,fsr2h
  3643   003E38  04DE               	decf	postinc2,w,c
  3644   003E3A  A4D8               	btfss	status,2,c
  3645   003E3C  EF22  F01F         	goto	u8611
  3646   003E40  EF24  F01F         	goto	u8610
  3647   003E44                     u8611:
  3648   003E44  EF28  F01F         	goto	l8726
  3649   003E48                     u8610:
  3650   003E48  86B1               	bsf	177,3,c	;volatile
  3651   003E4A  9CB1               	bcf	177,6,c	;volatile
  3652   003E4C  EF37  F01F         	goto	l608
  3653   003E50                     l8726:
  3654   003E50  C028  FFD9         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj,fsr2l
  3655   003E54  C029  FFDA         	movff	CCP_Capture_Compare_Timer_Config@_ccp_obj+1,fsr2h
  3656   003E58  0E02               	movlw	2
  3657   003E5A  18DE               	xorwf	postinc2,w,c
  3658   003E5C  A4D8               	btfss	status,2,c
  3659   003E5E  EF33  F01F         	goto	u8621
  3660   003E62  EF35  F01F         	goto	u8620
  3661   003E66                     u8621:
  3662   003E66  EF06  F01F         	goto	l8720
  3663   003E6A                     u8620:
  3664   003E6A  96B1               	bcf	177,3,c	;volatile
  3665   003E6C  8CB1               	bsf	177,6,c	;volatile
  3666   003E6E                     l608:
  3667   003E6E  0012               	return		;funcret
  3668   003E70                     __end_of_CCP_Capture_Compare_Timer_Config:
  3669                           	callstack 0
  3670                           
  3671 ;; *************** function _ecu_layer_initialize *****************
  3672 ;; Defined at:
  3673 ;;		line 154 in file "ECU_Layer/ecu_layer_init.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;		None
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  ret             1    0        unsigned char 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;Total ram usage:        0 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 12
  3694 ;; This function calls:
  3695 ;;		_lcd_4bit_initialize
  3696 ;; This function is called by:
  3697 ;;		_Pulse_Meter_Init
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           	psect	text19
  3702   00438E                     __ptext19:
  3703                           	callstack 0
  3704   00438E                     _ecu_layer_initialize:
  3705                           	callstack 17
  3706   00438E  0EF9               	movlw	low _lcd1
  3707   004390  0100               	movlb	0	; () banked
  3708   004392  6F89               	movwf	lcd_4bit_initialize@lcd& (0+255),b
  3709   004394  0E00               	movlw	high _lcd1
  3710   004396  6F8A               	movwf	(lcd_4bit_initialize@lcd+1)& (0+255),b
  3711   004398  ECB9  F012         	call	_lcd_4bit_initialize	;wreg free
  3712   00439C  0012               	return		;funcret
  3713   00439E                     __end_of_ecu_layer_initialize:
  3714                           	callstack 0
  3715                           
  3716 ;; *************** function _lcd_4bit_initialize *****************
  3717 ;; Defined at:
  3718 ;;		line 13 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  lcd             2    9[BANK0 ] PTR const struct .
  3721 ;;		 -> lcd1(6), 
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  ret             1   14[BANK0 ] unsigned char 
  3724 ;;  l_data_pins_    1   13[BANK0 ] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      unsigned char 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3734 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;Total ram usage:        6 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; Hardware stack levels required when called: 11
  3741 ;; This function calls:
  3742 ;;		_gpio_pin_initialize
  3743 ;;		_lcd_4bit_send_command
  3744 ;; This function is called by:
  3745 ;;		_ecu_layer_initialize
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text20
  3750   002572                     __ptext20:
  3751                           	callstack 0
  3752   002572                     _lcd_4bit_initialize:
  3753                           	callstack 17
  3754   002572                     
  3755                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 15:      uint8 l_data_pins_counter=0;
  3756   002572  0E00               	movlw	0
  3757   002574  0100               	movlb	0	; () banked
  3758   002576  6F8D               	movwf	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  3759   002578                     
  3760                           ; BSR set to: 0
  3761                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 16:     if(lcd==((void*)0)){
  3762   002578  5189               	movf	lcd_4bit_initialize@lcd& (0+255),w,b
  3763   00257A  118A               	iorwf	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  3764   00257C  A4D8               	btfss	status,2,c
  3765   00257E  EFC3  F012         	goto	u9071
  3766   002582  EFC5  F012         	goto	u9070
  3767   002586                     u9071:
  3768   002586  EFC9  F012         	goto	l9094
  3769   00258A                     u9070:
  3770   00258A                     
  3771                           ; BSR set to: 0
  3772                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 17:         ret=(Std_ReturnType)0x00;
  3773   00258A  0E00               	movlw	0
  3774   00258C  6F8E               	movwf	lcd_4bit_initialize@ret& (0+255),b
  3775                           
  3776                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 18:     }
  3777   00258E  EF62  F013         	goto	l9126
  3778   002592                     l9094:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 20:         ret=gpio_pin_initialize(&(lcd->lcd_rs));
  3782   002592  C089  F081         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@pin_config
  3783   002596  C08A  F082         	movff	lcd_4bit_initialize@lcd+1,gpio_pin_initialize@pin_config+1
  3784   00259A  EC44  F01C         	call	_gpio_pin_initialize	;wreg free
  3785   00259E  0100               	movlb	0	; () banked
  3786   0025A0  6F8E               	movwf	lcd_4bit_initialize@ret& (0+255),b
  3787                           
  3788                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 21:         ret=gpio_pin_initialize(&(lcd->lcd_en));
  3789   0025A2  0E01               	movlw	1
  3790   0025A4  2589               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  3791   0025A6  6F81               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  3792   0025A8  0E00               	movlw	0
  3793   0025AA  218A               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  3794   0025AC  6F82               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  3795   0025AE  EC44  F01C         	call	_gpio_pin_initialize	;wreg free
  3796   0025B2  0100               	movlb	0	; () banked
  3797   0025B4  6F8E               	movwf	lcd_4bit_initialize@ret& (0+255),b
  3798   0025B6                     
  3799                           ; BSR set to: 0
  3800                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 22:         for(l_data_pins_counter=0;l_data_pins_coun
      +                          ter<4;l_data_pins_counter++){
  3801   0025B6  0E00               	movlw	0
  3802   0025B8  6F8D               	movwf	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  3803   0025BA                     l9102:
  3804                           
  3805                           ; BSR set to: 0
  3806   0025BA  518D               	movf	lcd_4bit_initialize@l_data_pins_counter& (0+255),w,b
  3807   0025BC  2589               	addwf	lcd_4bit_initialize@lcd& (0+255),w,b
  3808   0025BE  6F8B               	movwf	??_lcd_4bit_initialize& (0+255),b
  3809   0025C0  0E00               	movlw	0
  3810   0025C2  218A               	addwfc	(lcd_4bit_initialize@lcd+1)& (0+255),w,b
  3811   0025C4  6F8C               	movwf	(??_lcd_4bit_initialize+1)& (0+255),b
  3812   0025C6  0E02               	movlw	2
  3813   0025C8  258B               	addwf	??_lcd_4bit_initialize& (0+255),w,b
  3814   0025CA  6F81               	movwf	gpio_pin_initialize@pin_config& (0+255),b
  3815   0025CC  0E00               	movlw	0
  3816   0025CE  218C               	addwfc	(??_lcd_4bit_initialize+1)& (0+255),w,b
  3817   0025D0  6F82               	movwf	(gpio_pin_initialize@pin_config+1)& (0+255),b
  3818   0025D2  EC44  F01C         	call	_gpio_pin_initialize	;wreg free
  3819   0025D6                     
  3820                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 24:         }
  3821   0025D6  0100               	movlb	0	; () banked
  3822   0025D8  2B8D               	incf	lcd_4bit_initialize@l_data_pins_counter& (0+255),f,b
  3823   0025DA                     
  3824                           ; BSR set to: 0
  3825   0025DA  0E03               	movlw	3
  3826   0025DC  658D               	cpfsgt	lcd_4bit_initialize@l_data_pins_counter& (0+255),b
  3827   0025DE  EFF3  F012         	goto	u9081
  3828   0025E2  EFF5  F012         	goto	u9080
  3829   0025E6                     u9081:
  3830   0025E6  EFDD  F012         	goto	l9102
  3831   0025EA                     u9080:
  3832   0025EA                     
  3833                           ; BSR set to: 0
  3834   0025EA  C089  F085         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3835   0025EE  C08A  F086         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3836   0025F2  0E33               	movlw	51
  3837   0025F4  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  3838   0025F6  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  3839   0025FA                     
  3840                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 27:         _delay((unsigned long)((1000)*(16000000UL/
      +                          4000000.0)));
  3841   0025FA  0E06               	movlw	6
  3842   0025FC  0100               	movlb	0	; () banked
  3843   0025FE  6F8B               	movwf	??_lcd_4bit_initialize& (0+255),b
  3844   002600  0E30               	movlw	48
  3845   002602                     u10527:
  3846   002602  2EE8               	decfsz	wreg,f,c
  3847   002604  D7FE               	bra	u10527
  3848   002606  2F8B               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  3849   002608  D7FC               	bra	u10527
  3850   00260A  F000               	nop	
  3851   00260C  C089  F085         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3852   002610  C08A  F086         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3853   002614  0E32               	movlw	50
  3854   002616  0100               	movlb	0	; () banked
  3855   002618  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  3856   00261A  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  3857                           
  3858                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 29:         _delay((unsigned long)((1000)*(16000000UL/
      +                          4000000.0)));
  3859   00261E  0E06               	movlw	6
  3860   002620  0100               	movlb	0	; () banked
  3861   002622  6F8B               	movwf	??_lcd_4bit_initialize& (0+255),b
  3862   002624  0E30               	movlw	48
  3863   002626                     u10537:
  3864   002626  2EE8               	decfsz	wreg,f,c
  3865   002628  D7FE               	bra	u10537
  3866   00262A  2F8B               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  3867   00262C  D7FC               	bra	u10537
  3868   00262E  F000               	nop	
  3869   002630  C089  F085         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3870   002634  C08A  F086         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3871   002638  0E28               	movlw	40
  3872   00263A  0100               	movlb	0	; () banked
  3873   00263C  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  3874   00263E  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  3875   002642                     
  3876                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 31:         _delay((unsigned long)((1000)*(16000000UL/
      +                          4000000.0)));
  3877   002642  0E06               	movlw	6
  3878   002644  0100               	movlb	0	; () banked
  3879   002646  6F8B               	movwf	??_lcd_4bit_initialize& (0+255),b
  3880   002648  0E30               	movlw	48
  3881   00264A                     u10547:
  3882   00264A  2EE8               	decfsz	wreg,f,c
  3883   00264C  D7FE               	bra	u10547
  3884   00264E  2F8B               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  3885   002650  D7FC               	bra	u10547
  3886   002652  F000               	nop	
  3887   002654  C089  F085         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3888   002658  C08A  F086         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3889   00265C  0E01               	movlw	1
  3890   00265E  0100               	movlb	0	; () banked
  3891   002660  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  3892   002662  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  3893   002666                     
  3894                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 33:         _delay((unsigned long)((1000)*(16000000UL/
      +                          4000000.0)));
  3895   002666  0E06               	movlw	6
  3896   002668  0100               	movlb	0	; () banked
  3897   00266A  6F8B               	movwf	??_lcd_4bit_initialize& (0+255),b
  3898   00266C  0E30               	movlw	48
  3899   00266E                     u10557:
  3900   00266E  2EE8               	decfsz	wreg,f,c
  3901   002670  D7FE               	bra	u10557
  3902   002672  2F8B               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  3903   002674  D7FC               	bra	u10557
  3904   002676  F000               	nop	
  3905   002678  C089  F085         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3906   00267C  C08A  F086         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3907   002680  0E06               	movlw	6
  3908   002682  0100               	movlb	0	; () banked
  3909   002684  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  3910   002686  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  3911                           
  3912                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 35:         _delay((unsigned long)((1000)*(16000000UL/
      +                          4000000.0)));
  3913   00268A  0E06               	movlw	6
  3914   00268C  0100               	movlb	0	; () banked
  3915   00268E  6F8B               	movwf	??_lcd_4bit_initialize& (0+255),b
  3916   002690  0E30               	movlw	48
  3917   002692                     u10567:
  3918   002692  2EE8               	decfsz	wreg,f,c
  3919   002694  D7FE               	bra	u10567
  3920   002696  2F8B               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  3921   002698  D7FC               	bra	u10567
  3922   00269A  F000               	nop	
  3923   00269C                     
  3924                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 36:         ret=lcd_4bit_send_command(lcd,0X0C);
  3925   00269C  C089  F085         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3926   0026A0  C08A  F086         	movff	lcd_4bit_initialize@lcd+1,lcd_4bit_send_command@lcd+1
  3927   0026A4  0E0C               	movlw	12
  3928   0026A6  0100               	movlb	0	; () banked
  3929   0026A8  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  3930   0026AA  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  3931   0026AE  0100               	movlb	0	; () banked
  3932   0026B0  6F8E               	movwf	lcd_4bit_initialize@ret& (0+255),b
  3933   0026B2                     
  3934                           ; BSR set to: 0
  3935                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 37:         _delay((unsigned long)((1000)*(16000000UL/
      +                          4000000.0)));
  3936   0026B2  0E06               	movlw	6
  3937   0026B4  0100               	movlb	0	; () banked
  3938   0026B6  6F8B               	movwf	??_lcd_4bit_initialize& (0+255),b
  3939   0026B8  0E30               	movlw	48
  3940   0026BA                     u10577:
  3941   0026BA  2EE8               	decfsz	wreg,f,c
  3942   0026BC  D7FE               	bra	u10577
  3943   0026BE  2F8B               	decfsz	??_lcd_4bit_initialize& (0+255),f,b
  3944   0026C0  D7FC               	bra	u10577
  3945   0026C2  F000               	nop	
  3946   0026C4                     l9126:
  3947                           
  3948                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 39:     return ret;
  3949   0026C4  0100               	movlb	0	; () banked
  3950   0026C6  518E               	movf	lcd_4bit_initialize@ret& (0+255),w,b
  3951   0026C8                     
  3952                           ; BSR set to: 0
  3953   0026C8  0012               	return		;funcret
  3954   0026CA                     __end_of_lcd_4bit_initialize:
  3955                           	callstack 0
  3956                           
  3957 ;; *************** function _gpio_pin_initialize *****************
  3958 ;; Defined at:
  3959 ;;		line 24 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;  pin_config      2    1[BANK0 ] PTR const struct .
  3962 ;;		 -> ccp1_obj(13), ccp2_obj(13), lcd1.lcd_data(4), lcd1(6), 
  3963 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  3964 ;; Auto vars:     Size  Location     Type
  3965 ;;  ret             1    4[BANK0 ] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  1    wreg      unsigned char 
  3968 ;; Registers used:
  3969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;Total ram usage:        4 bytes
  3980 ;; Hardware stack levels used: 1
  3981 ;; Hardware stack levels required when called: 9
  3982 ;; This function calls:
  3983 ;;		_gpio_pin_direction_initialize
  3984 ;;		_gpio_pin_write_logic
  3985 ;; This function is called by:
  3986 ;;		_lcd_4bit_initialize
  3987 ;;		_CCP_Init
  3988 ;;		_seven_segment_initialize
  3989 ;;		_lcd_8bit_initialize
  3990 ;;		_dc_motor_initialize
  3991 ;;		_keypad_initialize
  3992 ;;		_led_initialize
  3993 ;;		_relay_initialize
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text21
  3998   003888                     __ptext21:
  3999                           	callstack 0
  4000   003888                     _gpio_pin_initialize:
  4001                           	callstack 17
  4002   003888                     
  4003                           ;MCAL_Layer/GPIO/hal_gpio.c: 26:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  4004   003888  0100               	movlb	0	; () banked
  4005   00388A  5181               	movf	gpio_pin_initialize@pin_config& (0+255),w,b
  4006   00388C  1182               	iorwf	(gpio_pin_initialize@pin_config+1)& (0+255),w,b
  4007   00388E  B4D8               	btfsc	status,2,c
  4008   003890  EF4C  F01C         	goto	u8841
  4009   003894  EF4E  F01C         	goto	u8840
  4010   003898                     u8841:
  4011   003898  EF6E  F01C         	goto	l8862
  4012   00389C                     u8840:
  4013   00389C                     
  4014                           ; BSR set to: 0
  4015   00389C  C081  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4016   0038A0  C082  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4017   0038A4  30DF               	rrcf	223,w,c
  4018   0038A6  32E8               	rrcf	wreg,f,c
  4019   0038A8  32E8               	rrcf	wreg,f,c
  4020   0038AA  0B07               	andlw	7
  4021   0038AC  6F83               	movwf	??_gpio_pin_initialize& (0+255),b
  4022   0038AE  0E08               	movlw	8
  4023   0038B0  6183               	cpfslt	??_gpio_pin_initialize& (0+255),b
  4024   0038B2  EF5D  F01C         	goto	u8851
  4025   0038B6  EF5F  F01C         	goto	u8850
  4026   0038BA                     u8851:
  4027   0038BA  EF6E  F01C         	goto	l8862
  4028   0038BE                     u8850:
  4029   0038BE                     
  4030                           ; BSR set to: 0
  4031   0038BE  C081  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4032   0038C2  C082  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4033   0038C6  50DF               	movf	223,w,c
  4034   0038C8  0B07               	andlw	7
  4035   0038CA  6F83               	movwf	??_gpio_pin_initialize& (0+255),b
  4036   0038CC  0E04               	movlw	4
  4037   0038CE  6583               	cpfsgt	??_gpio_pin_initialize& (0+255),b
  4038   0038D0  EF6C  F01C         	goto	u8861
  4039   0038D4  EF6E  F01C         	goto	u8860
  4040   0038D8                     u8861:
  4041   0038D8  EF72  F01C         	goto	l8864
  4042   0038DC                     u8860:
  4043   0038DC                     l8862:
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:         ret=(Std_ReturnType)0x00;
  4047   0038DC  0E00               	movlw	0
  4048   0038DE  6F84               	movwf	gpio_pin_initialize@ret& (0+255),b
  4049                           
  4050                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     }
  4051   0038E0  EF8A  F01C         	goto	l8866
  4052   0038E4                     l8864:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;MCAL_Layer/GPIO/hal_gpio.c: 30:         ret=gpio_pin_direction_initialize(pin_config);
  4056   0038E4  C081  F028         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  4057   0038E8  C082  F029         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_direction_initialize@pin_config+1
  4058   0038EC  EC5B  F011         	call	_gpio_pin_direction_initialize	;wreg free
  4059   0038F0  0100               	movlb	0	; () banked
  4060   0038F2  6F84               	movwf	gpio_pin_initialize@ret& (0+255),b
  4061                           
  4062                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:         ret=gpio_pin_write_logic(pin_config,pin_config-
      +                          >logic);
  4063   0038F4  C081  F028         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  4064   0038F8  C082  F029         	movff	gpio_pin_initialize@pin_config+1,gpio_pin_write_logic@pin_config+1
  4065   0038FC  C081  FFD9         	movff	gpio_pin_initialize@pin_config,fsr2l
  4066   003900  C082  FFDA         	movff	gpio_pin_initialize@pin_config+1,fsr2h
  4067   003904  0E00               	movlw	0
  4068   003906  BEDF               	btfsc	indf2,7,c
  4069   003908  0E01               	movlw	1
  4070   00390A  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  4071   00390C  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  4072   003910  0100               	movlb	0	; () banked
  4073   003912  6F84               	movwf	gpio_pin_initialize@ret& (0+255),b
  4074   003914                     l8866:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;MCAL_Layer/GPIO/hal_gpio.c: 33:     return ret;
  4078   003914  5184               	movf	gpio_pin_initialize@ret& (0+255),w,b
  4079   003916                     
  4080                           ; BSR set to: 0
  4081   003916  0012               	return		;funcret
  4082   003918                     __end_of_gpio_pin_initialize:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _gpio_pin_direction_initialize *****************
  4086 ;; Defined at:
  4087 ;;		line 44 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  pin_config      2   39[COMRAM] PTR const struct .
  4090 ;;		 -> ccp1_obj(13), ccp2_obj(13), lcd1.lcd_data(4), lcd1(6), 
  4091 ;;		 -> relay_initialize@pin_obj(1), led_initialize@pin_obj(1), 
  4092 ;; Auto vars:     Size  Location     Type
  4093 ;;  ret             1   47[COMRAM] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  1    wreg      unsigned char 
  4096 ;; Registers used:
  4097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4103 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4105 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4106 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;Total ram usage:        9 bytes
  4108 ;; Hardware stack levels used: 1
  4109 ;; Hardware stack levels required when called: 8
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_gpio_pin_initialize
  4114 ;;		_button_initialize
  4115 ;;		_keypad_initialize
  4116 ;;		_Interrupt_INTx_Pin_Init
  4117 ;;		_Interrupt_RBx_Pin_Init
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text22
  4122   0022B6                     __ptext22:
  4123                           	callstack 0
  4124   0022B6                     _gpio_pin_direction_initialize:
  4125                           	callstack 17
  4126   0022B6                     
  4127                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     Std_ReturnType ret=(Std_ReturnType)0x01;
  4128   0022B6  0E01               	movlw	1
  4129   0022B8  6E30               	movwf	gpio_pin_direction_initialize@ret^0,c
  4130   0022BA                     
  4131                           ;MCAL_Layer/GPIO/hal_gpio.c: 46:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  4132   0022BA  5028               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  4133   0022BC  1029               	iorwf	(gpio_pin_direction_initialize@pin_config+1)^0,w,c
  4134   0022BE  B4D8               	btfsc	status,2,c
  4135   0022C0  EF64  F011         	goto	u8521
  4136   0022C4  EF66  F011         	goto	u8520
  4137   0022C8                     u8521:
  4138   0022C8  EF86  F011         	goto	l8698
  4139   0022CC                     u8520:
  4140   0022CC  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4141   0022D0  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4142   0022D4  30DF               	rrcf	223,w,c
  4143   0022D6  32E8               	rrcf	wreg,f,c
  4144   0022D8  32E8               	rrcf	wreg,f,c
  4145   0022DA  0B07               	andlw	7
  4146   0022DC  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4147   0022DE  0E08               	movlw	8
  4148   0022E0  602A               	cpfslt	??_gpio_pin_direction_initialize^0,c
  4149   0022E2  EF75  F011         	goto	u8531
  4150   0022E6  EF77  F011         	goto	u8530
  4151   0022EA                     u8531:
  4152   0022EA  EF86  F011         	goto	l8698
  4153   0022EE                     u8530:
  4154   0022EE  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4155   0022F2  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4156   0022F6  50DF               	movf	223,w,c
  4157   0022F8  0B07               	andlw	7
  4158   0022FA  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4159   0022FC  0E04               	movlw	4
  4160   0022FE  642A               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4161   002300  EF84  F011         	goto	u8541
  4162   002304  EF86  F011         	goto	u8540
  4163   002308                     u8541:
  4164   002308  EFE9  F011         	goto	l8706
  4165   00230C                     u8540:
  4166   00230C                     l8698:
  4167                           
  4168                           ;MCAL_Layer/GPIO/hal_gpio.c: 47:         ret=(Std_ReturnType)0x00;
  4169   00230C  0E00               	movlw	0
  4170   00230E  6E30               	movwf	gpio_pin_direction_initialize@ret^0,c
  4171                           
  4172                           ;MCAL_Layer/GPIO/hal_gpio.c: 48:     }
  4173   002310  EF0A  F012         	goto	l8708
  4174   002314                     l8700:
  4175                           
  4176                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 (*tris_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  4177   002314  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4178   002318  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4179   00231C  30DF               	rrcf	223,w,c
  4180   00231E  32E8               	rrcf	wreg,f,c
  4181   002320  32E8               	rrcf	wreg,f,c
  4182   002322  0B07               	andlw	7
  4183   002324  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4184   002326  0E01               	movlw	1
  4185   002328  6E2B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4186   00232A  2A2A               	incf	??_gpio_pin_direction_initialize^0,f,c
  4187   00232C  EF9A  F011         	goto	u8554
  4188   002330                     u8555:
  4189   002330  90D8               	bcf	status,0,c
  4190   002332  362B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4191   002334                     u8554:
  4192   002334  2E2A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4193   002336  EF98  F011         	goto	u8555
  4194   00233A  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4195   00233C  0AFF               	xorlw	255
  4196   00233E  6E2C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4197   002340  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4198   002344  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4199   002348  50DF               	movf	223,w,c
  4200   00234A  0B07               	andlw	7
  4201   00234C  6E2D               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4202   00234E  502D               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4203   002350  0D02               	mullw	2
  4204   002352  0EEF               	movlw	low _tris_registers
  4205   002354  24F3               	addwf	243,w,c
  4206   002356  6ED9               	movwf	fsr2l,c
  4207   002358  0E00               	movlw	high _tris_registers
  4208   00235A  20F4               	addwfc	prodh,w,c
  4209   00235C  6EDA               	movwf	fsr2h,c
  4210   00235E  CFDE F02E          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4211   002362  CFDD F02F          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4212   002366  C02E  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4213   00236A  C02F  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4214   00236E  502C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4215   002370  16DF               	andwf	indf2,f,c
  4216                           
  4217                           ;MCAL_Layer/GPIO/hal_gpio.c: 53:                 break;
  4218   002372  EF0A  F012         	goto	l8708
  4219   002376                     l8702:
  4220                           
  4221                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 (*tris_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  4222   002376  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4223   00237A  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4224   00237E  30DF               	rrcf	223,w,c
  4225   002380  32E8               	rrcf	wreg,f,c
  4226   002382  32E8               	rrcf	wreg,f,c
  4227   002384  0B07               	andlw	7
  4228   002386  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4229   002388  0E01               	movlw	1
  4230   00238A  6E2B               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4231   00238C  2A2A               	incf	??_gpio_pin_direction_initialize^0,f,c
  4232   00238E  EFCB  F011         	goto	u8564
  4233   002392                     u8565:
  4234   002392  90D8               	bcf	status,0,c
  4235   002394  362B               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4236   002396                     u8564:
  4237   002396  2E2A               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4238   002398  EFC9  F011         	goto	u8565
  4239   00239C  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4240   0023A0  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4241   0023A4  50DF               	movf	223,w,c
  4242   0023A6  0B07               	andlw	7
  4243   0023A8  6E2C               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4244   0023AA  502C               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4245   0023AC  0D02               	mullw	2
  4246   0023AE  0EEF               	movlw	low _tris_registers
  4247   0023B0  24F3               	addwf	243,w,c
  4248   0023B2  6ED9               	movwf	fsr2l,c
  4249   0023B4  0E00               	movlw	high _tris_registers
  4250   0023B6  20F4               	addwfc	prodh,w,c
  4251   0023B8  6EDA               	movwf	fsr2h,c
  4252   0023BA  CFDE F02D          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4253   0023BE  CFDD F02E          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4254   0023C2  C02D  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4255   0023C6  C02E  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4256   0023CA  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4257   0023CC  12DF               	iorwf	indf2,f,c
  4258                           
  4259                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:                 break;
  4260   0023CE  EF0A  F012         	goto	l8708
  4261   0023D2                     l8706:
  4262   0023D2  C028  FFD9         	movff	gpio_pin_direction_initialize@pin_config,fsr2l
  4263   0023D6  C029  FFDA         	movff	gpio_pin_direction_initialize@pin_config+1,fsr2h
  4264   0023DA  BCDF               	btfsc	indf2,6,c
  4265   0023DC  EFF2  F011         	goto	u8571
  4266   0023E0  EFF5  F011         	goto	u8570
  4267   0023E4                     u8571:
  4268   0023E4  0E01               	movlw	1
  4269   0023E6  EFF6  F011         	goto	u8580
  4270   0023EA                     u8570:
  4271   0023EA  0E00               	movlw	0
  4272   0023EC                     u8580:
  4273   0023EC  6E2A               	movwf	??_gpio_pin_direction_initialize^0,c
  4274   0023EE  6A2B               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4275                           
  4276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4277                           ; Switch size 1, requested type "simple"
  4278                           ; Number of cases is 1, Range of values is 0 to 0
  4279                           ; switch strategies available:
  4280                           ; Name         Instructions Cycles
  4281                           ; simple_byte            4     3 (average)
  4282                           ;	Chosen strategy is simple_byte
  4283   0023F0  502B               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4284   0023F2  0A00               	xorlw	0	; case 0
  4285   0023F4  B4D8               	btfsc	status,2,c
  4286   0023F6  EFFF  F011         	goto	l10504
  4287   0023FA  EF86  F011         	goto	l8698
  4288   0023FE                     l10504:
  4289                           
  4290                           ; Switch size 1, requested type "simple"
  4291                           ; Number of cases is 2, Range of values is 0 to 1
  4292                           ; switch strategies available:
  4293                           ; Name         Instructions Cycles
  4294                           ; simple_byte            7     4 (average)
  4295                           ;	Chosen strategy is simple_byte
  4296   0023FE  502A               	movf	??_gpio_pin_direction_initialize^0,w,c
  4297   002400  0A00               	xorlw	0	; case 0
  4298   002402  B4D8               	btfsc	status,2,c
  4299   002404  EF8A  F011         	goto	l8700
  4300   002408  0A01               	xorlw	1	; case 1
  4301   00240A  B4D8               	btfsc	status,2,c
  4302   00240C  EFBB  F011         	goto	l8702
  4303   002410  EF86  F011         	goto	l8698
  4304   002414                     l8708:
  4305                           
  4306                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return ret;
  4307   002414  5030               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4308   002416  0012               	return		;funcret
  4309   002418                     __end_of_gpio_pin_direction_initialize:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _Pulse_Meter_Display *****************
  4313 ;; Defined at:
  4314 ;;		line 111 in file "Pulse_Meter.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  Pulse_Freq      4   26[BANK1 ] unsigned long 
  4317 ;;  Pulse_Duty_C    1   30[BANK1 ] unsigned char 
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;  Freq_Str        5   31[BANK1 ] unsigned char [5]
  4320 ;;  Duty_Cycle_S    4   36[BANK1 ] unsigned char [4]
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4330 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4331 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;Total ram usage:       14 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 17
  4337 ;; This function calls:
  4338 ;;		_convert_uint32_to_string
  4339 ;;		_convert_uint8_to_string
  4340 ;;		_lcd_4bit_send_string
  4341 ;;		_lcd_4bit_send_string_pos
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text23
  4348   0030B2                     __ptext23:
  4349                           	callstack 0
  4350   0030B2                     _Pulse_Meter_Display:
  4351                           	callstack 13
  4352   0030B2                     
  4353                           ;Pulse_Meter.c: 111: void Pulse_Meter_Display(uint32 Pulse_Freq, uint8 Pulse_Duty_Cycle)
      +                          ;Pulse_Meter.c: 112: {;Pulse_Meter.c: 113:     uint8 Freq_Str[5] = {0};
  4354   0030B2  EE21  F07D         	lfsr	2,Pulse_Meter_Display@Freq_Str
  4355   0030B6  0E04               	movlw	4
  4356   0030B8                     u10001:
  4357   0030B8  6ADE               	clrf	postinc2,c
  4358   0030BA  06E8               	decf	wreg,f,c
  4359   0030BC  E2FD               	bc	u10001
  4360   0030BE                     
  4361                           ;Pulse_Meter.c: 114:     uint8 Duty_Cycle_Str[4] = {0};
  4362   0030BE  0E00               	movlw	0
  4363   0030C0  0101               	movlb	1	; () banked
  4364   0030C2  6F82               	movwf	Pulse_Meter_Display@Duty_Cycle_Str& (0+255),b
  4365   0030C4  0E00               	movlw	0
  4366   0030C6  6F83               	movwf	(Pulse_Meter_Display@Duty_Cycle_Str+1)& (0+255),b
  4367   0030C8  0E00               	movlw	0
  4368   0030CA  6F84               	movwf	(Pulse_Meter_Display@Duty_Cycle_Str+2)& (0+255),b
  4369   0030CC  0E00               	movlw	0
  4370   0030CE  6F85               	movwf	(Pulse_Meter_Display@Duty_Cycle_Str+3)& (0+255),b
  4371   0030D0                     
  4372                           ; BSR set to: 1
  4373                           ;Pulse_Meter.c: 116:     lcd_4bit_send_string_pos(&lcd1, 1, 1, " Frequency = ");
  4374   0030D0  0EF9               	movlw	low _lcd1
  4375   0030D2  0100               	movlb	0	; () banked
  4376   0030D4  6F8F               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  4377   0030D6  0E00               	movlw	high _lcd1
  4378   0030D8  6F90               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  4379   0030DA  0E01               	movlw	1
  4380   0030DC  6F91               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  4381   0030DE  0E01               	movlw	1
  4382   0030E0  6F92               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  4383   0030E2  0E6C               	movlw	low STR_8
  4384   0030E4  6F93               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  4385   0030E6  0E10               	movlw	high STR_8
  4386   0030E8  6F94               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  4387   0030EA  EC38  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  4388   0030EE                     
  4389                           ;Pulse_Meter.c: 117:     convert_uint32_to_string(Pulse_Freq, Freq_Str);
  4390   0030EE  C178  F0BD         	movff	Pulse_Meter_Display@Pulse_Freq,convert_uint32_to_string@value
  4391   0030F2  C179  F0BE         	movff	Pulse_Meter_Display@Pulse_Freq+1,convert_uint32_to_string@value+1
  4392   0030F6  C17A  F0BF         	movff	Pulse_Meter_Display@Pulse_Freq+2,convert_uint32_to_string@value+2
  4393   0030FA  C17B  F0C0         	movff	Pulse_Meter_Display@Pulse_Freq+3,convert_uint32_to_string@value+3
  4394   0030FE  0E7D               	movlw	low Pulse_Meter_Display@Freq_Str
  4395   003100  0100               	movlb	0	; () banked
  4396   003102  6FC1               	movwf	convert_uint32_to_string@str& (0+255),b
  4397   003104  0E01               	movlw	high Pulse_Meter_Display@Freq_Str
  4398   003106  6FC2               	movwf	(convert_uint32_to_string@str+1)& (0+255),b
  4399   003108  EC30  F019         	call	_convert_uint32_to_string	;wreg free
  4400   00310C                     
  4401                           ;Pulse_Meter.c: 118:     lcd_4bit_send_string(&lcd1, Freq_Str);
  4402   00310C  0EF9               	movlw	low _lcd1
  4403   00310E  0100               	movlb	0	; () banked
  4404   003110  6F89               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  4405   003112  0E00               	movlw	high _lcd1
  4406   003114  6F8A               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  4407   003116  0E7D               	movlw	low Pulse_Meter_Display@Freq_Str
  4408   003118  6F8B               	movwf	lcd_4bit_send_string@str& (0+255),b
  4409   00311A  0E01               	movlw	high Pulse_Meter_Display@Freq_Str
  4410   00311C  6F8C               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  4411   00311E  EC8C  F01C         	call	_lcd_4bit_send_string	;wreg free
  4412   003122                     
  4413                           ;Pulse_Meter.c: 119:     lcd_4bit_send_string(&lcd1, "Hz   ");
  4414   003122  0EF9               	movlw	low _lcd1
  4415   003124  0100               	movlb	0	; () banked
  4416   003126  6F89               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  4417   003128  0E00               	movlw	high _lcd1
  4418   00312A  6F8A               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  4419   00312C  0E7A               	movlw	low STR_9
  4420   00312E  6F8B               	movwf	lcd_4bit_send_string@str& (0+255),b
  4421   003130  0E10               	movlw	high STR_9
  4422   003132  6F8C               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  4423   003134  EC8C  F01C         	call	_lcd_4bit_send_string	;wreg free
  4424   003138                     
  4425                           ;Pulse_Meter.c: 121:     lcd_4bit_send_string_pos(&lcd1, 2, 1, " Duty Cycle = ");
  4426   003138  0EF9               	movlw	low _lcd1
  4427   00313A  0100               	movlb	0	; () banked
  4428   00313C  6F8F               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
  4429   00313E  0E00               	movlw	high _lcd1
  4430   003140  6F90               	movwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),b
  4431   003142  0E02               	movlw	2
  4432   003144  6F91               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
  4433   003146  0E01               	movlw	1
  4434   003148  6F92               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
  4435   00314A  0E5D               	movlw	low STR_10
  4436   00314C  6F93               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
  4437   00314E  0E10               	movlw	high STR_10
  4438   003150  6F94               	movwf	(lcd_4bit_send_string_pos@str+1)& (0+255),b
  4439   003152  EC38  F01F         	call	_lcd_4bit_send_string_pos	;wreg free
  4440   003156                     
  4441                           ;Pulse_Meter.c: 122:     convert_uint8_to_string(Pulse_Duty_Cycle, Duty_Cycle_Str);
  4442   003156  0E82               	movlw	low Pulse_Meter_Display@Duty_Cycle_Str
  4443   003158  0100               	movlb	0	; () banked
  4444   00315A  6FBD               	movwf	convert_uint8_to_string@str& (0+255),b
  4445   00315C  0E01               	movlw	high Pulse_Meter_Display@Duty_Cycle_Str
  4446   00315E  6FBE               	movwf	(convert_uint8_to_string@str+1)& (0+255),b
  4447   003160  0101               	movlb	1	; () banked
  4448   003162  517C               	movf	Pulse_Meter_Display@Pulse_Duty_Cycle& (0+255),w,b
  4449   003164  ECF5  F019         	call	_convert_uint8_to_string
  4450   003168                     
  4451                           ;Pulse_Meter.c: 123:     lcd_4bit_send_string(&lcd1, Duty_Cycle_Str);
  4452   003168  0EF9               	movlw	low _lcd1
  4453   00316A  0100               	movlb	0	; () banked
  4454   00316C  6F89               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  4455   00316E  0E00               	movlw	high _lcd1
  4456   003170  6F8A               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  4457   003172  0E82               	movlw	low Pulse_Meter_Display@Duty_Cycle_Str
  4458   003174  6F8B               	movwf	lcd_4bit_send_string@str& (0+255),b
  4459   003176  0E01               	movlw	high Pulse_Meter_Display@Duty_Cycle_Str
  4460   003178  6F8C               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  4461   00317A  EC8C  F01C         	call	_lcd_4bit_send_string	;wreg free
  4462   00317E                     
  4463                           ;Pulse_Meter.c: 124:     lcd_4bit_send_string(&lcd1, "%   ");
  4464   00317E  0EF9               	movlw	low _lcd1
  4465   003180  0100               	movlb	0	; () banked
  4466   003182  6F89               	movwf	lcd_4bit_send_string@lcd& (0+255),b
  4467   003184  0E00               	movlw	high _lcd1
  4468   003186  6F8A               	movwf	(lcd_4bit_send_string@lcd+1)& (0+255),b
  4469   003188  0E80               	movlw	low STR_11
  4470   00318A  6F8B               	movwf	lcd_4bit_send_string@str& (0+255),b
  4471   00318C  0E10               	movlw	high STR_11
  4472   00318E  6F8C               	movwf	(lcd_4bit_send_string@str+1)& (0+255),b
  4473   003190  EC8C  F01C         	call	_lcd_4bit_send_string	;wreg free
  4474   003194  0012               	return		;funcret
  4475   003196                     __end_of_Pulse_Meter_Display:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _lcd_4bit_send_string_pos *****************
  4479 ;; Defined at:
  4480 ;;		line 127 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  lcd             2   15[BANK0 ] PTR const struct .
  4483 ;;		 -> lcd1(6), 
  4484 ;;  row             1   17[BANK0 ] unsigned char 
  4485 ;;  column          1   18[BANK0 ] unsigned char 
  4486 ;;  str             2   19[BANK0 ] PTR unsigned char 
  4487 ;;		 -> STR_10(15), STR_8(14), STR_7(19), STR_6(21), 
  4488 ;;		 -> STR_5(18), STR_4(18), 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  ret             1    0        unsigned char 
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      unsigned char 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4500 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;Total ram usage:        6 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 12
  4507 ;; This function calls:
  4508 ;;		_lcd_4bit_send_char_data
  4509 ;;		_lcd_4bit_set_cursor
  4510 ;; This function is called by:
  4511 ;;		_Welcome_Message
  4512 ;;		_Pulse_Meter_Display
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           	psect	text24
  4517   003E70                     __ptext24:
  4518                           	callstack 0
  4519   003E70                     _lcd_4bit_send_string_pos:
  4520                           	callstack 17
  4521   003E70                     
  4522                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 129:     if(lcd==((void*)0)){
  4523   003E70  0100               	movlb	0	; () banked
  4524   003E72  518F               	movf	lcd_4bit_send_string_pos@lcd& (0+255),w,b
  4525   003E74  1190               	iorwf	(lcd_4bit_send_string_pos@lcd+1)& (0+255),w,b
  4526   003E76  A4D8               	btfss	status,2,c
  4527   003E78  EF40  F01F         	goto	u9201
  4528   003E7C  EF42  F01F         	goto	u9200
  4529   003E80                     u9201:
  4530   003E80  EF44  F01F         	goto	l9246
  4531   003E84                     u9200:
  4532   003E84                     
  4533                           ; BSR set to: 0
  4534                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 131:     }
  4535   003E84  EF70  F01F         	goto	l102
  4536   003E88                     l9246:
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 133:        lcd_4bit_set_cursor(lcd,row,column);
  4540   003E88  C08F  F089         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  4541   003E8C  C090  F08A         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_set_cursor@lcd+1
  4542   003E90  C091  F08B         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  4543   003E94  C092  F08C         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  4544   003E98  EC51  F01A         	call	_lcd_4bit_set_cursor	;wreg free
  4545                           
  4546                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 134:         while(*str){
  4547   003E9C  EF61  F01F         	goto	l9252
  4548   003EA0                     l9248:
  4549   003EA0  C08F  F085         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  4550   003EA4  C090  F086         	movff	lcd_4bit_send_string_pos@lcd+1,lcd_4bit_send_char_data@lcd+1
  4551   003EA8  C093  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  4552   003EAC  C094  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  4553   003EB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4554   003EB0  6AF8               	clrf	tblptru,c
  4555   003EB2                     	endif
  4556   003EB2                     	if	0	;tblptru may be non-zero
  4557   003EB2                     	endif
  4558   003EB2  0008               	tblrd		*
  4559   003EB4  CFF5 F087          	movff	tablat,lcd_4bit_send_char_data@data
  4560   003EB8  ECCB  F01D         	call	_lcd_4bit_send_char_data	;wreg free
  4561   003EBC  0100               	movlb	0	; () banked
  4562   003EBE  4B93               	infsnz	lcd_4bit_send_string_pos@str& (0+255),f,b
  4563   003EC0  2B94               	incf	(lcd_4bit_send_string_pos@str+1)& (0+255),f,b
  4564   003EC2                     l9252:
  4565                           
  4566                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 134:         while(*str){
  4567   003EC2  C093  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  4568   003EC6  C094  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  4569   003ECA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4570   003ECA  6AF8               	clrf	tblptru,c
  4571   003ECC                     	endif
  4572   003ECC                     	if	0	;tblptru may be non-zero
  4573   003ECC                     	endif
  4574   003ECC  0008               	tblrd		*
  4575   003ECE  50F5               	movf	tablat,w,c
  4576   003ED0  0900               	iorlw	0
  4577   003ED2  A4D8               	btfss	status,2,c
  4578   003ED4  EF6E  F01F         	goto	u9211
  4579   003ED8  EF70  F01F         	goto	u9210
  4580   003EDC                     u9211:
  4581   003EDC  EF50  F01F         	goto	l9248
  4582   003EE0                     u9210:
  4583   003EE0                     l102:
  4584   003EE0  0012               	return		;funcret
  4585   003EE2                     __end_of_lcd_4bit_send_string_pos:
  4586                           	callstack 0
  4587                           
  4588 ;; *************** function _lcd_4bit_set_cursor *****************
  4589 ;; Defined at:
  4590 ;;		line 455 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  lcd             2    9[BANK0 ] PTR const struct .
  4593 ;;		 -> lcd1(6), 
  4594 ;;  row             1   11[BANK0 ] unsigned char 
  4595 ;;  column          1   12[BANK0 ] unsigned char 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  ret             1    0        unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      unsigned char 
  4600 ;; Registers used:
  4601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4607 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;Total ram usage:        6 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 11
  4614 ;; This function calls:
  4615 ;;		_lcd_4bit_send_command
  4616 ;; This function is called by:
  4617 ;;		_lcd_4bit_send_string_pos
  4618 ;;		_lcd_4bit_send_char_data_pos
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text25
  4623   0034A2                     __ptext25:
  4624                           	callstack 0
  4625   0034A2                     _lcd_4bit_set_cursor:
  4626                           	callstack 17
  4627   0034A2                     
  4628                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 457:     if(lcd==((void*)0)){
  4629   0034A2  0100               	movlb	0	; () banked
  4630   0034A4  5189               	movf	lcd_4bit_set_cursor@lcd& (0+255),w,b
  4631   0034A6  118A               	iorwf	(lcd_4bit_set_cursor@lcd+1)& (0+255),w,b
  4632   0034A8  A4D8               	btfss	status,2,c
  4633   0034AA  EF59  F01A         	goto	u9101
  4634   0034AE  EF5B  F01A         	goto	u9100
  4635   0034B2                     u9101:
  4636   0034B2  EF5D  F01A         	goto	l9148
  4637   0034B6                     u9100:
  4638   0034B6                     l9146:
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 459:     }
  4642   0034B6  EFA9  F01A         	goto	l227
  4643   0034BA                     l9148:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 461:         column--;
  4647   0034BA  078C               	decf	lcd_4bit_set_cursor@column& (0+255),f,b
  4648                           
  4649                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 462:         switch (row){
  4650   0034BC  EF8C  F01A         	goto	l9162
  4651   0034C0                     l9150:
  4652                           
  4653                           ; BSR set to: 0
  4654   0034C0  C089  F085         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4655   0034C4  C08A  F086         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  4656   0034C8  518C               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  4657   0034CA  0F80               	addlw	128
  4658   0034CC  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  4659   0034CE  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  4660   0034D2  EFA9  F01A         	goto	l227
  4661   0034D6                     l9152:
  4662                           
  4663                           ; BSR set to: 0
  4664   0034D6  C089  F085         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4665   0034DA  C08A  F086         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  4666   0034DE  518C               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  4667   0034E0  0FC0               	addlw	192
  4668   0034E2  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  4669   0034E4  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  4670   0034E8  EFA9  F01A         	goto	l227
  4671   0034EC                     l9154:
  4672                           
  4673                           ; BSR set to: 0
  4674   0034EC  C089  F085         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4675   0034F0  C08A  F086         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  4676   0034F4  518C               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  4677   0034F6  0F94               	addlw	148
  4678   0034F8  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  4679   0034FA  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  4680   0034FE  EFA9  F01A         	goto	l227
  4681   003502                     l9156:
  4682                           
  4683                           ; BSR set to: 0
  4684   003502  C089  F085         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  4685   003506  C08A  F086         	movff	lcd_4bit_set_cursor@lcd+1,lcd_4bit_send_command@lcd+1
  4686   00350A  518C               	movf	lcd_4bit_set_cursor@column& (0+255),w,b
  4687   00350C  0FD4               	addlw	212
  4688   00350E  6F87               	movwf	lcd_4bit_send_command@command& (0+255),b
  4689   003510  EC8C  F01D         	call	_lcd_4bit_send_command	;wreg free
  4690   003514  EFA9  F01A         	goto	l227
  4691   003518                     l9162:
  4692                           
  4693                           ; BSR set to: 0
  4694   003518  518B               	movf	lcd_4bit_set_cursor@row& (0+255),w,b
  4695   00351A  6F8D               	movwf	??_lcd_4bit_set_cursor& (0+255),b
  4696   00351C  6B8E               	clrf	(??_lcd_4bit_set_cursor+1)& (0+255),b
  4697                           
  4698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4699                           ; Switch size 1, requested type "simple"
  4700                           ; Number of cases is 1, Range of values is 0 to 0
  4701                           ; switch strategies available:
  4702                           ; Name         Instructions Cycles
  4703                           ; simple_byte            4     3 (average)
  4704                           ;	Chosen strategy is simple_byte
  4705   00351E  518E               	movf	(??_lcd_4bit_set_cursor+1)& (0+255),w,b
  4706   003520  0A00               	xorlw	0	; case 0
  4707   003522  B4D8               	btfsc	status,2,c
  4708   003524  EF96  F01A         	goto	l10506
  4709   003528  EF5B  F01A         	goto	l9146
  4710   00352C                     l10506:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ; Switch size 1, requested type "simple"
  4714                           ; Number of cases is 4, Range of values is 1 to 4
  4715                           ; switch strategies available:
  4716                           ; Name         Instructions Cycles
  4717                           ; simple_byte           13     7 (average)
  4718                           ;	Chosen strategy is simple_byte
  4719   00352C  518D               	movf	??_lcd_4bit_set_cursor& (0+255),w,b
  4720   00352E  0A01               	xorlw	1	; case 1
  4721   003530  B4D8               	btfsc	status,2,c
  4722   003532  EF60  F01A         	goto	l9150
  4723   003536  0A03               	xorlw	3	; case 2
  4724   003538  B4D8               	btfsc	status,2,c
  4725   00353A  EF6B  F01A         	goto	l9152
  4726   00353E  0A01               	xorlw	1	; case 3
  4727   003540  B4D8               	btfsc	status,2,c
  4728   003542  EF76  F01A         	goto	l9154
  4729   003546  0A07               	xorlw	7	; case 4
  4730   003548  B4D8               	btfsc	status,2,c
  4731   00354A  EF81  F01A         	goto	l9156
  4732   00354E  EF5B  F01A         	goto	l9146
  4733   003552                     l227:
  4734   003552  0012               	return		;funcret
  4735   003554                     __end_of_lcd_4bit_set_cursor:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _lcd_4bit_send_command *****************
  4739 ;; Defined at:
  4740 ;;		line 48 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;  lcd             2    5[BANK0 ] PTR const struct .
  4743 ;;		 -> lcd1(6), 
  4744 ;;  command         1    7[BANK0 ] unsigned char 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  ret             1    8[BANK0 ] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      unsigned char 
  4749 ;; Registers used:
  4750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4756 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;Total ram usage:        4 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 10
  4763 ;; This function calls:
  4764 ;;		_gpio_pin_write_logic
  4765 ;;		_lcd_4bit_send_enable_signal
  4766 ;;		_lcd_send_4bits
  4767 ;; This function is called by:
  4768 ;;		_lcd_4bit_initialize
  4769 ;;		_lcd_4bit_set_cursor
  4770 ;;		_Welcome_Message
  4771 ;;		_lcd_4bit_send_custom_char
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text26
  4776   003B18                     __ptext26:
  4777                           	callstack 0
  4778   003B18                     _lcd_4bit_send_command:
  4779                           	callstack 17
  4780   003B18                     
  4781                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 50:     if(lcd==((void*)0)){
  4782   003B18  0100               	movlb	0	; () banked
  4783   003B1A  5185               	movf	lcd_4bit_send_command@lcd& (0+255),w,b
  4784   003B1C  1186               	iorwf	(lcd_4bit_send_command@lcd+1)& (0+255),w,b
  4785   003B1E  A4D8               	btfss	status,2,c
  4786   003B20  EF94  F01D         	goto	u9021
  4787   003B24  EF96  F01D         	goto	u9020
  4788   003B28                     u9021:
  4789   003B28  EF9A  F01D         	goto	l9038
  4790   003B2C                     u9020:
  4791   003B2C                     
  4792                           ; BSR set to: 0
  4793                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 51:         ret=(Std_ReturnType)0x00;
  4794   003B2C  0E00               	movlw	0
  4795   003B2E  6F88               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4796                           
  4797                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 52:     }
  4798   003B30  EFC9  F01D         	goto	l9040
  4799   003B34                     l9038:
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 54:         ret=gpio_pin_write_logic(&(lcd->lcd_rs),LO
      +                          W);
  4803   003B34  C085  F028         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  4804   003B38  C086  F029         	movff	lcd_4bit_send_command@lcd+1,gpio_pin_write_logic@pin_config+1
  4805   003B3C  0E00               	movlw	0
  4806   003B3E  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  4807   003B40  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  4808   003B44  0100               	movlb	0	; () banked
  4809   003B46  6F88               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4810                           
  4811                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 55:         ret=lcd_send_4bits(lcd, command >> 4);
  4812   003B48  C085  F081         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4813   003B4C  C086  F082         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4814   003B50  3987               	swapf	lcd_4bit_send_command@command& (0+255),w,b
  4815   003B52  0B0F               	andlw	15
  4816   003B54  6F83               	movwf	lcd_send_4bits@_data_command& (0+255),b
  4817   003B56  ECFB  F01B         	call	_lcd_send_4bits	;wreg free
  4818   003B5A  0100               	movlb	0	; () banked
  4819   003B5C  6F88               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4820                           
  4821                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 56:         ret=lcd_4bit_send_enable_signal(lcd);
  4822   003B5E  C085  F081         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4823   003B62  C086  F082         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4824   003B66  EC06  F020         	call	_lcd_4bit_send_enable_signal	;wreg free
  4825   003B6A  0100               	movlb	0	; () banked
  4826   003B6C  6F88               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4827                           
  4828                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 57:         ret=lcd_send_4bits(lcd, command);
  4829   003B6E  C085  F081         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  4830   003B72  C086  F082         	movff	lcd_4bit_send_command@lcd+1,lcd_send_4bits@lcd+1
  4831   003B76  C087  F083         	movff	lcd_4bit_send_command@command,lcd_send_4bits@_data_command
  4832   003B7A  ECFB  F01B         	call	_lcd_send_4bits	;wreg free
  4833   003B7E  0100               	movlb	0	; () banked
  4834   003B80  6F88               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4835                           
  4836                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 58:         ret=lcd_4bit_send_enable_signal(lcd);
  4837   003B82  C085  F081         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  4838   003B86  C086  F082         	movff	lcd_4bit_send_command@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  4839   003B8A  EC06  F020         	call	_lcd_4bit_send_enable_signal	;wreg free
  4840   003B8E  0100               	movlb	0	; () banked
  4841   003B90  6F88               	movwf	lcd_4bit_send_command@ret& (0+255),b
  4842   003B92                     l9040:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 60:     return ret;
  4846   003B92  5188               	movf	lcd_4bit_send_command@ret& (0+255),w,b
  4847   003B94                     
  4848                           ; BSR set to: 0
  4849   003B94  0012               	return		;funcret
  4850   003B96                     __end_of_lcd_4bit_send_command:
  4851                           	callstack 0
  4852                           
  4853 ;; *************** function _lcd_4bit_send_string *****************
  4854 ;; Defined at:
  4855 ;;		line 107 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;  lcd             2    9[BANK0 ] PTR const struct .
  4858 ;;		 -> lcd1(6), 
  4859 ;;  str             2   11[BANK0 ] PTR unsigned char 
  4860 ;;		 -> STR_11(5), STR_9(6), Pulse_Meter_Display@Duty_Cycle_Str(4), Pulse_Meter_Display@Freq_Str(5), 
  4861 ;; Auto vars:     Size  Location     Type
  4862 ;;  ret             1    0        unsigned char 
  4863 ;; Return value:  Size  Location     Type
  4864 ;;                  1    wreg      unsigned char 
  4865 ;; Registers used:
  4866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4867 ;; Tracked objects:
  4868 ;;		On entry : 0/0
  4869 ;;		On exit  : 0/0
  4870 ;;		Unchanged: 0/0
  4871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;Total ram usage:        4 bytes
  4877 ;; Hardware stack levels used: 1
  4878 ;; Hardware stack levels required when called: 11
  4879 ;; This function calls:
  4880 ;;		_lcd_4bit_send_char_data
  4881 ;; This function is called by:
  4882 ;;		_Pulse_Meter_Display
  4883 ;; This function uses a non-reentrant model
  4884 ;;
  4885                           
  4886                           	psect	text27
  4887   003918                     __ptext27:
  4888                           	callstack 0
  4889   003918                     _lcd_4bit_send_string:
  4890                           	callstack 18
  4891   003918                     
  4892                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 109:     if(lcd==((void*)0)){
  4893   003918  0100               	movlb	0	; () banked
  4894   00391A  5189               	movf	lcd_4bit_send_string@lcd& (0+255),w,b
  4895   00391C  118A               	iorwf	(lcd_4bit_send_string@lcd+1)& (0+255),w,b
  4896   00391E  A4D8               	btfss	status,2,c
  4897   003920  EF94  F01C         	goto	u9161
  4898   003924  EF96  F01C         	goto	u9160
  4899   003928                     u9161:
  4900   003928  EFB4  F01C         	goto	l9238
  4901   00392C                     u9160:
  4902   00392C                     
  4903                           ; BSR set to: 0
  4904                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 111:     }
  4905   00392C  EFCD  F01C         	goto	l94
  4906   003930                     l9234:
  4907   003930  C089  F085         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  4908   003934  C08A  F086         	movff	lcd_4bit_send_string@lcd+1,lcd_4bit_send_char_data@lcd+1
  4909   003938  C08B  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  4910   00393C  C08C  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  4911   003940  0E00               	movlw	low (__smallconst shr (0+16))
  4912   003942  6EF8               	movwf	tblptru,c
  4913   003944  0E0F               	movlw	(high __ramtop+-1)
  4914   003946  64F7               	cpfsgt	tblptrh,c
  4915   003948  D003               	bra	u9177
  4916   00394A  0008               	tblrd		*
  4917   00394C  50F5               	movf	tablat,w,c
  4918   00394E  D005               	bra	u9170
  4919   003950                     u9177:
  4920   003950  CFF6 FFE9          	movff	tblptrl,fsr0l
  4921   003954  CFF7 FFEA          	movff	tblptrh,fsr0h
  4922   003958  50EF               	movf	indf0,w,c
  4923   00395A                     u9170:
  4924   00395A  0100               	movlb	0	; () banked
  4925   00395C  6F87               	movwf	lcd_4bit_send_char_data@data& (0+255),b
  4926   00395E  ECCB  F01D         	call	_lcd_4bit_send_char_data	;wreg free
  4927   003962  0100               	movlb	0	; () banked
  4928   003964  4B8B               	infsnz	lcd_4bit_send_string@str& (0+255),f,b
  4929   003966  2B8C               	incf	(lcd_4bit_send_string@str+1)& (0+255),f,b
  4930   003968                     l9238:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 113:         while(*str){
  4934   003968  C08B  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  4935   00396C  C08C  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  4936   003970  0E00               	movlw	low (__smallconst shr (0+16))
  4937   003972  6EF8               	movwf	tblptru,c
  4938   003974  0E0F               	movlw	(high __ramtop+-1)
  4939   003976  64F7               	cpfsgt	tblptrh,c
  4940   003978  D003               	bra	u9187
  4941   00397A  0008               	tblrd		*
  4942   00397C  50F5               	movf	tablat,w,c
  4943   00397E  D005               	bra	u9180
  4944   003980                     u9187:
  4945   003980  CFF6 FFE9          	movff	tblptrl,fsr0l
  4946   003984  CFF7 FFEA          	movff	tblptrh,fsr0h
  4947   003988  50EF               	movf	indf0,w,c
  4948   00398A                     u9180:
  4949   00398A  0900               	iorlw	0
  4950   00398C  A4D8               	btfss	status,2,c
  4951   00398E  EFCB  F01C         	goto	u9191
  4952   003992  EFCD  F01C         	goto	u9190
  4953   003996                     u9191:
  4954   003996  EF98  F01C         	goto	l9234
  4955   00399A                     u9190:
  4956   00399A                     l94:
  4957   00399A  0012               	return		;funcret
  4958   00399C                     __end_of_lcd_4bit_send_string:
  4959                           	callstack 0
  4960                           
  4961 ;; *************** function _lcd_4bit_send_char_data *****************
  4962 ;; Defined at:
  4963 ;;		line 68 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  lcd             2    5[BANK0 ] PTR const struct .
  4966 ;;		 -> lcd1(6), 
  4967 ;;  data            1    7[BANK0 ] unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  ret             1    8[BANK0 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      unsigned char 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:        4 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 10
  4986 ;; This function calls:
  4987 ;;		_gpio_pin_write_logic
  4988 ;;		_lcd_4bit_send_enable_signal
  4989 ;;		_lcd_send_4bits
  4990 ;; This function is called by:
  4991 ;;		_lcd_4bit_send_string
  4992 ;;		_lcd_4bit_send_string_pos
  4993 ;;		_lcd_4bit_send_char_data_pos
  4994 ;;		_lcd_4bit_send_custom_char
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           	psect	text28
  4999   003B96                     __ptext28:
  5000                           	callstack 0
  5001   003B96                     _lcd_4bit_send_char_data:
  5002                           	callstack 18
  5003   003B96                     
  5004                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 70:     if(lcd==((void*)0)){
  5005   003B96  0100               	movlb	0	; () banked
  5006   003B98  5185               	movf	lcd_4bit_send_char_data@lcd& (0+255),w,b
  5007   003B9A  1186               	iorwf	(lcd_4bit_send_char_data@lcd+1)& (0+255),w,b
  5008   003B9C  A4D8               	btfss	status,2,c
  5009   003B9E  EFD3  F01D         	goto	u9091
  5010   003BA2  EFD5  F01D         	goto	u9090
  5011   003BA6                     u9091:
  5012   003BA6  EFD9  F01D         	goto	l9136
  5013   003BAA                     u9090:
  5014   003BAA                     
  5015                           ; BSR set to: 0
  5016                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 71:         ret=(Std_ReturnType)0x00;
  5017   003BAA  0E00               	movlw	0
  5018   003BAC  6F88               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5019                           
  5020                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 72:     }
  5021   003BAE  EF08  F01E         	goto	l9138
  5022   003BB2                     l9136:
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 74:        ret=gpio_pin_write_logic(&(lcd->lcd_rs),HIG
      +                          H);
  5026   003BB2  C085  F028         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
  5027   003BB6  C086  F029         	movff	lcd_4bit_send_char_data@lcd+1,gpio_pin_write_logic@pin_config+1
  5028   003BBA  0E01               	movlw	1
  5029   003BBC  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5030   003BBE  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  5031   003BC2  0100               	movlb	0	; () banked
  5032   003BC4  6F88               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5033                           
  5034                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 75:         ret=lcd_send_4bits(lcd, data >> 4);
  5035   003BC6  C085  F081         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  5036   003BCA  C086  F082         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  5037   003BCE  3987               	swapf	lcd_4bit_send_char_data@data& (0+255),w,b
  5038   003BD0  0B0F               	andlw	15
  5039   003BD2  6F83               	movwf	lcd_send_4bits@_data_command& (0+255),b
  5040   003BD4  ECFB  F01B         	call	_lcd_send_4bits	;wreg free
  5041   003BD8  0100               	movlb	0	; () banked
  5042   003BDA  6F88               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5043                           
  5044                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 76:         ret=lcd_4bit_send_enable_signal(lcd);
  5045   003BDC  C085  F081         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  5046   003BE0  C086  F082         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  5047   003BE4  EC06  F020         	call	_lcd_4bit_send_enable_signal	;wreg free
  5048   003BE8  0100               	movlb	0	; () banked
  5049   003BEA  6F88               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5050                           
  5051                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 77:         ret=lcd_send_4bits(lcd, data);
  5052   003BEC  C085  F081         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  5053   003BF0  C086  F082         	movff	lcd_4bit_send_char_data@lcd+1,lcd_send_4bits@lcd+1
  5054   003BF4  C087  F083         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@_data_command
  5055   003BF8  ECFB  F01B         	call	_lcd_send_4bits	;wreg free
  5056   003BFC  0100               	movlb	0	; () banked
  5057   003BFE  6F88               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5058                           
  5059                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 78:         ret=lcd_4bit_send_enable_signal(lcd);
  5060   003C00  C085  F081         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  5061   003C04  C086  F082         	movff	lcd_4bit_send_char_data@lcd+1,lcd_4bit_send_enable_signal@lcd+1
  5062   003C08  EC06  F020         	call	_lcd_4bit_send_enable_signal	;wreg free
  5063   003C0C  0100               	movlb	0	; () banked
  5064   003C0E  6F88               	movwf	lcd_4bit_send_char_data@ret& (0+255),b
  5065   003C10                     l9138:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 80:     return ret;
  5069   003C10  5188               	movf	lcd_4bit_send_char_data@ret& (0+255),w,b
  5070   003C12                     
  5071                           ; BSR set to: 0
  5072   003C12  0012               	return		;funcret
  5073   003C14                     __end_of_lcd_4bit_send_char_data:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function _lcd_send_4bits *****************
  5077 ;; Defined at:
  5078 ;;		line 401 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  lcd             2    1[BANK0 ] PTR const struct .
  5081 ;;		 -> lcd1(6), 
  5082 ;;  _data_comman    1    3[BANK0 ] unsigned char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  ret             1    4[BANK0 ] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1    wreg      unsigned char 
  5087 ;; Registers used:
  5088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5094 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;Total ram usage:        4 bytes
  5099 ;; Hardware stack levels used: 1
  5100 ;; Hardware stack levels required when called: 9
  5101 ;; This function calls:
  5102 ;;		_gpio_pin_write_logic
  5103 ;; This function is called by:
  5104 ;;		_lcd_4bit_send_command
  5105 ;;		_lcd_4bit_send_char_data
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text29
  5110   0037F6                     __ptext29:
  5111                           	callstack 0
  5112   0037F6                     _lcd_send_4bits:
  5113                           	callstack 17
  5114   0037F6                     
  5115                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 403:     if(lcd==((void*)0)){
  5116   0037F6  0100               	movlb	0	; () banked
  5117   0037F8  5181               	movf	lcd_send_4bits@lcd& (0+255),w,b
  5118   0037FA  1182               	iorwf	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5119   0037FC  A4D8               	btfss	status,2,c
  5120   0037FE  EF03  F01C         	goto	u8871
  5121   003802  EF05  F01C         	goto	u8870
  5122   003806                     u8871:
  5123   003806  EF09  F01C         	goto	l8876
  5124   00380A                     u8870:
  5125   00380A                     
  5126                           ; BSR set to: 0
  5127                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 404:         ret=(Std_ReturnType)0x00;
  5128   00380A  0E00               	movlw	0
  5129   00380C  6F84               	movwf	lcd_send_4bits@ret& (0+255),b
  5130                           
  5131                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 405:     }
  5132   00380E  EF42  F01C         	goto	l8878
  5133   003812                     l8876:
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 407:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          0]),( _data_command >> 0 ) & (uint8)0x01);
  5137   003812  0E02               	movlw	2
  5138   003814  2581               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5139   003816  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5140   003818  0E00               	movlw	0
  5141   00381A  2182               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5142   00381C  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5143   00381E  5183               	movf	lcd_send_4bits@_data_command& (0+255),w,b
  5144   003820  0B01               	andlw	1
  5145   003822  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5146   003824  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  5147   003828  0100               	movlb	0	; () banked
  5148   00382A  6F84               	movwf	lcd_send_4bits@ret& (0+255),b
  5149                           
  5150                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 408:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          1]),( _data_command >> 1 ) & (uint8)0x01);
  5151   00382C  0E03               	movlw	3
  5152   00382E  2581               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5153   003830  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5154   003832  0E00               	movlw	0
  5155   003834  2182               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5156   003836  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5157   003838  90D8               	bcf	status,0,c
  5158   00383A  3183               	rrcf	lcd_send_4bits@_data_command& (0+255),w,b
  5159   00383C  0B01               	andlw	1
  5160   00383E  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5161   003840  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  5162   003844  0100               	movlb	0	; () banked
  5163   003846  6F84               	movwf	lcd_send_4bits@ret& (0+255),b
  5164                           
  5165                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 409:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          2]),( _data_command >> 2 ) & (uint8)0x01);
  5166   003848  0E04               	movlw	4
  5167   00384A  2581               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5168   00384C  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5169   00384E  0E00               	movlw	0
  5170   003850  2182               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5171   003852  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5172   003854  4183               	rrncf	lcd_send_4bits@_data_command& (0+255),w,b
  5173   003856  42E8               	rrncf	wreg,f,c
  5174   003858  0B3F               	andlw	63
  5175   00385A  0B01               	andlw	1
  5176   00385C  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5177   00385E  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  5178   003862  0100               	movlb	0	; () banked
  5179   003864  6F84               	movwf	lcd_send_4bits@ret& (0+255),b
  5180                           
  5181                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 410:         ret=gpio_pin_write_logic(&(lcd->lcd_data[
      +                          3]),( _data_command >> 3 ) & (uint8)0x01);
  5182   003866  0E05               	movlw	5
  5183   003868  2581               	addwf	lcd_send_4bits@lcd& (0+255),w,b
  5184   00386A  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5185   00386C  0E00               	movlw	0
  5186   00386E  2182               	addwfc	(lcd_send_4bits@lcd+1)& (0+255),w,b
  5187   003870  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5188   003872  3983               	swapf	lcd_send_4bits@_data_command& (0+255),w,b
  5189   003874  46E8               	rlncf	wreg,f,c
  5190   003876  0B1F               	andlw	31
  5191   003878  0B01               	andlw	1
  5192   00387A  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5193   00387C  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  5194   003880  0100               	movlb	0	; () banked
  5195   003882  6F84               	movwf	lcd_send_4bits@ret& (0+255),b
  5196   003884                     l8878:
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 412:     return ret;
  5200   003884  5184               	movf	lcd_send_4bits@ret& (0+255),w,b
  5201   003886                     
  5202                           ; BSR set to: 0
  5203   003886  0012               	return		;funcret
  5204   003888                     __end_of_lcd_send_4bits:
  5205                           	callstack 0
  5206                           
  5207 ;; *************** function _lcd_4bit_send_enable_signal *****************
  5208 ;; Defined at:
  5209 ;;		line 414 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  lcd             2    1[BANK0 ] PTR const struct .
  5212 ;;		 -> lcd1(6), 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  ret             1    3[BANK0 ] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      unsigned char 
  5217 ;; Registers used:
  5218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5227 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;Total ram usage:        3 bytes
  5229 ;; Hardware stack levels used: 1
  5230 ;; Hardware stack levels required when called: 9
  5231 ;; This function calls:
  5232 ;;		_gpio_pin_write_logic
  5233 ;; This function is called by:
  5234 ;;		_lcd_4bit_send_command
  5235 ;;		_lcd_4bit_send_char_data
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text30
  5240   00400C                     __ptext30:
  5241                           	callstack 0
  5242   00400C                     _lcd_4bit_send_enable_signal:
  5243                           	callstack 17
  5244   00400C                     
  5245                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 416:     if(lcd==((void*)0)){
  5246   00400C  0100               	movlb	0	; () banked
  5247   00400E  5181               	movf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  5248   004010  1182               	iorwf	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  5249   004012  A4D8               	btfss	status,2,c
  5250   004014  EF0E  F020         	goto	u8881
  5251   004018  EF10  F020         	goto	u8880
  5252   00401C                     u8881:
  5253   00401C  EF14  F020         	goto	l8888
  5254   004020                     u8880:
  5255   004020                     
  5256                           ; BSR set to: 0
  5257                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 417:         ret=(Std_ReturnType)0x00;
  5258   004020  0E00               	movlw	0
  5259   004022  6F83               	movwf	lcd_4bit_send_enable_signal@ret& (0+255),b
  5260                           
  5261                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 418:     }
  5262   004024  EF2F  F020         	goto	l8894
  5263   004028                     l8888:
  5264                           
  5265                           ; BSR set to: 0
  5266   004028  0E01               	movlw	1
  5267   00402A  2581               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  5268   00402C  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5269   00402E  0E00               	movlw	0
  5270   004030  2182               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  5271   004032  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5272   004034  0E01               	movlw	1
  5273   004036  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5274   004038  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  5275   00403C                     
  5276                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 421:         _delay((unsigned long)((5)*(16000000UL/40
      +                          00000.0)));
  5277   00403C  0E06               	movlw	6
  5278   00403E                     u10587:
  5279   00403E  2EE8               	decfsz	wreg,f,c
  5280   004040  D7FE               	bra	u10587
  5281   004042  D000               	nop2	
  5282   004044                     
  5283                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 422:         ret=gpio_pin_write_logic(&(lcd->lcd_en),L
      +                          OW);
  5284   004044  0E01               	movlw	1
  5285   004046  0100               	movlb	0	; () banked
  5286   004048  2581               	addwf	lcd_4bit_send_enable_signal@lcd& (0+255),w,b
  5287   00404A  6E28               	movwf	gpio_pin_write_logic@pin_config^0,c
  5288   00404C  0E00               	movlw	0
  5289   00404E  2182               	addwfc	(lcd_4bit_send_enable_signal@lcd+1)& (0+255),w,b
  5290   004050  6E29               	movwf	(gpio_pin_write_logic@pin_config+1)^0,c
  5291   004052  0E00               	movlw	0
  5292   004054  6E2A               	movwf	gpio_pin_write_logic@logic^0,c
  5293   004056  EC65  F013         	call	_gpio_pin_write_logic	;wreg free
  5294   00405A  0100               	movlb	0	; () banked
  5295   00405C  6F83               	movwf	lcd_4bit_send_enable_signal@ret& (0+255),b
  5296   00405E                     l8894:
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 424:     return ret;
  5300   00405E  5183               	movf	lcd_4bit_send_enable_signal@ret& (0+255),w,b
  5301   004060                     
  5302                           ; BSR set to: 0
  5303   004060  0012               	return		;funcret
  5304   004062                     __end_of_lcd_4bit_send_enable_signal:
  5305                           	callstack 0
  5306                           
  5307 ;; *************** function _gpio_pin_write_logic *****************
  5308 ;; Defined at:
  5309 ;;		line 94 in file "MCAL_Layer/GPIO/hal_gpio.c"
  5310 ;; Parameters:    Size  Location     Type
  5311 ;;  pin_config      2   39[COMRAM] PTR const struct .
  5312 ;;		 -> ccp1_obj(13), ccp2_obj(13), lcd1.lcd_data(4), lcd1(6), 
  5313 ;;		 -> relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), relay_initialize@pin_obj(1), led_turn_off@pin_obj(1), 
  5314 ;;		 -> led_turn_on@pin_obj(1), led_initialize@pin_obj(1), 
  5315 ;;  logic           1   41[COMRAM] enum E3239
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;  ret             1    0[BANK0 ] unsigned char 
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      unsigned char 
  5320 ;; Registers used:
  5321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5327 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Totals:         9       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;Total ram usage:       10 bytes
  5332 ;; Hardware stack levels used: 1
  5333 ;; Hardware stack levels required when called: 8
  5334 ;; This function calls:
  5335 ;;		Nothing
  5336 ;; This function is called by:
  5337 ;;		_lcd_4bit_send_command
  5338 ;;		_lcd_4bit_send_char_data
  5339 ;;		_lcd_send_4bits
  5340 ;;		_lcd_4bit_send_enable_signal
  5341 ;;		_gpio_pin_initialize
  5342 ;;		_seven_segment_write_number
  5343 ;;		_lcd_8bit_send_command
  5344 ;;		_lcd_8bit_send_char_data
  5345 ;;		_lcd_8bit_send_enable_signal
  5346 ;;		_dc_motor_move_right
  5347 ;;		_dc_motor_move_left
  5348 ;;		_dc_motor_stop
  5349 ;;		_keypad_get_value
  5350 ;;		_led_turn_on
  5351 ;;		_led_turn_off
  5352 ;;		_relay_turn_on
  5353 ;;		_relay_turn_off
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           	psect	text31
  5358   0026CA                     __ptext31:
  5359                           	callstack 0
  5360   0026CA                     _gpio_pin_write_logic:
  5361                           	callstack 17
  5362   0026CA                     
  5363                           ;MCAL_Layer/GPIO/hal_gpio.c: 95:       Std_ReturnType ret=(Std_ReturnType)0x01;
  5364   0026CA  0E01               	movlw	1
  5365   0026CC  0100               	movlb	0	; () banked
  5366   0026CE  6F80               	movwf	gpio_pin_write_logic@ret& (0+255),b
  5367   0026D0                     
  5368                           ; BSR set to: 0
  5369                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:     if((pin_config==((void*)0))||(pin_config->pin>8 -1)
      +                          ||(pin_config->port>5 -1)){
  5370   0026D0  5028               	movf	gpio_pin_write_logic@pin_config^0,w,c
  5371   0026D2  1029               	iorwf	(gpio_pin_write_logic@pin_config+1)^0,w,c
  5372   0026D4  B4D8               	btfsc	status,2,c
  5373   0026D6  EF6F  F013         	goto	u8471
  5374   0026DA  EF71  F013         	goto	u8470
  5375   0026DE                     u8471:
  5376   0026DE  EF91  F013         	goto	l8672
  5377   0026E2                     u8470:
  5378   0026E2                     
  5379                           ; BSR set to: 0
  5380   0026E2  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5381   0026E6  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5382   0026EA  30DF               	rrcf	223,w,c
  5383   0026EC  32E8               	rrcf	wreg,f,c
  5384   0026EE  32E8               	rrcf	wreg,f,c
  5385   0026F0  0B07               	andlw	7
  5386   0026F2  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5387   0026F4  0E08               	movlw	8
  5388   0026F6  602B               	cpfslt	??_gpio_pin_write_logic^0,c
  5389   0026F8  EF80  F013         	goto	u8481
  5390   0026FC  EF82  F013         	goto	u8480
  5391   002700                     u8481:
  5392   002700  EF91  F013         	goto	l8672
  5393   002704                     u8480:
  5394   002704                     
  5395                           ; BSR set to: 0
  5396   002704  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5397   002708  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5398   00270C  50DF               	movf	223,w,c
  5399   00270E  0B07               	andlw	7
  5400   002710  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5401   002712  0E04               	movlw	4
  5402   002714  642B               	cpfsgt	??_gpio_pin_write_logic^0,c
  5403   002716  EF8F  F013         	goto	u8491
  5404   00271A  EF91  F013         	goto	u8490
  5405   00271E                     u8491:
  5406   00271E  EFF4  F013         	goto	l8680
  5407   002722                     u8490:
  5408   002722                     l8672:
  5409                           
  5410                           ; BSR set to: 0
  5411                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:         ret=(Std_ReturnType)0x00;
  5412   002722  0E00               	movlw	0
  5413   002724  6F80               	movwf	gpio_pin_write_logic@ret& (0+255),b
  5414                           
  5415                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     }
  5416   002726  EF09  F014         	goto	l8682
  5417   00272A                     l8674:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;MCAL_Layer/GPIO/hal_gpio.c: 102:                 (*lat_registers[pin_config->port]|=((u
      +                          int8)0x01<<pin_config->pin));
  5421   00272A  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5422   00272E  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5423   002732  30DF               	rrcf	223,w,c
  5424   002734  32E8               	rrcf	wreg,f,c
  5425   002736  32E8               	rrcf	wreg,f,c
  5426   002738  0B07               	andlw	7
  5427   00273A  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5428   00273C  0E01               	movlw	1
  5429   00273E  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5430   002740  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  5431   002742  EFA5  F013         	goto	u8504
  5432   002746                     u8505:
  5433   002746  90D8               	bcf	status,0,c
  5434   002748  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5435   00274A                     u8504:
  5436   00274A  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  5437   00274C  EFA3  F013         	goto	u8505
  5438   002750  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5439   002754  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5440   002758  50DF               	movf	223,w,c
  5441   00275A  0B07               	andlw	7
  5442   00275C  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5443   00275E  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5444   002760  0D02               	mullw	2
  5445   002762  0E90               	movlw	low _lat_registers
  5446   002764  24F3               	addwf	243,w,c
  5447   002766  6ED9               	movwf	fsr2l,c
  5448   002768  0E01               	movlw	high _lat_registers
  5449   00276A  20F4               	addwfc	prodh,w,c
  5450   00276C  6EDA               	movwf	fsr2h,c
  5451   00276E  CFDE F02E          	movff	postinc2,??_gpio_pin_write_logic+3
  5452   002772  CFDD F02F          	movff	postdec2,??_gpio_pin_write_logic+4
  5453   002776  C02E  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  5454   00277A  C02F  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  5455   00277E  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5456   002780  12DF               	iorwf	indf2,f,c
  5457                           
  5458                           ;MCAL_Layer/GPIO/hal_gpio.c: 103:                 break;
  5459   002782  EF09  F014         	goto	l8682
  5460   002786                     l8676:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;MCAL_Layer/GPIO/hal_gpio.c: 105:                 (*lat_registers[pin_config->port]&=~((
      +                          uint8)0x01<<pin_config->pin));
  5464   002786  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5465   00278A  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5466   00278E  30DF               	rrcf	223,w,c
  5467   002790  32E8               	rrcf	wreg,f,c
  5468   002792  32E8               	rrcf	wreg,f,c
  5469   002794  0B07               	andlw	7
  5470   002796  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5471   002798  0E01               	movlw	1
  5472   00279A  6E2C               	movwf	(??_gpio_pin_write_logic+1)^0,c
  5473   00279C  2A2B               	incf	??_gpio_pin_write_logic^0,f,c
  5474   00279E  EFD3  F013         	goto	u8514
  5475   0027A2                     u8515:
  5476   0027A2  90D8               	bcf	status,0,c
  5477   0027A4  362C               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  5478   0027A6                     u8514:
  5479   0027A6  2E2B               	decfsz	??_gpio_pin_write_logic^0,f,c
  5480   0027A8  EFD1  F013         	goto	u8515
  5481   0027AC  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5482   0027AE  0AFF               	xorlw	255
  5483   0027B0  6E2D               	movwf	(??_gpio_pin_write_logic+2)^0,c
  5484   0027B2  C028  FFD9         	movff	gpio_pin_write_logic@pin_config,fsr2l
  5485   0027B6  C029  FFDA         	movff	gpio_pin_write_logic@pin_config+1,fsr2h
  5486   0027BA  50DF               	movf	223,w,c
  5487   0027BC  0B07               	andlw	7
  5488   0027BE  6E2E               	movwf	(??_gpio_pin_write_logic+3)^0,c
  5489   0027C0  502E               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  5490   0027C2  0D02               	mullw	2
  5491   0027C4  0E90               	movlw	low _lat_registers
  5492   0027C6  24F3               	addwf	243,w,c
  5493   0027C8  6ED9               	movwf	fsr2l,c
  5494   0027CA  0E01               	movlw	high _lat_registers
  5495   0027CC  20F4               	addwfc	prodh,w,c
  5496   0027CE  6EDA               	movwf	fsr2h,c
  5497   0027D0  CFDE F02F          	movff	postinc2,??_gpio_pin_write_logic+4
  5498   0027D4  CFDD F030          	movff	postdec2,??_gpio_pin_write_logic+5
  5499   0027D8  C02F  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  5500   0027DC  C030  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  5501   0027E0  502D               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  5502   0027E2  16DF               	andwf	indf2,f,c
  5503                           
  5504                           ;MCAL_Layer/GPIO/hal_gpio.c: 106:                 break;
  5505   0027E4  EF09  F014         	goto	l8682
  5506   0027E8                     l8680:
  5507                           
  5508                           ; BSR set to: 0
  5509   0027E8  502A               	movf	gpio_pin_write_logic@logic^0,w,c
  5510   0027EA  6E2B               	movwf	??_gpio_pin_write_logic^0,c
  5511   0027EC  6A2C               	clrf	(??_gpio_pin_write_logic+1)^0,c
  5512                           
  5513                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5514                           ; Switch size 1, requested type "simple"
  5515                           ; Number of cases is 1, Range of values is 0 to 0
  5516                           ; switch strategies available:
  5517                           ; Name         Instructions Cycles
  5518                           ; simple_byte            4     3 (average)
  5519                           ;	Chosen strategy is simple_byte
  5520   0027EE  502C               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  5521   0027F0  0A00               	xorlw	0	; case 0
  5522   0027F2  B4D8               	btfsc	status,2,c
  5523   0027F4  EFFE  F013         	goto	l10508
  5524   0027F8  EF91  F013         	goto	l8672
  5525   0027FC                     l10508:
  5526                           
  5527                           ; BSR set to: 0
  5528                           ; Switch size 1, requested type "simple"
  5529                           ; Number of cases is 2, Range of values is 0 to 1
  5530                           ; switch strategies available:
  5531                           ; Name         Instructions Cycles
  5532                           ; simple_byte            7     4 (average)
  5533                           ;	Chosen strategy is simple_byte
  5534   0027FC  502B               	movf	??_gpio_pin_write_logic^0,w,c
  5535   0027FE  0A00               	xorlw	0	; case 0
  5536   002800  B4D8               	btfsc	status,2,c
  5537   002802  EFC3  F013         	goto	l8676
  5538   002806  0A01               	xorlw	1	; case 1
  5539   002808  B4D8               	btfsc	status,2,c
  5540   00280A  EF95  F013         	goto	l8674
  5541   00280E  EF91  F013         	goto	l8672
  5542   002812                     l8682:
  5543                           
  5544                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:     return ret;
  5545   002812  0100               	movlb	0	; () banked
  5546   002814  5180               	movf	gpio_pin_write_logic@ret& (0+255),w,b
  5547   002816                     
  5548                           ; BSR set to: 0
  5549   002816  0012               	return		;funcret
  5550   002818                     __end_of_gpio_pin_write_logic:
  5551                           	callstack 0
  5552                           
  5553 ;; *************** function _convert_uint8_to_string *****************
  5554 ;; Defined at:
  5555 ;;		line 331 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  value           1    wreg     unsigned char 
  5558 ;;  str             2   61[BANK0 ] PTR unsigned char 
  5559 ;;		 -> Pulse_Meter_Display@Duty_Cycle_Str(4), 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  value           1   67[BANK0 ] unsigned char 
  5562 ;;  Temp_str        4   63[BANK0 ] unsigned char [4]
  5563 ;;  cnt             1   68[BANK0 ] unsigned char 
  5564 ;;  ret             1    0        unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      unsigned char 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;Total ram usage:        8 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 16
  5581 ;; This function calls:
  5582 ;;		_memset
  5583 ;;		_sprintf
  5584 ;; This function is called by:
  5585 ;;		_Pulse_Meter_Display
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           	psect	text32
  5590   0033EA                     __ptext32:
  5591                           	callstack 0
  5592   0033EA                     _convert_uint8_to_string:
  5593                           	callstack 13
  5594                           
  5595                           ; BSR set to: 0
  5596                           ;incstack = 0
  5597                           ;convert_uint8_to_string@value stored from wreg
  5598   0033EA  0100               	movlb	0	; () banked
  5599   0033EC  6FC3               	movwf	convert_uint8_to_string@value& (0+255),b
  5600   0033EE                     
  5601                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 333:    uint8 Temp_str[4]={0};
  5602   0033EE  0E00               	movlw	0
  5603   0033F0  0100               	movlb	0	; () banked
  5604   0033F2  6FBF               	movwf	convert_uint8_to_string@Temp_str& (0+255),b
  5605   0033F4  0E00               	movlw	0
  5606   0033F6  6FC0               	movwf	(convert_uint8_to_string@Temp_str+1)& (0+255),b
  5607   0033F8  0E00               	movlw	0
  5608   0033FA  6FC1               	movwf	(convert_uint8_to_string@Temp_str+2)& (0+255),b
  5609   0033FC  0E00               	movlw	0
  5610   0033FE  6FC2               	movwf	(convert_uint8_to_string@Temp_str+3)& (0+255),b
  5611                           
  5612                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 334:    uint8 cnt =0;
  5613   003400  0E00               	movlw	0
  5614   003402  6FC4               	movwf	convert_uint8_to_string@cnt& (0+255),b
  5615   003404                     
  5616                           ; BSR set to: 0
  5617                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 335:     if(str==((void*)0)){
  5618   003404  51BD               	movf	convert_uint8_to_string@str& (0+255),w,b
  5619   003406  11BE               	iorwf	(convert_uint8_to_string@str+1)& (0+255),w,b
  5620   003408  A4D8               	btfss	status,2,c
  5621   00340A  EF09  F01A         	goto	u9261
  5622   00340E  EF0B  F01A         	goto	u9260
  5623   003412                     u9261:
  5624   003412  EF0D  F01A         	goto	l9300
  5625   003416                     u9260:
  5626   003416                     
  5627                           ; BSR set to: 0
  5628                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 337:     }
  5629   003416  EF50  F01A         	goto	l168
  5630   00341A                     l9300:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 339:         memset(str,'\0',4);
  5634   00341A  C0BD  F028         	movff	convert_uint8_to_string@str,memset@dest
  5635   00341E  C0BE  F029         	movff	convert_uint8_to_string@str+1,memset@dest+1
  5636   003422  0E00               	movlw	0
  5637   003424  6E2B               	movwf	(memset@c+1)^0,c
  5638   003426  0E00               	movlw	0
  5639   003428  6E2A               	movwf	memset@c^0,c
  5640   00342A  0E00               	movlw	0
  5641   00342C  6E2D               	movwf	(memset@n+1)^0,c
  5642   00342E  0E04               	movlw	4
  5643   003430  6E2C               	movwf	memset@n^0,c
  5644   003432  ECEB  F00F         	call	_memset	;wreg free
  5645   003436                     
  5646                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 340:         sprintf(Temp_str,"%i",value);
  5647   003436  0EBF               	movlw	low convert_uint8_to_string@Temp_str
  5648   003438  0100               	movlb	0	; () banked
  5649   00343A  6FB5               	movwf	sprintf@s& (0+255),b
  5650   00343C  0E00               	movlw	high convert_uint8_to_string@Temp_str
  5651   00343E  6FB6               	movwf	(sprintf@s+1)& (0+255),b
  5652   003440  0E85               	movlw	low STR_1
  5653   003442  6FB7               	movwf	sprintf@fmt& (0+255),b
  5654   003444  0E10               	movlw	high STR_1
  5655   003446  6FB8               	movwf	(sprintf@fmt+1)& (0+255),b
  5656   003448  C0C3  F0B9         	movff	convert_uint8_to_string@value,?_sprintf+4
  5657   00344C  6BBA               	clrf	(?_sprintf+5)& (0+255),b
  5658   00344E  ECDA  F01F         	call	_sprintf	;wreg free
  5659                           
  5660                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 341:         while (Temp_str[cnt] != '\0'){
  5661   003452  EF3A  F01A         	goto	l9308
  5662   003456                     l9304:
  5663                           
  5664                           ; BSR set to: 0
  5665                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 342:             str[cnt] = Temp_str [cnt];
  5666   003456  0EBF               	movlw	low convert_uint8_to_string@Temp_str
  5667   003458  25C4               	addwf	convert_uint8_to_string@cnt& (0+255),w,b
  5668   00345A  6ED9               	movwf	fsr2l,c
  5669   00345C  6ADA               	clrf	fsr2h,c
  5670   00345E  0E00               	movlw	high convert_uint8_to_string@Temp_str
  5671   003460  22DA               	addwfc	fsr2h,f,c
  5672   003462  51C4               	movf	convert_uint8_to_string@cnt& (0+255),w,b
  5673   003464  25BD               	addwf	convert_uint8_to_string@str& (0+255),w,b
  5674   003466  6EE1               	movwf	fsr1l,c
  5675   003468  0E00               	movlw	0
  5676   00346A  21BE               	addwfc	(convert_uint8_to_string@str+1)& (0+255),w,b
  5677   00346C  6EE2               	movwf	fsr1h,c
  5678   00346E  CFDF FFE7          	movff	indf2,indf1
  5679   003472                     
  5680                           ; BSR set to: 0
  5681                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 343:             cnt++;
  5682   003472  2BC4               	incf	convert_uint8_to_string@cnt& (0+255),f,b
  5683   003474                     l9308:
  5684                           
  5685                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 341:         while (Temp_str[cnt] != '\0'){
  5686   003474  0EBF               	movlw	low convert_uint8_to_string@Temp_str
  5687   003476  0100               	movlb	0	; () banked
  5688   003478  25C4               	addwf	convert_uint8_to_string@cnt& (0+255),w,b
  5689   00347A  6ED9               	movwf	fsr2l,c
  5690   00347C  6ADA               	clrf	fsr2h,c
  5691   00347E  0E00               	movlw	high convert_uint8_to_string@Temp_str
  5692   003480  22DA               	addwfc	fsr2h,f,c
  5693   003482  50DF               	movf	indf2,w,c
  5694   003484  A4D8               	btfss	status,2,c
  5695   003486  EF47  F01A         	goto	u9271
  5696   00348A  EF49  F01A         	goto	u9270
  5697   00348E                     u9271:
  5698   00348E  EF2B  F01A         	goto	l9304
  5699   003492                     u9270:
  5700   003492                     
  5701                           ; BSR set to: 0
  5702                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 345:         str[3] = '\0';
  5703   003492  EE20 F003          	lfsr	2,3
  5704   003496  51BD               	movf	convert_uint8_to_string@str& (0+255),w,b
  5705   003498  26D9               	addwf	fsr2l,f,c
  5706   00349A  51BE               	movf	(convert_uint8_to_string@str+1)& (0+255),w,b
  5707   00349C  22DA               	addwfc	fsr2h,f,c
  5708   00349E  6ADF               	clrf	indf2,c
  5709   0034A0                     l168:
  5710                           
  5711                           ; BSR set to: 0
  5712   0034A0  0012               	return		;funcret
  5713   0034A2                     __end_of_convert_uint8_to_string:
  5714                           	callstack 0
  5715                           
  5716 ;; *************** function _convert_uint32_to_string *****************
  5717 ;; Defined at:
  5718 ;;		line 377 in file "ECU_Layer/Chr_LCD/ecu_chr_lcd.c"
  5719 ;; Parameters:    Size  Location     Type
  5720 ;;  value           4   61[BANK0 ] unsigned long 
  5721 ;;  str             2   65[BANK0 ] PTR unsigned char 
  5722 ;;		 -> Pulse_Meter_Display@Freq_Str(5), 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  Temp_str       11   14[BANK1 ] unsigned char [11]
  5725 ;;  cnt             1   25[BANK1 ] unsigned char 
  5726 ;;  ret             1    0        unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      unsigned char 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5736 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;      Totals:         0       6      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5740 ;;Total ram usage:       18 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 16
  5743 ;; This function calls:
  5744 ;;		_memset
  5745 ;;		_sprintf
  5746 ;; This function is called by:
  5747 ;;		_Pulse_Meter_Display
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           	psect	text33
  5752   003260                     __ptext33:
  5753                           	callstack 0
  5754   003260                     _convert_uint32_to_string:
  5755                           	callstack 13
  5756   003260                     
  5757                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 379:    uint8 Temp_str[11]={0};
  5758   003260  EE21  F06C         	lfsr	2,convert_uint32_to_string@Temp_str
  5759   003264  0E0A               	movlw	10
  5760   003266                     u9281:
  5761   003266  6ADE               	clrf	postinc2,c
  5762   003268  06E8               	decf	wreg,f,c
  5763   00326A  E2FD               	bc	u9281
  5764   00326C                     
  5765                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 380:    uint8 cnt =0;
  5766   00326C  0E00               	movlw	0
  5767   00326E  0101               	movlb	1	; () banked
  5768   003270  6F77               	movwf	convert_uint32_to_string@cnt& (0+255),b
  5769   003272                     
  5770                           ; BSR set to: 1
  5771                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 381:     if(str==((void*)0)){
  5772   003272  0100               	movlb	0	; () banked
  5773   003274  51C1               	movf	convert_uint32_to_string@str& (0+255),w,b
  5774   003276  11C2               	iorwf	(convert_uint32_to_string@str+1)& (0+255),w,b
  5775   003278  A4D8               	btfss	status,2,c
  5776   00327A  EF41  F019         	goto	u9291
  5777   00327E  EF43  F019         	goto	u9290
  5778   003282                     u9291:
  5779   003282  EF45  F019         	goto	l9324
  5780   003286                     u9290:
  5781   003286                     
  5782                           ; BSR set to: 0
  5783                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 383:     }
  5784   003286  EF92  F019         	goto	l188
  5785   00328A                     l9324:
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 385:         memset(str,'\0',11);
  5789   00328A  C0C1  F028         	movff	convert_uint32_to_string@str,memset@dest
  5790   00328E  C0C2  F029         	movff	convert_uint32_to_string@str+1,memset@dest+1
  5791   003292  0E00               	movlw	0
  5792   003294  6E2B               	movwf	(memset@c+1)^0,c
  5793   003296  0E00               	movlw	0
  5794   003298  6E2A               	movwf	memset@c^0,c
  5795   00329A  0E00               	movlw	0
  5796   00329C  6E2D               	movwf	(memset@n+1)^0,c
  5797   00329E  0E0B               	movlw	11
  5798   0032A0  6E2C               	movwf	memset@n^0,c
  5799   0032A2  ECEB  F00F         	call	_memset	;wreg free
  5800   0032A6                     
  5801                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 386:         sprintf(Temp_str,"%i",value);
  5802   0032A6  0E6C               	movlw	low convert_uint32_to_string@Temp_str
  5803   0032A8  0100               	movlb	0	; () banked
  5804   0032AA  6FB5               	movwf	sprintf@s& (0+255),b
  5805   0032AC  0E01               	movlw	high convert_uint32_to_string@Temp_str
  5806   0032AE  6FB6               	movwf	(sprintf@s+1)& (0+255),b
  5807   0032B0  0E85               	movlw	low STR_1
  5808   0032B2  6FB7               	movwf	sprintf@fmt& (0+255),b
  5809   0032B4  0E10               	movlw	high STR_1
  5810   0032B6  6FB8               	movwf	(sprintf@fmt+1)& (0+255),b
  5811   0032B8  C0BD  F0B9         	movff	convert_uint32_to_string@value,?_sprintf+4
  5812   0032BC  C0BE  F0BA         	movff	convert_uint32_to_string@value+1,?_sprintf+5
  5813   0032C0  C0BF  F0BB         	movff	convert_uint32_to_string@value+2,?_sprintf+6
  5814   0032C4  C0C0  F0BC         	movff	convert_uint32_to_string@value+3,?_sprintf+7
  5815   0032C8  ECDA  F01F         	call	_sprintf	;wreg free
  5816                           
  5817                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 387:         while (Temp_str[cnt] != '\0'){
  5818   0032CC  EF7B  F019         	goto	l9332
  5819   0032D0                     l9328:
  5820                           
  5821                           ; BSR set to: 1
  5822                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 388:             str[cnt] = Temp_str [cnt];
  5823   0032D0  0E6C               	movlw	low convert_uint32_to_string@Temp_str
  5824   0032D2  2577               	addwf	convert_uint32_to_string@cnt& (0+255),w,b
  5825   0032D4  6ED9               	movwf	fsr2l,c
  5826   0032D6  6ADA               	clrf	fsr2h,c
  5827   0032D8  0E01               	movlw	high convert_uint32_to_string@Temp_str
  5828   0032DA  22DA               	addwfc	fsr2h,f,c
  5829   0032DC  5177               	movf	convert_uint32_to_string@cnt& (0+255),w,b
  5830   0032DE  0100               	movlb	0	; () banked
  5831   0032E0  25C1               	addwf	convert_uint32_to_string@str& (0+255),w,b
  5832   0032E2  6EE1               	movwf	fsr1l,c
  5833   0032E4  0101               	movlb	1	; () banked
  5834   0032E6  0E00               	movlw	0
  5835   0032E8  0100               	movlb	0	; () banked
  5836   0032EA  21C2               	addwfc	(convert_uint32_to_string@str+1)& (0+255),w,b
  5837   0032EC  6EE2               	movwf	fsr1h,c
  5838   0032EE  CFDF FFE7          	movff	indf2,indf1
  5839   0032F2                     
  5840                           ; BSR set to: 0
  5841                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 389:             cnt++;
  5842   0032F2  0101               	movlb	1	; () banked
  5843   0032F4  2B77               	incf	convert_uint32_to_string@cnt& (0+255),f,b
  5844   0032F6                     l9332:
  5845                           
  5846                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 387:         while (Temp_str[cnt] != '\0'){
  5847   0032F6  0E6C               	movlw	low convert_uint32_to_string@Temp_str
  5848   0032F8  0101               	movlb	1	; () banked
  5849   0032FA  2577               	addwf	convert_uint32_to_string@cnt& (0+255),w,b
  5850   0032FC  6ED9               	movwf	fsr2l,c
  5851   0032FE  6ADA               	clrf	fsr2h,c
  5852   003300  0E01               	movlw	high convert_uint32_to_string@Temp_str
  5853   003302  22DA               	addwfc	fsr2h,f,c
  5854   003304  50DF               	movf	indf2,w,c
  5855   003306  A4D8               	btfss	status,2,c
  5856   003308  EF88  F019         	goto	u9301
  5857   00330C  EF8A  F019         	goto	u9300
  5858   003310                     u9301:
  5859   003310  EF68  F019         	goto	l9328
  5860   003314                     u9300:
  5861   003314                     
  5862                           ; BSR set to: 1
  5863                           ;ECU_Layer/Chr_LCD/ecu_chr_lcd.c: 391:         str[10] = '\0';
  5864   003314  0100               	movlb	0	; () banked
  5865   003316  EE20 F00A          	lfsr	2,10
  5866   00331A  51C1               	movf	convert_uint32_to_string@str& (0+255),w,b
  5867   00331C  26D9               	addwf	fsr2l,f,c
  5868   00331E  51C2               	movf	(convert_uint32_to_string@str+1)& (0+255),w,b
  5869   003320  22DA               	addwfc	fsr2h,f,c
  5870   003322  6ADF               	clrf	indf2,c
  5871   003324                     l188:
  5872                           
  5873                           ; BSR set to: 0
  5874   003324  0012               	return		;funcret
  5875   003326                     __end_of_convert_uint32_to_string:
  5876                           	callstack 0
  5877                           
  5878 ;; *************** function _sprintf *****************
  5879 ;; Defined at:
  5880 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  s               2   53[BANK0 ] PTR unsigned char 
  5883 ;;		 -> convert_uint32_to_string@Temp_str(11), convert_uint16_to_string@Temp_str(6), convert_uint8_to_string@Temp_str(4)
      +, 
  5884 ;;  fmt             2   55[BANK0 ] PTR const unsigned char 
  5885 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  f              12    2[BANK1 ] struct _IO_FILE
  5888 ;;  ap              2    0[BANK1 ] PTR void [1]
  5889 ;;		 -> ?_sprintf(2), 
  5890 ;;  ret             2    0        int 
  5891 ;; Return value:  Size  Location     Type
  5892 ;;                  2   53[BANK0 ] int 
  5893 ;; Registers used:
  5894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5895 ;; Tracked objects:
  5896 ;;		On entry : 0/0
  5897 ;;		On exit  : 0/0
  5898 ;;		Unchanged: 0/0
  5899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5900 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Totals:         0       8      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;Total ram usage:       22 bytes
  5905 ;; Hardware stack levels used: 1
  5906 ;; Hardware stack levels required when called: 15
  5907 ;; This function calls:
  5908 ;;		_vfprintf
  5909 ;; This function is called by:
  5910 ;;		_convert_uint8_to_string
  5911 ;;		_convert_uint32_to_string
  5912 ;;		_convert_uint16_to_string
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text34
  5917   003FB4                     __ptext34:
  5918                           	callstack 0
  5919   003FB4                     _sprintf:
  5920                           	callstack 13
  5921   003FB4  0EB9               	movlw	low (?_sprintf+4)
  5922   003FB6  0101               	movlb	1	; () banked
  5923   003FB8  6F5E               	movwf	sprintf@ap& (0+255),b
  5924   003FBA  0E00               	movlw	high (?_sprintf+4)
  5925   003FBC  6F5F               	movwf	(sprintf@ap+1)& (0+255),b
  5926   003FBE  C0B5  F160         	movff	sprintf@s,sprintf@f
  5927   003FC2  C0B6  F161         	movff	sprintf@s+1,sprintf@f+1
  5928   003FC6                     
  5929                           ; BSR set to: 1
  5930   003FC6  0E00               	movlw	0
  5931   003FC8  6F64               	movwf	(sprintf@f+4)& (0+255),b
  5932   003FCA  0E00               	movlw	0
  5933   003FCC  6F63               	movwf	(sprintf@f+3)& (0+255),b
  5934   003FCE                     
  5935                           ; BSR set to: 1
  5936   003FCE  0E00               	movlw	0
  5937   003FD0  6F6B               	movwf	(sprintf@f+11)& (0+255),b
  5938   003FD2  0E00               	movlw	0
  5939   003FD4  6F6A               	movwf	(sprintf@f+10)& (0+255),b
  5940   003FD6                     
  5941                           ; BSR set to: 1
  5942   003FD6  0E60               	movlw	low sprintf@f
  5943   003FD8  0100               	movlb	0	; () banked
  5944   003FDA  6FAD               	movwf	vfprintf@fp& (0+255),b
  5945   003FDC  0E01               	movlw	high sprintf@f
  5946   003FDE  6FAE               	movwf	(vfprintf@fp+1)& (0+255),b
  5947   003FE0  C0B7  F0AF         	movff	sprintf@fmt,vfprintf@fmt
  5948   003FE4  C0B8  F0B0         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5949   003FE8  0E5E               	movlw	low sprintf@ap
  5950   003FEA  6FB1               	movwf	vfprintf@ap& (0+255),b
  5951   003FEC  0E01               	movlw	high sprintf@ap
  5952   003FEE  6FB2               	movwf	(vfprintf@ap+1)& (0+255),b
  5953   003FF0  EC31  F020         	call	_vfprintf	;wreg free
  5954   003FF4  0101               	movlb	1	; () banked
  5955   003FF6  5163               	movf	(sprintf@f+3)& (0+255),w,b
  5956   003FF8  0100               	movlb	0	; () banked
  5957   003FFA  25B5               	addwf	sprintf@s& (0+255),w,b
  5958   003FFC  6ED9               	movwf	fsr2l,c
  5959   003FFE  0101               	movlb	1	; () banked
  5960   004000  5164               	movf	(sprintf@f+4)& (0+255),w,b
  5961   004002  0100               	movlb	0	; () banked
  5962   004004  21B6               	addwfc	(sprintf@s+1)& (0+255),w,b
  5963   004006  6EDA               	movwf	fsr2h,c
  5964   004008  6ADF               	clrf	indf2,c
  5965   00400A                     
  5966                           ; BSR set to: 0
  5967   00400A  0012               	return		;funcret
  5968   00400C                     __end_of_sprintf:
  5969                           	callstack 0
  5970                           
  5971 ;; *************** function _vfprintf *****************
  5972 ;; Defined at:
  5973 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;  fp              2   45[BANK0 ] PTR struct _IO_FILE
  5976 ;;		 -> sprintf@f(12), 
  5977 ;;  fmt             2   47[BANK0 ] PTR const unsigned char 
  5978 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  5979 ;;  ap              2   49[BANK0 ] PTR PTR void 
  5980 ;;		 -> sprintf@ap(2), 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  cfmt            2   51[BANK0 ] PTR unsigned char 
  5983 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  2   45[BANK0 ] int 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5993 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5997 ;;Total ram usage:        8 bytes
  5998 ;; Hardware stack levels used: 1
  5999 ;; Hardware stack levels required when called: 14
  6000 ;; This function calls:
  6001 ;;		_vfpfcnvrt
  6002 ;; This function is called by:
  6003 ;;		_sprintf
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text35
  6008   004062                     __ptext35:
  6009                           	callstack 0
  6010   004062                     _vfprintf:
  6011                           	callstack 13
  6012   004062                     
  6013                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  6014   004062  C0AF  F0B3         	movff	vfprintf@fmt,vfprintf@cfmt
  6015   004066  C0B0  F0B4         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6016                           
  6017                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  6018   00406A  EF46  F020         	goto	l9082
  6019   00406E                     l9080:
  6020                           
  6021                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6022   00406E  C0AD  F09F         	movff	vfprintf@fp,vfpfcnvrt@fp
  6023   004072  C0AE  F0A0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6024   004076  0EB3               	movlw	low vfprintf@cfmt
  6025   004078  0100               	movlb	0	; () banked
  6026   00407A  6FA1               	movwf	vfpfcnvrt@fmt& (0+255),b
  6027   00407C  0E00               	movlw	high vfprintf@cfmt
  6028   00407E  6FA2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6029   004080  C0B1  F0A3         	movff	vfprintf@ap,vfpfcnvrt@ap
  6030   004084  C0B2  F0A4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6031   004088  EC0C  F014         	call	_vfpfcnvrt	;wreg free
  6032   00408C                     l9082:
  6033                           
  6034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  6035   00408C  C0B3  FFF6         	movff	vfprintf@cfmt,tblptrl
  6036   004090  C0B4  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6037   004094                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6038   004094  6AF8               	clrf	tblptru,c
  6039   004096                     	endif
  6040   004096                     	if	0	;tblptru may be non-zero
  6041   004096                     	endif
  6042   004096  0008               	tblrd		*
  6043   004098  50F5               	movf	tablat,w,c
  6044   00409A  0900               	iorlw	0
  6045   00409C  A4D8               	btfss	status,2,c
  6046   00409E  EF53  F020         	goto	u9061
  6047   0040A2  EF55  F020         	goto	u9060
  6048   0040A6                     u9061:
  6049   0040A6  EF37  F020         	goto	l9080
  6050   0040AA                     u9060:
  6051   0040AA                     
  6052                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  6053   0040AA  0E00               	movlw	0
  6054   0040AC  0100               	movlb	0	; () banked
  6055   0040AE  6FAE               	movwf	(?_vfprintf+1)& (0+255),b
  6056   0040B0  0E00               	movlw	0
  6057   0040B2  6FAD               	movwf	?_vfprintf& (0+255),b
  6058   0040B4                     
  6059                           ; BSR set to: 0
  6060   0040B4  0012               	return		;funcret
  6061   0040B6                     __end_of_vfprintf:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _vfpfcnvrt *****************
  6065 ;; Defined at:
  6066 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  fp              2   31[BANK0 ] PTR struct _IO_FILE
  6069 ;;		 -> sprintf@f(12), 
  6070 ;;  fmt             2   33[BANK0 ] PTR PTR unsigned char 
  6071 ;;		 -> vfprintf@cfmt(2), 
  6072 ;;  ap              2   35[BANK0 ] PTR PTR void 
  6073 ;;		 -> sprintf@ap(2), 
  6074 ;; Auto vars:     Size  Location     Type
  6075 ;;  convarg         4   39[BANK0 ] struct .
  6076 ;;  cp              2   43[BANK0 ] PTR unsigned char 
  6077 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  6078 ;;  i               2    0        int 
  6079 ;;  done            2    0        int 
  6080 ;;  c               1    0        unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1    wreg      void 
  6083 ;; Registers used:
  6084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6090 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;Total ram usage:       14 bytes
  6095 ;; Hardware stack levels used: 1
  6096 ;; Hardware stack levels required when called: 13
  6097 ;; This function calls:
  6098 ;;		_dtoa
  6099 ;;		_fputc
  6100 ;; This function is called by:
  6101 ;;		_vfprintf
  6102 ;; This function uses a non-reentrant model
  6103 ;;
  6104                           
  6105                           	psect	text36
  6106   002818                     __ptext36:
  6107                           	callstack 0
  6108   002818                     _vfpfcnvrt:
  6109                           	callstack 13
  6110   002818                     
  6111                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  6112   002818  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6113   00281C  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6114   002820  CFDE FFF6          	movff	postinc2,tblptrl
  6115   002824  CFDD FFF7          	movff	postdec2,tblptrh
  6116   002828                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6117   002828  6AF8               	clrf	tblptru,c
  6118   00282A                     	endif
  6119   00282A                     	if	0	;tblptru may be non-zero
  6120   00282A                     	endif
  6121   00282A  0008               	tblrd		*
  6122   00282C  50F5               	movf	tablat,w,c
  6123   00282E  0A25               	xorlw	37
  6124   002830  A4D8               	btfss	status,2,c
  6125   002832  EF1D  F014         	goto	u8991
  6126   002836  EF1F  F014         	goto	u8990
  6127   00283A                     u8991:
  6128   00283A  EF8C  F014         	goto	l9026
  6129   00283E                     u8990:
  6130   00283E                     
  6131                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  6132   00283E  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6133   002842  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6134   002846  2ADE               	incf	postinc2,f,c
  6135   002848  0E00               	movlw	0
  6136   00284A  22DD               	addwfc	postdec2,f,c
  6137   00284C                     
  6138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  6139   00284C  0E00               	movlw	0
  6140   00284E  0100               	movlb	0	; () banked
  6141   002850  6FC7               	movwf	(_width+1)& (0+255),b
  6142   002852  0E00               	movlw	0
  6143   002854  6FC6               	movwf	_width& (0+255),b
  6144   002856  C0C6  F047         	movff	_width,_flags
  6145   00285A                     
  6146                           ; BSR set to: 0
  6147                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  6148   00285A  69C8               	setf	_prec& (0+255),b
  6149   00285C  69C9               	setf	(_prec+1)& (0+255),b
  6150   00285E                     
  6151                           ; BSR set to: 0
  6152                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  6153   00285E  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6154   002862  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6155   002866  CFDE F0AB          	movff	postinc2,vfpfcnvrt@cp
  6156   00286A  CFDD F0AC          	movff	postdec2,vfpfcnvrt@cp+1
  6157   00286E                     
  6158                           ; BSR set to: 0
  6159                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6160   00286E  C0AB  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6161   002872  C0AC  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6162   002876                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6163   002876  6AF8               	clrf	tblptru,c
  6164   002878                     	endif
  6165   002878                     	if	0	;tblptru may be non-zero
  6166   002878                     	endif
  6167   002878  0008               	tblrd		*
  6168   00287A  50F5               	movf	tablat,w,c
  6169   00287C  0A64               	xorlw	100
  6170   00287E  B4D8               	btfsc	status,2,c
  6171   002880  EF44  F014         	goto	u9001
  6172   002884  EF46  F014         	goto	u9000
  6173   002888                     u9001:
  6174   002888  EF55  F014         	goto	l9016
  6175   00288C                     u9000:
  6176   00288C                     
  6177                           ; BSR set to: 0
  6178   00288C  C0AB  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6179   002890  C0AC  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  6180   002894                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6181   002894  6AF8               	clrf	tblptru,c
  6182   002896                     	endif
  6183   002896                     	if	0	;tblptru may be non-zero
  6184   002896                     	endif
  6185   002896  0008               	tblrd		*
  6186   002898  50F5               	movf	tablat,w,c
  6187   00289A  0A69               	xorlw	105
  6188   00289C  A4D8               	btfss	status,2,c
  6189   00289E  EF53  F014         	goto	u9011
  6190   0028A2  EF55  F014         	goto	u9010
  6191   0028A6                     u9011:
  6192   0028A6  EF83  F014         	goto	l9022
  6193   0028AA                     u9010:
  6194   0028AA                     l9016:
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6198   0028AA  C0A3  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6199   0028AE  C0A4  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6200   0028B2  CFDF F0A5          	movff	indf2,??_vfpfcnvrt
  6201   0028B6  0E02               	movlw	2
  6202   0028B8  26DE               	addwf	postinc2,f,c
  6203   0028BA  CFDF F0A6          	movff	indf2,??_vfpfcnvrt+1
  6204   0028BE  0E00               	movlw	0
  6205   0028C0  22DD               	addwfc	postdec2,f,c
  6206   0028C2  C0A5  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6207   0028C6  C0A6  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6208   0028CA  CFDE F0A7          	movff	postinc2,vfpfcnvrt@convarg
  6209   0028CE  CFDD F0A8          	movff	postdec2,vfpfcnvrt@convarg+1
  6210                           
  6211                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  6212   0028D2  0E01               	movlw	1
  6213   0028D4  25AB               	addwf	vfpfcnvrt@cp& (0+255),w,b
  6214   0028D6  6FA5               	movwf	??_vfpfcnvrt& (0+255),b
  6215   0028D8  0E00               	movlw	0
  6216   0028DA  21AC               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  6217   0028DC  6FA6               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6218   0028DE  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6219   0028E2  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6220   0028E6  C0A5  FFDE         	movff	??_vfpfcnvrt,postinc2
  6221   0028EA  C0A6  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  6222   0028EE                     
  6223                           ; BSR set to: 0
  6224                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6225   0028EE  C09F  F092         	movff	vfpfcnvrt@fp,dtoa@fp
  6226   0028F2  C0A0  F093         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6227   0028F6  C0A7  F094         	movff	vfpfcnvrt@convarg,dtoa@d
  6228   0028FA  C0A8  F095         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6229   0028FE  EC1E  F00F         	call	_dtoa	;wreg free
  6230   002902  EFA1  F014         	goto	l2240
  6231   002906                     l9022:
  6232                           
  6233                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  6234   002906  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6235   00290A  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6236   00290E  2ADE               	incf	postinc2,f,c
  6237   002910  0E00               	movlw	0
  6238   002912  22DD               	addwfc	postdec2,f,c
  6239   002914  EFA1  F014         	goto	l2240
  6240   002918                     l9026:
  6241                           
  6242                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  6243   002918  C0A1  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6244   00291C  C0A2  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6245   002920  CFDE FFF6          	movff	postinc2,tblptrl
  6246   002924  CFDD FFF7          	movff	postdec2,tblptrh
  6247   002928                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6248   002928  6AF8               	clrf	tblptru,c
  6249   00292A                     	endif
  6250   00292A                     	if	0	;tblptru may be non-zero
  6251   00292A                     	endif
  6252   00292A  0008               	tblrd		*
  6253   00292C  50F5               	movf	tablat,w,c
  6254   00292E  6E28               	movwf	fputc@c^0,c
  6255   002930  6A29               	clrf	(fputc@c+1)^0,c
  6256   002932  C09F  F02A         	movff	vfpfcnvrt@fp,fputc@fp
  6257   002936  C0A0  F02B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6258   00293A  ECCB  F018         	call	_fputc	;wreg free
  6259   00293E  EF83  F014         	goto	l9022
  6260   002942                     l2240:
  6261   002942  0012               	return		;funcret
  6262   002944                     __end_of_vfpfcnvrt:
  6263                           	callstack 0
  6264                           
  6265 ;; *************** function _dtoa *****************
  6266 ;; Defined at:
  6267 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  6270 ;;		 -> sprintf@f(12), 
  6271 ;;  d               2   20[BANK0 ] int 
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;  i               2   29[BANK0 ] int 
  6274 ;;  w               2   26[BANK0 ] int 
  6275 ;;  p               2   24[BANK0 ] int 
  6276 ;;  s               1   28[BANK0 ] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;Total ram usage:       13 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 12
  6293 ;; This function calls:
  6294 ;;		___awdiv
  6295 ;;		___awmod
  6296 ;;		_abs
  6297 ;;		_pad
  6298 ;; This function is called by:
  6299 ;;		_vfpfcnvrt
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text37
  6304   001E3C                     __ptext37:
  6305                           	callstack 0
  6306   001E3C                     _dtoa:
  6307                           	callstack 13
  6308   001E3C                     
  6309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  6310   001E3C  0100               	movlb	0	; () banked
  6311   001E3E  BF95               	btfsc	(dtoa@d+1)& (0+255),7,b
  6312   001E40  EF24  F00F         	goto	u8741
  6313   001E44  EF27  F00F         	goto	u8740
  6314   001E48                     u8741:
  6315   001E48  0E01               	movlw	1
  6316   001E4A  EF28  F00F         	goto	u8750
  6317   001E4E                     u8740:
  6318   001E4E  0E00               	movlw	0
  6319   001E50                     u8750:
  6320   001E50  6F9C               	movwf	dtoa@s& (0+255),b
  6321   001E52                     
  6322                           ; BSR set to: 0
  6323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  6324   001E52  519C               	movf	dtoa@s& (0+255),w,b
  6325   001E54  B4D8               	btfsc	status,2,c
  6326   001E56  EF2F  F00F         	goto	u8761
  6327   001E5A  EF31  F00F         	goto	u8760
  6328   001E5E                     u8761:
  6329   001E5E  EF35  F00F         	goto	l8810
  6330   001E62                     u8760:
  6331   001E62                     
  6332                           ; BSR set to: 0
  6333                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  6334   001E62  6D94               	negf	dtoa@d& (0+255),b
  6335   001E64  1F95               	comf	(dtoa@d+1)& (0+255),f,b
  6336   001E66  B0D8               	btfsc	status,0,c
  6337   001E68  2B95               	incf	(dtoa@d+1)& (0+255),f,b
  6338   001E6A                     l8810:
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  6342   001E6A  BFC9               	btfsc	(_prec+1)& (0+255),7,b
  6343   001E6C  EF3C  F00F         	goto	u8770
  6344   001E70  EF3A  F00F         	goto	u8771
  6345   001E74                     u8771:
  6346   001E74  EF42  F00F         	goto	l2219
  6347   001E78                     u8770:
  6348   001E78                     
  6349                           ; BSR set to: 0
  6350   001E78  0E00               	movlw	0
  6351   001E7A  6F99               	movwf	(dtoa@p+1)& (0+255),b
  6352   001E7C  0E01               	movlw	1
  6353   001E7E  6F98               	movwf	dtoa@p& (0+255),b
  6354   001E80  EF46  F00F         	goto	l2221
  6355   001E84                     l2219:
  6356                           
  6357                           ; BSR set to: 0
  6358   001E84  C0C8  F098         	movff	_prec,dtoa@p
  6359   001E88  C0C9  F099         	movff	_prec+1,dtoa@p+1
  6360   001E8C                     l2221:
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  6364   001E8C  C0C6  F09A         	movff	_width,dtoa@w
  6365   001E90  C0C7  F09B         	movff	_width+1,dtoa@w+1
  6366   001E94                     
  6367                           ; BSR set to: 0
  6368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  6369   001E94  519C               	movf	dtoa@s& (0+255),w,b
  6370   001E96  B4D8               	btfsc	status,2,c
  6371   001E98  EF50  F00F         	goto	u8781
  6372   001E9C  EF52  F00F         	goto	u8780
  6373   001EA0                     u8781:
  6374   001EA0  EF69  F00F         	goto	l2222
  6375   001EA4                     u8780:
  6376   001EA4                     
  6377                           ; BSR set to: 0
  6378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  6379   001EA4  079A               	decf	dtoa@w& (0+255),f,b
  6380   001EA6  A0D8               	btfss	status,0,c
  6381   001EA8  079B               	decf	(dtoa@w+1)& (0+255),f,b
  6382   001EAA                     
  6383                           ; BSR set to: 0
  6384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  6385   001EAA  519C               	movf	dtoa@s& (0+255),w,b
  6386   001EAC  A4D8               	btfss	status,2,c
  6387   001EAE  EF5B  F00F         	goto	u8791
  6388   001EB2  EF5D  F00F         	goto	u8790
  6389   001EB6                     u8791:
  6390   001EB6  EF63  F00F         	goto	l8822
  6391   001EBA                     u8790:
  6392   001EBA                     
  6393                           ; BSR set to: 0
  6394   001EBA  0E00               	movlw	0
  6395   001EBC  6F97               	movwf	(_dtoa$3386+1)& (0+255),b
  6396   001EBE  0E2B               	movlw	43
  6397   001EC0  6F96               	movwf	_dtoa$3386& (0+255),b
  6398   001EC2  EF67  F00F         	goto	l8824
  6399   001EC6                     l8822:
  6400                           
  6401                           ; BSR set to: 0
  6402   001EC6  0E00               	movlw	0
  6403   001EC8  6F97               	movwf	(_dtoa$3386+1)& (0+255),b
  6404   001ECA  0E2D               	movlw	45
  6405   001ECC  6F96               	movwf	_dtoa$3386& (0+255),b
  6406   001ECE                     l8824:
  6407                           
  6408                           ; BSR set to: 0
  6409   001ECE  C096  F09C         	movff	_dtoa$3386,dtoa@s
  6410   001ED2                     l2222:
  6411                           
  6412                           ; BSR set to: 0
  6413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  6414   001ED2  0E00               	movlw	0
  6415   001ED4  6F9E               	movwf	(dtoa@i+1)& (0+255),b
  6416   001ED6  0E1F               	movlw	31
  6417   001ED8  6F9D               	movwf	dtoa@i& (0+255),b
  6418   001EDA                     
  6419                           ; BSR set to: 0
  6420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  6421   001EDA  0E00               	movlw	0
  6422   001EDC  0101               	movlb	1	; () banked
  6423   001EDE  6F43               	movwf	(_dbuf+31)& (0+255),b
  6424                           
  6425                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  6426   001EE0  EFA3  F00F         	goto	l8838
  6427   001EE4                     l8828:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  6431   001EE4  079D               	decf	dtoa@i& (0+255),f,b
  6432   001EE6  A0D8               	btfss	status,0,c
  6433   001EE8  079E               	decf	(dtoa@i+1)& (0+255),f,b
  6434   001EEA                     
  6435                           ; BSR set to: 0
  6436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6437   001EEA  0E24               	movlw	low _dbuf
  6438   001EEC  259D               	addwf	dtoa@i& (0+255),w,b
  6439   001EEE  6ED9               	movwf	fsr2l,c
  6440   001EF0  0E01               	movlw	high _dbuf
  6441   001EF2  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  6442   001EF4  6EDA               	movwf	fsr2h,c
  6443   001EF6  C094  F028         	movff	dtoa@d,___awmod@dividend
  6444   001EFA  C095  F029         	movff	dtoa@d+1,___awmod@dividend+1
  6445   001EFE  0E00               	movlw	0
  6446   001F00  6E2B               	movwf	(___awmod@divisor+1)^0,c
  6447   001F02  0E0A               	movlw	10
  6448   001F04  6E2A               	movwf	___awmod@divisor^0,c
  6449   001F06  ECAA  F01A         	call	___awmod	;wreg free
  6450   001F0A  C028  F02E         	movff	?___awmod,abs@a
  6451   001F0E  C029  F02F         	movff	?___awmod+1,abs@a+1
  6452   001F12  ECA1  F020         	call	_abs	;wreg free
  6453   001F16  502E               	movf	?_abs^0,w,c
  6454   001F18  0F30               	addlw	48
  6455   001F1A  6EDF               	movwf	indf2,c
  6456   001F1C                     
  6457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  6458   001F1C  0100               	movlb	0	; () banked
  6459   001F1E  0798               	decf	dtoa@p& (0+255),f,b
  6460   001F20  A0D8               	btfss	status,0,c
  6461   001F22  0799               	decf	(dtoa@p+1)& (0+255),f,b
  6462   001F24                     
  6463                           ; BSR set to: 0
  6464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  6465   001F24  079A               	decf	dtoa@w& (0+255),f,b
  6466   001F26  A0D8               	btfss	status,0,c
  6467   001F28  079B               	decf	(dtoa@w+1)& (0+255),f,b
  6468   001F2A                     
  6469                           ; BSR set to: 0
  6470                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  6471   001F2A  C094  F028         	movff	dtoa@d,___awdiv@dividend
  6472   001F2E  C095  F029         	movff	dtoa@d+1,___awdiv@dividend+1
  6473   001F32  0E00               	movlw	0
  6474   001F34  6E2B               	movwf	(___awdiv@divisor+1)^0,c
  6475   001F36  0E0A               	movlw	10
  6476   001F38  6E2A               	movwf	___awdiv@divisor^0,c
  6477   001F3A  EC93  F019         	call	___awdiv	;wreg free
  6478   001F3E  C028  F094         	movff	?___awdiv,dtoa@d
  6479   001F42  C029  F095         	movff	?___awdiv+1,dtoa@d+1
  6480   001F46                     l8838:
  6481                           
  6482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  6483   001F46  0100               	movlb	0	; () banked
  6484   001F48  BF9E               	btfsc	(dtoa@i+1)& (0+255),7,b
  6485   001F4A  EFAF  F00F         	goto	u8801
  6486   001F4E  519E               	movf	(dtoa@i+1)& (0+255),w,b
  6487   001F50  E108               	bnz	u8800
  6488   001F52  059D               	decf	dtoa@i& (0+255),w,b
  6489   001F54  A0D8               	btfss	status,0,c
  6490   001F56  EFAF  F00F         	goto	u8801
  6491   001F5A  EFB1  F00F         	goto	u8800
  6492   001F5E                     u8801:
  6493   001F5E  EFC7  F00F         	goto	l8844
  6494   001F62                     u8800:
  6495   001F62                     
  6496                           ; BSR set to: 0
  6497   001F62  5194               	movf	dtoa@d& (0+255),w,b
  6498   001F64  1195               	iorwf	(dtoa@d+1)& (0+255),w,b
  6499   001F66  A4D8               	btfss	status,2,c
  6500   001F68  EFB8  F00F         	goto	u8811
  6501   001F6C  EFBA  F00F         	goto	u8810
  6502   001F70                     u8811:
  6503   001F70  EF72  F00F         	goto	l8828
  6504   001F74                     u8810:
  6505   001F74                     
  6506                           ; BSR set to: 0
  6507   001F74  BF99               	btfsc	(dtoa@p+1)& (0+255),7,b
  6508   001F76  EFC7  F00F         	goto	u8820
  6509   001F7A  5199               	movf	(dtoa@p+1)& (0+255),w,b
  6510   001F7C  E106               	bnz	u8821
  6511   001F7E  0598               	decf	dtoa@p& (0+255),w,b
  6512   001F80  B0D8               	btfsc	status,0,c
  6513   001F82  EFC5  F00F         	goto	u8821
  6514   001F86  EFC7  F00F         	goto	u8820
  6515   001F8A                     u8821:
  6516   001F8A  EF72  F00F         	goto	l8828
  6517   001F8E                     u8820:
  6518   001F8E                     l8844:
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  6522   001F8E  519C               	movf	dtoa@s& (0+255),w,b
  6523   001F90  B4D8               	btfsc	status,2,c
  6524   001F92  EFCD  F00F         	goto	u8831
  6525   001F96  EFCF  F00F         	goto	u8830
  6526   001F9A                     u8831:
  6527   001F9A  EFDA  F00F         	goto	l8850
  6528   001F9E                     u8830:
  6529   001F9E                     
  6530                           ; BSR set to: 0
  6531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  6532   001F9E  079D               	decf	dtoa@i& (0+255),f,b
  6533   001FA0  A0D8               	btfss	status,0,c
  6534   001FA2  079E               	decf	(dtoa@i+1)& (0+255),f,b
  6535   001FA4                     
  6536                           ; BSR set to: 0
  6537                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  6538   001FA4  0E24               	movlw	low _dbuf
  6539   001FA6  259D               	addwf	dtoa@i& (0+255),w,b
  6540   001FA8  6ED9               	movwf	fsr2l,c
  6541   001FAA  0E01               	movlw	high _dbuf
  6542   001FAC  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  6543   001FAE  6EDA               	movwf	fsr2h,c
  6544   001FB0  C09C  FFDF         	movff	dtoa@s,indf2
  6545   001FB4                     l8850:
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6549   001FB4  C092  F087         	movff	dtoa@fp,pad@fp
  6550   001FB8  C093  F088         	movff	dtoa@fp+1,pad@fp+1
  6551   001FBC  0E24               	movlw	low _dbuf
  6552   001FBE  259D               	addwf	dtoa@i& (0+255),w,b
  6553   001FC0  6F89               	movwf	pad@buf& (0+255),b
  6554   001FC2  0E01               	movlw	high _dbuf
  6555   001FC4  219E               	addwfc	(dtoa@i+1)& (0+255),w,b
  6556   001FC6  6F8A               	movwf	(pad@buf+1)& (0+255),b
  6557   001FC8  C09A  F08B         	movff	dtoa@w,pad@p
  6558   001FCC  C09B  F08C         	movff	dtoa@w+1,pad@p+1
  6559   001FD0  EC0A  F01E         	call	_pad	;wreg free
  6560   001FD4  0012               	return		;funcret
  6561   001FD6                     __end_of_dtoa:
  6562                           	callstack 0
  6563                           
  6564 ;; *************** function _pad *****************
  6565 ;; Defined at:
  6566 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;  fp              2    7[BANK0 ] PTR struct _IO_FILE
  6569 ;;		 -> sprintf@f(12), 
  6570 ;;  buf             2    9[BANK0 ] PTR unsigned char 
  6571 ;;		 -> dbuf(32), 
  6572 ;;  p               2   11[BANK0 ] int 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  w               2   16[BANK0 ] int 
  6575 ;;  i               2   14[BANK0 ] int 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6585 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;Total ram usage:       11 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; Hardware stack levels required when called: 11
  6592 ;; This function calls:
  6593 ;;		_fputc
  6594 ;;		_fputs
  6595 ;; This function is called by:
  6596 ;;		_dtoa
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           
  6600                           	psect	text38
  6601   003C14                     __ptext38:
  6602                           	callstack 0
  6603   003C14                     _pad:
  6604                           	callstack 13
  6605   003C14                     
  6606                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  6607   003C14  0100               	movlb	0	; () banked
  6608   003C16  BF8C               	btfsc	(pad@p+1)& (0+255),7,b
  6609   003C18  EF10  F01E         	goto	u8441
  6610   003C1C  EF12  F01E         	goto	u8440
  6611   003C20                     u8441:
  6612   003C20  EF18  F01E         	goto	l8650
  6613   003C24                     u8440:
  6614   003C24                     
  6615                           ; BSR set to: 0
  6616   003C24  C08B  F090         	movff	pad@p,pad@w
  6617   003C28  C08C  F091         	movff	pad@p+1,pad@w+1
  6618   003C2C  EF1C  F01E         	goto	l2210
  6619   003C30                     l8650:
  6620                           
  6621                           ; BSR set to: 0
  6622   003C30  0E00               	movlw	0
  6623   003C32  6F91               	movwf	(pad@w+1)& (0+255),b
  6624   003C34  0E00               	movlw	0
  6625   003C36  6F90               	movwf	pad@w& (0+255),b
  6626   003C38                     l2210:
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  6630   003C38  0E00               	movlw	0
  6631   003C3A  6F8F               	movwf	(pad@i+1)& (0+255),b
  6632   003C3C  0E00               	movlw	0
  6633   003C3E  6F8E               	movwf	pad@i& (0+255),b
  6634                           
  6635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6636   003C40  EF2F  F01E         	goto	l8656
  6637   003C44                     l8652:
  6638                           
  6639                           ; BSR set to: 0
  6640                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  6641   003C44  0E00               	movlw	0
  6642   003C46  6E29               	movwf	(fputc@c+1)^0,c
  6643   003C48  0E20               	movlw	32
  6644   003C4A  6E28               	movwf	fputc@c^0,c
  6645   003C4C  C087  F02A         	movff	pad@fp,fputc@fp
  6646   003C50  C088  F02B         	movff	pad@fp+1,fputc@fp+1
  6647   003C54  ECCB  F018         	call	_fputc	;wreg free
  6648   003C58                     
  6649                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  6650   003C58  0100               	movlb	0	; () banked
  6651   003C5A  4B8E               	infsnz	pad@i& (0+255),f,b
  6652   003C5C  2B8F               	incf	(pad@i+1)& (0+255),f,b
  6653   003C5E                     l8656:
  6654                           
  6655                           ; BSR set to: 0
  6656                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  6657   003C5E  5190               	movf	pad@w& (0+255),w,b
  6658   003C60  5D8E               	subwf	pad@i& (0+255),w,b
  6659   003C62  518F               	movf	(pad@i+1)& (0+255),w,b
  6660   003C64  0A80               	xorlw	128
  6661   003C66  6F8D               	movwf	??_pad& (0+255),b
  6662   003C68  5191               	movf	(pad@w+1)& (0+255),w,b
  6663   003C6A  0A80               	xorlw	128
  6664   003C6C  598D               	subwfb	??_pad& (0+255),w,b
  6665   003C6E  A0D8               	btfss	status,0,c
  6666   003C70  EF3C  F01E         	goto	u8451
  6667   003C74  EF3E  F01E         	goto	u8450
  6668   003C78                     u8451:
  6669   003C78  EF22  F01E         	goto	l8652
  6670   003C7C                     u8450:
  6671   003C7C                     
  6672                           ; BSR set to: 0
  6673                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  6674   003C7C  C089  F080         	movff	pad@buf,fputs@s
  6675   003C80  C08A  F081         	movff	pad@buf+1,fputs@s+1
  6676   003C84  C087  F082         	movff	pad@fp,fputs@fp
  6677   003C88  C088  F083         	movff	pad@fp+1,fputs@fp+1
  6678   003C8C  EC5B  F020         	call	_fputs	;wreg free
  6679   003C90  0012               	return		;funcret
  6680   003C92                     __end_of_pad:
  6681                           	callstack 0
  6682                           
  6683 ;; *************** function _fputs *****************
  6684 ;; Defined at:
  6685 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  6686 ;; Parameters:    Size  Location     Type
  6687 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  6688 ;;		 -> dbuf(32), 
  6689 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  6690 ;;		 -> sprintf@f(12), 
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;  i               2    5[BANK0 ] int 
  6693 ;;  c               1    4[BANK0 ] unsigned char 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  2    0[BANK0 ] int 
  6696 ;; Registers used:
  6697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6703 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;Total ram usage:        7 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; Hardware stack levels required when called: 10
  6710 ;; This function calls:
  6711 ;;		_fputc
  6712 ;; This function is called by:
  6713 ;;		_pad
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	text39
  6718   0040B6                     __ptext39:
  6719                           	callstack 0
  6720   0040B6                     _fputs:
  6721                           	callstack 13
  6722   0040B6  0E00               	movlw	0
  6723   0040B8  0100               	movlb	0	; () banked
  6724   0040BA  6F86               	movwf	(fputs@i+1)& (0+255),b
  6725   0040BC  0E00               	movlw	0
  6726   0040BE  6F85               	movwf	fputs@i& (0+255),b
  6727   0040C0  EF6E  F020         	goto	l8564
  6728   0040C4                     l8560:
  6729                           
  6730                           ; BSR set to: 0
  6731   0040C4  C084  F028         	movff	fputs@c,fputc@c
  6732   0040C8  6A29               	clrf	(fputc@c+1)^0,c
  6733   0040CA  C082  F02A         	movff	fputs@fp,fputc@fp
  6734   0040CE  C083  F02B         	movff	fputs@fp+1,fputc@fp+1
  6735   0040D2  ECCB  F018         	call	_fputc	;wreg free
  6736   0040D6  0100               	movlb	0	; () banked
  6737   0040D8  4B85               	infsnz	fputs@i& (0+255),f,b
  6738   0040DA  2B86               	incf	(fputs@i+1)& (0+255),f,b
  6739   0040DC                     l8564:
  6740                           
  6741                           ; BSR set to: 0
  6742   0040DC  5185               	movf	fputs@i& (0+255),w,b
  6743   0040DE  2580               	addwf	fputs@s& (0+255),w,b
  6744   0040E0  6ED9               	movwf	fsr2l,c
  6745   0040E2  5186               	movf	(fputs@i+1)& (0+255),w,b
  6746   0040E4  2181               	addwfc	(fputs@s+1)& (0+255),w,b
  6747   0040E6  6EDA               	movwf	fsr2h,c
  6748   0040E8  50DF               	movf	indf2,w,c
  6749   0040EA  6F84               	movwf	fputs@c& (0+255),b
  6750   0040EC  5184               	movf	fputs@c& (0+255),w,b
  6751   0040EE  A4D8               	btfss	status,2,c
  6752   0040F0  EF7C  F020         	goto	u8311
  6753   0040F4  EF7E  F020         	goto	u8310
  6754   0040F8                     u8311:
  6755   0040F8  EF62  F020         	goto	l8560
  6756   0040FC                     u8310:
  6757   0040FC                     
  6758                           ; BSR set to: 0
  6759   0040FC  0012               	return		;funcret
  6760   0040FE                     __end_of_fputs:
  6761                           	callstack 0
  6762                           
  6763 ;; *************** function _fputc *****************
  6764 ;; Defined at:
  6765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  6766 ;; Parameters:    Size  Location     Type
  6767 ;;  c               2   39[COMRAM] int 
  6768 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  6769 ;;		 -> sprintf@f(12), 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2   39[COMRAM] int 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;Total ram usage:        9 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 9
  6788 ;; This function calls:
  6789 ;;		_putch
  6790 ;; This function is called by:
  6791 ;;		_pad
  6792 ;;		_vfpfcnvrt
  6793 ;;		_fputs
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text40
  6798   003196                     __ptext40:
  6799                           	callstack 0
  6800   003196                     _fputc:
  6801                           	callstack 16
  6802   003196  502A               	movf	fputc@fp^0,w,c
  6803   003198  102B               	iorwf	(fputc@fp+1)^0,w,c
  6804   00319A  B4D8               	btfsc	status,2,c
  6805   00319C  EFD2  F018         	goto	u8271
  6806   0031A0  EFD4  F018         	goto	u8270
  6807   0031A4                     u8271:
  6808   0031A4  EFDD  F018         	goto	l8548
  6809   0031A8                     u8270:
  6810   0031A8  502A               	movf	fputc@fp^0,w,c
  6811   0031AA  102B               	iorwf	(fputc@fp+1)^0,w,c
  6812   0031AC  A4D8               	btfss	status,2,c
  6813   0031AE  EFDB  F018         	goto	u8281
  6814   0031B2  EFDD  F018         	goto	u8280
  6815   0031B6                     u8281:
  6816   0031B6  EFE2  F018         	goto	l8550
  6817   0031BA                     u8280:
  6818   0031BA                     l8548:
  6819   0031BA  5028               	movf	fputc@c^0,w,c
  6820   0031BC  EC19  F022         	call	_putch
  6821   0031C0  EF2F  F019         	goto	l2265
  6822   0031C4                     l8550:
  6823   0031C4  EE20 F00A          	lfsr	2,10
  6824   0031C8  502A               	movf	fputc@fp^0,w,c
  6825   0031CA  26D9               	addwf	fsr2l,f,c
  6826   0031CC  502B               	movf	(fputc@fp+1)^0,w,c
  6827   0031CE  22DA               	addwfc	fsr2h,f,c
  6828   0031D0  50DE               	movf	postinc2,w,c
  6829   0031D2  10DE               	iorwf	postinc2,w,c
  6830   0031D4  B4D8               	btfsc	status,2,c
  6831   0031D6  EFEF  F018         	goto	u8291
  6832   0031DA  EFF1  F018         	goto	u8290
  6833   0031DE                     u8291:
  6834   0031DE  EF0C  F019         	goto	l8554
  6835   0031E2                     u8290:
  6836   0031E2  EE20 F00A          	lfsr	2,10
  6837   0031E6  502A               	movf	fputc@fp^0,w,c
  6838   0031E8  26D9               	addwf	fsr2l,f,c
  6839   0031EA  502B               	movf	(fputc@fp+1)^0,w,c
  6840   0031EC  22DA               	addwfc	fsr2h,f,c
  6841   0031EE  EE10 F003          	lfsr	1,3
  6842   0031F2  502A               	movf	fputc@fp^0,w,c
  6843   0031F4  26E1               	addwf	fsr1l,f,c
  6844   0031F6  502B               	movf	(fputc@fp+1)^0,w,c
  6845   0031F8  22E2               	addwfc	fsr1h,f,c
  6846   0031FA  50DE               	movf	postinc2,w,c
  6847   0031FC  5CE6               	subwf	postinc1,w,c
  6848   0031FE  50E6               	movf	postinc1,w,c
  6849   003200  0A80               	xorlw	128
  6850   003202  6E30               	movwf	(??_fputc+4)^0,c
  6851   003204  50DE               	movf	postinc2,w,c
  6852   003206  0A80               	xorlw	128
  6853   003208  5830               	subwfb	(??_fputc+4)^0,w,c
  6854   00320A  B0D8               	btfsc	status,0,c
  6855   00320C  EF0A  F019         	goto	u8301
  6856   003210  EF0C  F019         	goto	u8300
  6857   003214                     u8301:
  6858   003214  EF2F  F019         	goto	l2265
  6859   003218                     u8300:
  6860   003218                     l8554:
  6861   003218  EE20 F003          	lfsr	2,3
  6862   00321C  502A               	movf	fputc@fp^0,w,c
  6863   00321E  26D9               	addwf	fsr2l,f,c
  6864   003220  502B               	movf	(fputc@fp+1)^0,w,c
  6865   003222  22DA               	addwfc	fsr2h,f,c
  6866   003224  CFDE F02C          	movff	postinc2,??_fputc
  6867   003228  CFDD F02D          	movff	postdec2,??_fputc+1
  6868   00322C  C02A  FFD9         	movff	fputc@fp,fsr2l
  6869   003230  C02B  FFDA         	movff	fputc@fp+1,fsr2h
  6870   003234  CFDE F02E          	movff	postinc2,??_fputc+2
  6871   003238  CFDD F02F          	movff	postdec2,??_fputc+3
  6872   00323C  502C               	movf	??_fputc^0,w,c
  6873   00323E  242E               	addwf	(??_fputc+2)^0,w,c
  6874   003240  6ED9               	movwf	fsr2l,c
  6875   003242  502D               	movf	(??_fputc+1)^0,w,c
  6876   003244  202F               	addwfc	(??_fputc+3)^0,w,c
  6877   003246  6EDA               	movwf	fsr2h,c
  6878   003248  C028  FFDF         	movff	fputc@c,indf2
  6879   00324C  EE20 F003          	lfsr	2,3
  6880   003250  502A               	movf	fputc@fp^0,w,c
  6881   003252  26D9               	addwf	fsr2l,f,c
  6882   003254  502B               	movf	(fputc@fp+1)^0,w,c
  6883   003256  22DA               	addwfc	fsr2h,f,c
  6884   003258  2ADE               	incf	postinc2,f,c
  6885   00325A  0E00               	movlw	0
  6886   00325C  22DD               	addwfc	postdec2,f,c
  6887   00325E                     l2265:
  6888   00325E  0012               	return		;funcret
  6889   003260                     __end_of_fputc:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function _putch *****************
  6893 ;; Defined at:
  6894 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  c               1    wreg     unsigned char 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  c               1    0[COMRAM] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  1    wreg      void 
  6901 ;; Registers used:
  6902 ;;		wreg
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;Total ram usage:        0 bytes
  6913 ;; Hardware stack levels used: 1
  6914 ;; Hardware stack levels required when called: 8
  6915 ;; This function calls:
  6916 ;;		Nothing
  6917 ;; This function is called by:
  6918 ;;		_fputc
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text41
  6923   004432                     __ptext41:
  6924                           	callstack 0
  6925   004432                     _putch:
  6926                           	callstack 16
  6927   004432  0012               	return		;funcret
  6928   004434                     __end_of_putch:
  6929                           	callstack 0
  6930                           
  6931 ;; *************** function _abs *****************
  6932 ;; Defined at:
  6933 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  a               2   45[COMRAM] int 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  2   45[COMRAM] int 
  6940 ;; Registers used:
  6941 ;;		wreg, status,2, status,0
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6950 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6951 ;;Total ram usage:        4 bytes
  6952 ;; Hardware stack levels used: 1
  6953 ;; Hardware stack levels required when called: 8
  6954 ;; This function calls:
  6955 ;;		Nothing
  6956 ;; This function is called by:
  6957 ;;		_dtoa
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960                           
  6961                           	psect	text42
  6962   004142                     __ptext42:
  6963                           	callstack 0
  6964   004142                     _abs:
  6965                           	callstack 16
  6966   004142  BE2F               	btfsc	(abs@a+1)^0,7,c
  6967   004144  EFAE  F020         	goto	u8460
  6968   004148  502F               	movf	(abs@a+1)^0,w,c
  6969   00414A  E106               	bnz	u8461
  6970   00414C  042E               	decf	abs@a^0,w,c
  6971   00414E  B0D8               	btfsc	status,0,c
  6972   004150  EFAC  F020         	goto	u8461
  6973   004154  EFAE  F020         	goto	u8460
  6974   004158                     u8461:
  6975   004158  EFBD  F020         	goto	l2250
  6976   00415C                     u8460:
  6977   00415C  C02E  F080         	movff	abs@a,??_abs
  6978   004160  C02F  F081         	movff	abs@a+1,??_abs+1
  6979   004164  0100               	movlb	0	; () banked
  6980   004166  1F80               	comf	??_abs& (0+255),f,b
  6981   004168  1F81               	comf	(??_abs+1)& (0+255),f,b
  6982   00416A  4B80               	infsnz	??_abs& (0+255),f,b
  6983   00416C  2B81               	incf	(??_abs+1)& (0+255),f,b
  6984   00416E  C080  F02E         	movff	??_abs,?_abs
  6985   004172  C081  F02F         	movff	??_abs+1,?_abs+1
  6986   004176  EFC1  F020         	goto	l2253
  6987   00417A                     l2250:
  6988   00417A  C02E  F02E         	movff	abs@a,?_abs
  6989   00417E  C02F  F02F         	movff	abs@a+1,?_abs+1
  6990   004182                     l2253:
  6991   004182  0012               	return		;funcret
  6992   004184                     __end_of_abs:
  6993                           	callstack 0
  6994                           
  6995 ;; *************** function ___awmod *****************
  6996 ;; Defined at:
  6997 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;  dividend        2   39[COMRAM] int 
  7000 ;;  divisor         2   41[COMRAM] int 
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;  sign            1   44[COMRAM] unsigned char 
  7003 ;;  counter         1   43[COMRAM] unsigned char 
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  2   39[COMRAM] int 
  7006 ;; Registers used:
  7007 ;;		wreg, status,2, status,0
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7017 ;;Total ram usage:        6 bytes
  7018 ;; Hardware stack levels used: 1
  7019 ;; Hardware stack levels required when called: 8
  7020 ;; This function calls:
  7021 ;;		Nothing
  7022 ;; This function is called by:
  7023 ;;		_dtoa
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text43
  7028   003554                     __ptext43:
  7029                           	callstack 0
  7030   003554                     ___awmod:
  7031                           	callstack 16
  7032   003554  0E00               	movlw	0
  7033   003556  6E2D               	movwf	___awmod@sign^0,c
  7034   003558  BE29               	btfsc	(___awmod@dividend+1)^0,7,c
  7035   00355A  EFB3  F01A         	goto	u8380
  7036   00355E  EFB1  F01A         	goto	u8381
  7037   003562                     u8381:
  7038   003562  EFB9  F01A         	goto	l8618
  7039   003566                     u8380:
  7040   003566  6C28               	negf	___awmod@dividend^0,c
  7041   003568  1E29               	comf	(___awmod@dividend+1)^0,f,c
  7042   00356A  B0D8               	btfsc	status,0,c
  7043   00356C  2A29               	incf	(___awmod@dividend+1)^0,f,c
  7044   00356E  0E01               	movlw	1
  7045   003570  6E2D               	movwf	___awmod@sign^0,c
  7046   003572                     l8618:
  7047   003572  BE2B               	btfsc	(___awmod@divisor+1)^0,7,c
  7048   003574  EFC0  F01A         	goto	u8390
  7049   003578  EFBE  F01A         	goto	u8391
  7050   00357C                     u8391:
  7051   00357C  EFC4  F01A         	goto	l8622
  7052   003580                     u8390:
  7053   003580  6C2A               	negf	___awmod@divisor^0,c
  7054   003582  1E2B               	comf	(___awmod@divisor+1)^0,f,c
  7055   003584  B0D8               	btfsc	status,0,c
  7056   003586  2A2B               	incf	(___awmod@divisor+1)^0,f,c
  7057   003588                     l8622:
  7058   003588  502A               	movf	___awmod@divisor^0,w,c
  7059   00358A  102B               	iorwf	(___awmod@divisor+1)^0,w,c
  7060   00358C  B4D8               	btfsc	status,2,c
  7061   00358E  EFCB  F01A         	goto	u8401
  7062   003592  EFCD  F01A         	goto	u8400
  7063   003596                     u8401:
  7064   003596  EFF1  F01A         	goto	l8638
  7065   00359A                     u8400:
  7066   00359A  0E01               	movlw	1
  7067   00359C  6E2C               	movwf	___awmod@counter^0,c
  7068   00359E  EFD5  F01A         	goto	l8628
  7069   0035A2                     l8626:
  7070   0035A2  90D8               	bcf	status,0,c
  7071   0035A4  362A               	rlcf	___awmod@divisor^0,f,c
  7072   0035A6  362B               	rlcf	(___awmod@divisor+1)^0,f,c
  7073   0035A8  2A2C               	incf	___awmod@counter^0,f,c
  7074   0035AA                     l8628:
  7075   0035AA  AE2B               	btfss	(___awmod@divisor+1)^0,7,c
  7076   0035AC  EFDA  F01A         	goto	u8411
  7077   0035B0  EFDC  F01A         	goto	u8410
  7078   0035B4                     u8411:
  7079   0035B4  EFD1  F01A         	goto	l8626
  7080   0035B8                     u8410:
  7081   0035B8                     l8630:
  7082   0035B8  502A               	movf	___awmod@divisor^0,w,c
  7083   0035BA  5C28               	subwf	___awmod@dividend^0,w,c
  7084   0035BC  502B               	movf	(___awmod@divisor+1)^0,w,c
  7085   0035BE  5829               	subwfb	(___awmod@dividend+1)^0,w,c
  7086   0035C0  A0D8               	btfss	status,0,c
  7087   0035C2  EFE5  F01A         	goto	u8421
  7088   0035C6  EFE7  F01A         	goto	u8420
  7089   0035CA                     u8421:
  7090   0035CA  EFEB  F01A         	goto	l8634
  7091   0035CE                     u8420:
  7092   0035CE  502A               	movf	___awmod@divisor^0,w,c
  7093   0035D0  5E28               	subwf	___awmod@dividend^0,f,c
  7094   0035D2  502B               	movf	(___awmod@divisor+1)^0,w,c
  7095   0035D4  5A29               	subwfb	(___awmod@dividend+1)^0,f,c
  7096   0035D6                     l8634:
  7097   0035D6  90D8               	bcf	status,0,c
  7098   0035D8  322B               	rrcf	(___awmod@divisor+1)^0,f,c
  7099   0035DA  322A               	rrcf	___awmod@divisor^0,f,c
  7100   0035DC  2E2C               	decfsz	___awmod@counter^0,f,c
  7101   0035DE  EFDC  F01A         	goto	l8630
  7102   0035E2                     l8638:
  7103   0035E2  502D               	movf	___awmod@sign^0,w,c
  7104   0035E4  B4D8               	btfsc	status,2,c
  7105   0035E6  EFF7  F01A         	goto	u8431
  7106   0035EA  EFF9  F01A         	goto	u8430
  7107   0035EE                     u8431:
  7108   0035EE  EFFD  F01A         	goto	l8642
  7109   0035F2                     u8430:
  7110   0035F2  6C28               	negf	___awmod@dividend^0,c
  7111   0035F4  1E29               	comf	(___awmod@dividend+1)^0,f,c
  7112   0035F6  B0D8               	btfsc	status,0,c
  7113   0035F8  2A29               	incf	(___awmod@dividend+1)^0,f,c
  7114   0035FA                     l8642:
  7115   0035FA  C028  F028         	movff	___awmod@dividend,?___awmod
  7116   0035FE  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  7117   003602  0012               	return		;funcret
  7118   003604                     __end_of___awmod:
  7119                           	callstack 0
  7120                           
  7121 ;; *************** function ___awdiv *****************
  7122 ;; Defined at:
  7123 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  dividend        2   39[COMRAM] int 
  7126 ;;  divisor         2   41[COMRAM] int 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  quotient        2   45[COMRAM] int 
  7129 ;;  sign            1   44[COMRAM] unsigned char 
  7130 ;;  counter         1   43[COMRAM] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  2   39[COMRAM] int 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7141 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7143 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;Total ram usage:        8 bytes
  7145 ;; Hardware stack levels used: 1
  7146 ;; Hardware stack levels required when called: 8
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_dtoa
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           	psect	text44
  7155   003326                     __ptext44:
  7156                           	callstack 0
  7157   003326                     ___awdiv:
  7158                           	callstack 16
  7159   003326  0E00               	movlw	0
  7160   003328  6E2D               	movwf	___awdiv@sign^0,c
  7161   00332A  BE2B               	btfsc	(___awdiv@divisor+1)^0,7,c
  7162   00332C  EF9C  F019         	goto	u8320
  7163   003330  EF9A  F019         	goto	u8321
  7164   003334                     u8321:
  7165   003334  EFA2  F019         	goto	l8574
  7166   003338                     u8320:
  7167   003338  6C2A               	negf	___awdiv@divisor^0,c
  7168   00333A  1E2B               	comf	(___awdiv@divisor+1)^0,f,c
  7169   00333C  B0D8               	btfsc	status,0,c
  7170   00333E  2A2B               	incf	(___awdiv@divisor+1)^0,f,c
  7171   003340  0E01               	movlw	1
  7172   003342  6E2D               	movwf	___awdiv@sign^0,c
  7173   003344                     l8574:
  7174   003344  BE29               	btfsc	(___awdiv@dividend+1)^0,7,c
  7175   003346  EFA9  F019         	goto	u8330
  7176   00334A  EFA7  F019         	goto	u8331
  7177   00334E                     u8331:
  7178   00334E  EFAF  F019         	goto	l8580
  7179   003352                     u8330:
  7180   003352  6C28               	negf	___awdiv@dividend^0,c
  7181   003354  1E29               	comf	(___awdiv@dividend+1)^0,f,c
  7182   003356  B0D8               	btfsc	status,0,c
  7183   003358  2A29               	incf	(___awdiv@dividend+1)^0,f,c
  7184   00335A  0E01               	movlw	1
  7185   00335C  1A2D               	xorwf	___awdiv@sign^0,f,c
  7186   00335E                     l8580:
  7187   00335E  0E00               	movlw	0
  7188   003360  6E2F               	movwf	(___awdiv@quotient+1)^0,c
  7189   003362  0E00               	movlw	0
  7190   003364  6E2E               	movwf	___awdiv@quotient^0,c
  7191   003366  502A               	movf	___awdiv@divisor^0,w,c
  7192   003368  102B               	iorwf	(___awdiv@divisor+1)^0,w,c
  7193   00336A  B4D8               	btfsc	status,2,c
  7194   00336C  EFBA  F019         	goto	u8341
  7195   003370  EFBC  F019         	goto	u8340
  7196   003374                     u8341:
  7197   003374  EFE4  F019         	goto	l8602
  7198   003378                     u8340:
  7199   003378  0E01               	movlw	1
  7200   00337A  6E2C               	movwf	___awdiv@counter^0,c
  7201   00337C  EFC4  F019         	goto	l8588
  7202   003380                     l8586:
  7203   003380  90D8               	bcf	status,0,c
  7204   003382  362A               	rlcf	___awdiv@divisor^0,f,c
  7205   003384  362B               	rlcf	(___awdiv@divisor+1)^0,f,c
  7206   003386  2A2C               	incf	___awdiv@counter^0,f,c
  7207   003388                     l8588:
  7208   003388  AE2B               	btfss	(___awdiv@divisor+1)^0,7,c
  7209   00338A  EFC9  F019         	goto	u8351
  7210   00338E  EFCB  F019         	goto	u8350
  7211   003392                     u8351:
  7212   003392  EFC0  F019         	goto	l8586
  7213   003396                     u8350:
  7214   003396                     l8590:
  7215   003396  90D8               	bcf	status,0,c
  7216   003398  362E               	rlcf	___awdiv@quotient^0,f,c
  7217   00339A  362F               	rlcf	(___awdiv@quotient+1)^0,f,c
  7218   00339C  502A               	movf	___awdiv@divisor^0,w,c
  7219   00339E  5C28               	subwf	___awdiv@dividend^0,w,c
  7220   0033A0  502B               	movf	(___awdiv@divisor+1)^0,w,c
  7221   0033A2  5829               	subwfb	(___awdiv@dividend+1)^0,w,c
  7222   0033A4  A0D8               	btfss	status,0,c
  7223   0033A6  EFD7  F019         	goto	u8361
  7224   0033AA  EFD9  F019         	goto	u8360
  7225   0033AE                     u8361:
  7226   0033AE  EFDE  F019         	goto	l8598
  7227   0033B2                     u8360:
  7228   0033B2  502A               	movf	___awdiv@divisor^0,w,c
  7229   0033B4  5E28               	subwf	___awdiv@dividend^0,f,c
  7230   0033B6  502B               	movf	(___awdiv@divisor+1)^0,w,c
  7231   0033B8  5A29               	subwfb	(___awdiv@dividend+1)^0,f,c
  7232   0033BA  802E               	bsf	___awdiv@quotient^0,0,c
  7233   0033BC                     l8598:
  7234   0033BC  90D8               	bcf	status,0,c
  7235   0033BE  322B               	rrcf	(___awdiv@divisor+1)^0,f,c
  7236   0033C0  322A               	rrcf	___awdiv@divisor^0,f,c
  7237   0033C2  2E2C               	decfsz	___awdiv@counter^0,f,c
  7238   0033C4  EFCB  F019         	goto	l8590
  7239   0033C8                     l8602:
  7240   0033C8  502D               	movf	___awdiv@sign^0,w,c
  7241   0033CA  B4D8               	btfsc	status,2,c
  7242   0033CC  EFEA  F019         	goto	u8371
  7243   0033D0  EFEC  F019         	goto	u8370
  7244   0033D4                     u8371:
  7245   0033D4  EFF0  F019         	goto	l8606
  7246   0033D8                     u8370:
  7247   0033D8  6C2E               	negf	___awdiv@quotient^0,c
  7248   0033DA  1E2F               	comf	(___awdiv@quotient+1)^0,f,c
  7249   0033DC  B0D8               	btfsc	status,0,c
  7250   0033DE  2A2F               	incf	(___awdiv@quotient+1)^0,f,c
  7251   0033E0                     l8606:
  7252   0033E0  C02E  F028         	movff	___awdiv@quotient,?___awdiv
  7253   0033E4  C02F  F029         	movff	___awdiv@quotient+1,?___awdiv+1
  7254   0033E8  0012               	return		;funcret
  7255   0033EA                     __end_of___awdiv:
  7256                           	callstack 0
  7257                           
  7258 ;; *************** function _memset *****************
  7259 ;; Defined at:
  7260 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  dest            2   39[COMRAM] PTR void 
  7263 ;;		 -> Pulse_Meter_Display@Duty_Cycle_Str(4), Pulse_Meter_Display@Freq_Str(5), 
  7264 ;;  c               2   41[COMRAM] int 
  7265 ;;  n               2   43[COMRAM] unsigned int 
  7266 ;; Auto vars:     Size  Location     Type
  7267 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7268 ;;		 -> Pulse_Meter_Display@Duty_Cycle_Str(4), Pulse_Meter_Display@Freq_Str(5), 
  7269 ;;  k               2    0[BANK0 ] unsigned int 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  2   39[COMRAM] PTR void 
  7272 ;; Registers used:
  7273 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7279 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7280 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7281 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;Total ram usage:       12 bytes
  7284 ;; Hardware stack levels used: 1
  7285 ;; Hardware stack levels required when called: 8
  7286 ;; This function calls:
  7287 ;;		Nothing
  7288 ;; This function is called by:
  7289 ;;		_convert_uint8_to_string
  7290 ;;		_convert_uint32_to_string
  7291 ;;		_convert_uint16_to_string
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           	psect	text45
  7296   001FD6                     __ptext45:
  7297                           	callstack 0
  7298   001FD6                     _memset:
  7299                           	callstack 20
  7300   001FD6  C028  F082         	movff	memset@dest,memset@s
  7301   001FDA  C029  F083         	movff	memset@dest+1,memset@s+1
  7302   001FDE  502C               	movf	memset@n^0,w,c
  7303   001FE0  102D               	iorwf	(memset@n+1)^0,w,c
  7304   001FE2  A4D8               	btfss	status,2,c
  7305   001FE4  EFF6  F00F         	goto	u9111
  7306   001FE8  EFF8  F00F         	goto	u9110
  7307   001FEC                     u9111:
  7308   001FEC  EFFA  F00F         	goto	l9174
  7309   001FF0                     u9110:
  7310   001FF0  EFA6  F010         	goto	l2175
  7311   001FF4                     l9174:
  7312   001FF4  C082  FFD9         	movff	memset@s,fsr2l
  7313   001FF8  C083  FFDA         	movff	memset@s+1,fsr2h
  7314   001FFC  C02A  FFDF         	movff	memset@c,indf2
  7315   002000  502C               	movf	memset@n^0,w,c
  7316   002002  0100               	movlb	0	; () banked
  7317   002004  2582               	addwf	memset@s& (0+255),w,b
  7318   002006  6E2E               	movwf	??_memset^0,c
  7319   002008  502D               	movf	(memset@n+1)^0,w,c
  7320   00200A  2183               	addwfc	(memset@s+1)& (0+255),w,b
  7321   00200C  6E2F               	movwf	(??_memset+1)^0,c
  7322   00200E  0EFF               	movlw	255
  7323   002010  242E               	addwf	??_memset^0,w,c
  7324   002012  6ED9               	movwf	fsr2l,c
  7325   002014  0EFF               	movlw	255
  7326   002016  202F               	addwfc	(??_memset+1)^0,w,c
  7327   002018  6EDA               	movwf	fsr2h,c
  7328   00201A  C02A  FFDF         	movff	memset@c,indf2
  7329   00201E  502D               	movf	(memset@n+1)^0,w,c
  7330   002020  E107               	bnz	u9121
  7331   002022  0E03               	movlw	3
  7332   002024  5C2C               	subwf	memset@n^0,w,c
  7333   002026  B0D8               	btfsc	status,0,c
  7334   002028  EF18  F010         	goto	u9121
  7335   00202C  EF1A  F010         	goto	u9120
  7336   002030                     u9121:
  7337   002030  EF1C  F010         	goto	l9180
  7338   002034                     u9120:
  7339   002034  EFA6  F010         	goto	l2175
  7340   002038                     l9180:
  7341                           
  7342                           ; BSR set to: 0
  7343   002038  EE20 F001          	lfsr	2,1
  7344   00203C  5182               	movf	memset@s& (0+255),w,b
  7345   00203E  26D9               	addwf	fsr2l,f,c
  7346   002040  5183               	movf	(memset@s+1)& (0+255),w,b
  7347   002042  22DA               	addwfc	fsr2h,f,c
  7348   002044  C02A  FFDF         	movff	memset@c,indf2
  7349   002048  EE20 F002          	lfsr	2,2
  7350   00204C  5182               	movf	memset@s& (0+255),w,b
  7351   00204E  26D9               	addwf	fsr2l,f,c
  7352   002050  5183               	movf	(memset@s+1)& (0+255),w,b
  7353   002052  22DA               	addwfc	fsr2h,f,c
  7354   002054  C02A  FFDF         	movff	memset@c,indf2
  7355   002058  502C               	movf	memset@n^0,w,c
  7356   00205A  2582               	addwf	memset@s& (0+255),w,b
  7357   00205C  6E2E               	movwf	??_memset^0,c
  7358   00205E  502D               	movf	(memset@n+1)^0,w,c
  7359   002060  2183               	addwfc	(memset@s+1)& (0+255),w,b
  7360   002062  6E2F               	movwf	(??_memset+1)^0,c
  7361   002064  0EFE               	movlw	254
  7362   002066  242E               	addwf	??_memset^0,w,c
  7363   002068  6ED9               	movwf	fsr2l,c
  7364   00206A  0EFF               	movlw	255
  7365   00206C  202F               	addwfc	(??_memset+1)^0,w,c
  7366   00206E  6EDA               	movwf	fsr2h,c
  7367   002070  C02A  FFDF         	movff	memset@c,indf2
  7368   002074  502C               	movf	memset@n^0,w,c
  7369   002076  2582               	addwf	memset@s& (0+255),w,b
  7370   002078  6E2E               	movwf	??_memset^0,c
  7371   00207A  502D               	movf	(memset@n+1)^0,w,c
  7372   00207C  2183               	addwfc	(memset@s+1)& (0+255),w,b
  7373   00207E  6E2F               	movwf	(??_memset+1)^0,c
  7374   002080  0EFD               	movlw	253
  7375   002082  242E               	addwf	??_memset^0,w,c
  7376   002084  6ED9               	movwf	fsr2l,c
  7377   002086  0EFF               	movlw	255
  7378   002088  202F               	addwfc	(??_memset+1)^0,w,c
  7379   00208A  6EDA               	movwf	fsr2h,c
  7380   00208C  C02A  FFDF         	movff	memset@c,indf2
  7381   002090                     
  7382                           ; BSR set to: 0
  7383   002090  502D               	movf	(memset@n+1)^0,w,c
  7384   002092  E107               	bnz	u9131
  7385   002094  0E07               	movlw	7
  7386   002096  5C2C               	subwf	memset@n^0,w,c
  7387   002098  B0D8               	btfsc	status,0,c
  7388   00209A  EF51  F010         	goto	u9131
  7389   00209E  EF53  F010         	goto	u9130
  7390   0020A2                     u9131:
  7391   0020A2  EF55  F010         	goto	l9186
  7392   0020A6                     u9130:
  7393   0020A6  EFA6  F010         	goto	l2175
  7394   0020AA                     l9186:
  7395                           
  7396                           ; BSR set to: 0
  7397   0020AA  EE20 F003          	lfsr	2,3
  7398   0020AE  5182               	movf	memset@s& (0+255),w,b
  7399   0020B0  26D9               	addwf	fsr2l,f,c
  7400   0020B2  5183               	movf	(memset@s+1)& (0+255),w,b
  7401   0020B4  22DA               	addwfc	fsr2h,f,c
  7402   0020B6  C02A  FFDF         	movff	memset@c,indf2
  7403   0020BA  502C               	movf	memset@n^0,w,c
  7404   0020BC  2582               	addwf	memset@s& (0+255),w,b
  7405   0020BE  6E2E               	movwf	??_memset^0,c
  7406   0020C0  502D               	movf	(memset@n+1)^0,w,c
  7407   0020C2  2183               	addwfc	(memset@s+1)& (0+255),w,b
  7408   0020C4  6E2F               	movwf	(??_memset+1)^0,c
  7409   0020C6  0EFC               	movlw	252
  7410   0020C8  242E               	addwf	??_memset^0,w,c
  7411   0020CA  6ED9               	movwf	fsr2l,c
  7412   0020CC  0EFF               	movlw	255
  7413   0020CE  202F               	addwfc	(??_memset+1)^0,w,c
  7414   0020D0  6EDA               	movwf	fsr2h,c
  7415   0020D2  C02A  FFDF         	movff	memset@c,indf2
  7416   0020D6                     
  7417                           ; BSR set to: 0
  7418   0020D6  502D               	movf	(memset@n+1)^0,w,c
  7419   0020D8  E107               	bnz	u9141
  7420   0020DA  0E09               	movlw	9
  7421   0020DC  5C2C               	subwf	memset@n^0,w,c
  7422   0020DE  B0D8               	btfsc	status,0,c
  7423   0020E0  EF74  F010         	goto	u9141
  7424   0020E4  EF76  F010         	goto	u9140
  7425   0020E8                     u9141:
  7426   0020E8  EF78  F010         	goto	l9192
  7427   0020EC                     u9140:
  7428   0020EC  EFA6  F010         	goto	l2175
  7429   0020F0                     l9192:
  7430                           
  7431                           ; BSR set to: 0
  7432   0020F0  C082  F02E         	movff	memset@s,??_memset
  7433   0020F4  C083  F02F         	movff	memset@s+1,??_memset+1
  7434   0020F8  1E2E               	comf	??_memset^0,f,c
  7435   0020FA  1E2F               	comf	(??_memset+1)^0,f,c
  7436   0020FC  4A2E               	infsnz	??_memset^0,f,c
  7437   0020FE  2A2F               	incf	(??_memset+1)^0,f,c
  7438   002100  0E03               	movlw	3
  7439   002102  142E               	andwf	??_memset^0,w,c
  7440   002104  6F80               	movwf	memset@k& (0+255),b
  7441   002106  6B81               	clrf	(memset@k+1)& (0+255),b
  7442   002108  5180               	movf	memset@k& (0+255),w,b
  7443   00210A  2782               	addwf	memset@s& (0+255),f,b
  7444   00210C  5181               	movf	(memset@k+1)& (0+255),w,b
  7445   00210E  2383               	addwfc	(memset@s+1)& (0+255),f,b
  7446   002110  5180               	movf	memset@k& (0+255),w,b
  7447   002112  5E2C               	subwf	memset@n^0,f,c
  7448   002114  5181               	movf	(memset@k+1)& (0+255),w,b
  7449   002116  5A2D               	subwfb	(memset@n+1)^0,f,c
  7450   002118  0EFC               	movlw	252
  7451   00211A  162C               	andwf	memset@n^0,f,c
  7452   00211C  0EFF               	movlw	255
  7453   00211E  162D               	andwf	(memset@n+1)^0,f,c
  7454   002120  EF9D  F010         	goto	l9200
  7455   002124                     l9194:
  7456                           
  7457                           ; BSR set to: 0
  7458   002124  C082  FFD9         	movff	memset@s,fsr2l
  7459   002128  C083  FFDA         	movff	memset@s+1,fsr2h
  7460   00212C  C02A  FFDF         	movff	memset@c,indf2
  7461   002130                     
  7462                           ; BSR set to: 0
  7463   002130  062C               	decf	memset@n^0,f,c
  7464   002132  A0D8               	btfss	status,0,c
  7465   002134  062D               	decf	(memset@n+1)^0,f,c
  7466   002136                     
  7467                           ; BSR set to: 0
  7468   002136  4B82               	infsnz	memset@s& (0+255),f,b
  7469   002138  2B83               	incf	(memset@s+1)& (0+255),f,b
  7470   00213A                     l9200:
  7471                           
  7472                           ; BSR set to: 0
  7473   00213A  502C               	movf	memset@n^0,w,c
  7474   00213C  102D               	iorwf	(memset@n+1)^0,w,c
  7475   00213E  A4D8               	btfss	status,2,c
  7476   002140  EFA4  F010         	goto	u9151
  7477   002144  EFA6  F010         	goto	u9150
  7478   002148                     u9151:
  7479   002148  EF92  F010         	goto	l9194
  7480   00214C                     u9150:
  7481   00214C                     l2175:
  7482   00214C  0012               	return		;funcret
  7483   00214E                     __end_of_memset:
  7484                           	callstack 0
  7485                           
  7486 ;; *************** function _Pulse_Meter_Calculate *****************
  7487 ;; Defined at:
  7488 ;;		line 72 in file "Pulse_Meter.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  XTAL_FREQ_MH    4    8[BANK1 ] unsigned long 
  7491 ;;  TimerPrescal    1   12[BANK1 ] unsigned char 
  7492 ;;  Pulse_Freq      2   13[BANK1 ] PTR unsigned long 
  7493 ;;		 -> Frequency(4), 
  7494 ;;  Pulse_Duty_C    2   15[BANK1 ] PTR unsigned char 
  7495 ;;		 -> Duty_Cycle(1), 
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;  Freq            4   17[BANK1 ] unsigned long 
  7498 ;;  Duty_Cycle      1   21[BANK1 ] unsigned char 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1    wreg      void 
  7501 ;; Registers used:
  7502 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7508 ;;      Params:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7509 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7511 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7512 ;;Total ram usage:       14 bytes
  7513 ;; Hardware stack levels used: 1
  7514 ;; Hardware stack levels required when called: 9
  7515 ;; This function calls:
  7516 ;;		_Timer1_Write_Value
  7517 ;;		___fldiv
  7518 ;;		___flmul
  7519 ;;		___fltol
  7520 ;;		___lmul
  7521 ;;		___xxtofl
  7522 ;; This function is called by:
  7523 ;;		_main
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text46
  7528   001AA2                     __ptext46:
  7529                           	callstack 0
  7530   001AA2                     _Pulse_Meter_Calculate:
  7531                           	callstack 21
  7532   001AA2                     
  7533                           ;Pulse_Meter.c: 75:     uint8 Duty_Cycle = 0;
  7534   001AA2  0E00               	movlw	0
  7535   001AA4  0101               	movlb	1	; () banked
  7536   001AA6  6F73               	movwf	Pulse_Meter_Calculate@Duty_Cycle& (0+255),b
  7537   001AA8                     
  7538                           ; BSR set to: 1
  7539                           ;Pulse_Meter.c: 77:     if (cap_flag == 3) {
  7540   001AA8  0E03               	movlw	3
  7541   001AAA  0100               	movlb	0	; () banked
  7542   001AAC  19D6               	xorwf	_cap_flag& (0+255),w,b	;volatile
  7543   001AAE  A4D8               	btfss	status,2,c
  7544   001AB0  EF5C  F00D         	goto	u9991
  7545   001AB4  EF5E  F00D         	goto	u9990
  7546   001AB8                     u9991:
  7547   001AB8  EF41  F00E         	goto	l1479
  7548   001ABC                     u9990:
  7549   001ABC                     
  7550                           ; BSR set to: 0
  7551                           ;Pulse_Meter.c: 79:         Duty_Cycle = (Cap2 - Cap1) * 100.0 / (Cap3 - Cap1);
  7552   001ABC  51E5               	movf	_Cap1& (0+255),w,b	;volatile
  7553   001ABE  5DDD               	subwf	_Cap3& (0+255),w,b	;volatile
  7554   001AC0  6F84               	movwf	___xxtofl@val& (0+255),b
  7555   001AC2  51E6               	movf	(_Cap1+1)& (0+255),w,b	;volatile
  7556   001AC4  59DE               	subwfb	(_Cap3+1)& (0+255),w,b	;volatile
  7557   001AC6  6F85               	movwf	(___xxtofl@val+1)& (0+255),b
  7558   001AC8  51E7               	movf	(_Cap1+2)& (0+255),w,b	;volatile
  7559   001ACA  59DF               	subwfb	(_Cap3+2)& (0+255),w,b	;volatile
  7560   001ACC  6F86               	movwf	(___xxtofl@val+2)& (0+255),b
  7561   001ACE  51E8               	movf	(_Cap1+3)& (0+255),w,b	;volatile
  7562   001AD0  59E0               	subwfb	(_Cap3+3)& (0+255),w,b	;volatile
  7563   001AD2  6F87               	movwf	(___xxtofl@val+3)& (0+255),b
  7564   001AD4  0E00               	movlw	0
  7565   001AD6  EC42  F00E         	call	___xxtofl
  7566   001ADA  C084  F0AF         	movff	?___xxtofl,___fldiv@a
  7567   001ADE  C085  F0B0         	movff	?___xxtofl+1,___fldiv@a+1
  7568   001AE2  C086  F0B1         	movff	?___xxtofl+2,___fldiv@a+2
  7569   001AE6  C087  F0B2         	movff	?___xxtofl+3,___fldiv@a+3
  7570   001AEA  0E00               	movlw	0
  7571   001AEC  0100               	movlb	0	; () banked
  7572   001AEE  6F96               	movwf	___flmul@a& (0+255),b
  7573   001AF0  0E00               	movlw	0
  7574   001AF2  6F97               	movwf	(___flmul@a+1)& (0+255),b
  7575   001AF4  0EC8               	movlw	200
  7576   001AF6  6F98               	movwf	(___flmul@a+2)& (0+255),b
  7577   001AF8  0E42               	movlw	66
  7578   001AFA  6F99               	movwf	(___flmul@a+3)& (0+255),b
  7579   001AFC  51E5               	movf	_Cap1& (0+255),w,b	;volatile
  7580   001AFE  5DE1               	subwf	_Cap2& (0+255),w,b	;volatile
  7581   001B00  6F84               	movwf	___xxtofl@val& (0+255),b
  7582   001B02  51E6               	movf	(_Cap1+1)& (0+255),w,b	;volatile
  7583   001B04  59E2               	subwfb	(_Cap2+1)& (0+255),w,b	;volatile
  7584   001B06  6F85               	movwf	(___xxtofl@val+1)& (0+255),b
  7585   001B08  51E7               	movf	(_Cap1+2)& (0+255),w,b	;volatile
  7586   001B0A  59E3               	subwfb	(_Cap2+2)& (0+255),w,b	;volatile
  7587   001B0C  6F86               	movwf	(___xxtofl@val+2)& (0+255),b
  7588   001B0E  51E8               	movf	(_Cap1+3)& (0+255),w,b	;volatile
  7589   001B10  59E4               	subwfb	(_Cap2+3)& (0+255),w,b	;volatile
  7590   001B12  6F87               	movwf	(___xxtofl@val+3)& (0+255),b
  7591   001B14  0E00               	movlw	0
  7592   001B16  EC42  F00E         	call	___xxtofl
  7593   001B1A  C084  F092         	movff	?___xxtofl,___flmul@b
  7594   001B1E  C085  F093         	movff	?___xxtofl+1,___flmul@b+1
  7595   001B22  C086  F094         	movff	?___xxtofl+2,___flmul@b+2
  7596   001B26  C087  F095         	movff	?___xxtofl+3,___flmul@b+3
  7597   001B2A  EC45  F008         	call	___flmul	;wreg free
  7598   001B2E  C092  F0AB         	movff	?___flmul,___fldiv@b
  7599   001B32  C093  F0AC         	movff	?___flmul+1,___fldiv@b+1
  7600   001B36  C094  F0AD         	movff	?___flmul+2,___fldiv@b+2
  7601   001B3A  C095  F0AE         	movff	?___flmul+3,___fldiv@b+3
  7602   001B3E  EC5B  F00A         	call	___fldiv	;wreg free
  7603   001B42  C0AB  F15E         	movff	?___fldiv,___fltol@f1
  7604   001B46  C0AC  F15F         	movff	?___fldiv+1,___fltol@f1+1
  7605   001B4A  C0AD  F160         	movff	?___fldiv+2,___fltol@f1+2
  7606   001B4E  C0AE  F161         	movff	?___fldiv+3,___fltol@f1+3
  7607   001B52  EC5E  F016         	call	___fltol	;wreg free
  7608   001B56  0101               	movlb	1	; () banked
  7609   001B58  515E               	movf	?___fltol& (0+255),w,b
  7610   001B5A  6F73               	movwf	Pulse_Meter_Calculate@Duty_Cycle& (0+255),b
  7611                           
  7612                           ;Pulse_Meter.c: 82:         Freq = ((double)(XTAL_FREQ_MHZ * 1000000.0)) / ((double)(Tim
      +                          erPrescaler * (Cap3 - Cap1) * 4.0));
  7613   001B5C  0E00               	movlw	0
  7614   001B5E  0100               	movlb	0	; () banked
  7615   001B60  6F96               	movwf	___flmul@a& (0+255),b
  7616   001B62  0E00               	movlw	0
  7617   001B64  6F97               	movwf	(___flmul@a+1)& (0+255),b
  7618   001B66  0E80               	movlw	128
  7619   001B68  6F98               	movwf	(___flmul@a+2)& (0+255),b
  7620   001B6A  0E40               	movlw	64
  7621   001B6C  6F99               	movwf	(___flmul@a+3)& (0+255),b
  7622   001B6E  51E5               	movf	_Cap1& (0+255),w,b	;volatile
  7623   001B70  5DDD               	subwf	_Cap3& (0+255),w,b	;volatile
  7624   001B72  6E2C               	movwf	___lmul@multiplicand^0,c
  7625   001B74  51E6               	movf	(_Cap1+1)& (0+255),w,b	;volatile
  7626   001B76  59DE               	subwfb	(_Cap3+1)& (0+255),w,b	;volatile
  7627   001B78  6E2D               	movwf	(___lmul@multiplicand+1)^0,c
  7628   001B7A  51E7               	movf	(_Cap1+2)& (0+255),w,b	;volatile
  7629   001B7C  59DF               	subwfb	(_Cap3+2)& (0+255),w,b	;volatile
  7630   001B7E  6E2E               	movwf	(___lmul@multiplicand+2)^0,c
  7631   001B80  51E8               	movf	(_Cap1+3)& (0+255),w,b	;volatile
  7632   001B82  59E0               	subwfb	(_Cap3+3)& (0+255),w,b	;volatile
  7633   001B84  6E2F               	movwf	(___lmul@multiplicand+3)^0,c
  7634   001B86  0101               	movlb	1	; () banked
  7635   001B88  516A               	movf	Pulse_Meter_Calculate@TimerPrescaler& (0+255),w,b
  7636   001B8A  6E28               	movwf	___lmul@multiplier^0,c
  7637   001B8C  6A29               	clrf	(___lmul@multiplier+1)^0,c
  7638   001B8E  6A2A               	clrf	(___lmul@multiplier+2)^0,c
  7639   001B90  6A2B               	clrf	(___lmul@multiplier+3)^0,c
  7640   001B92  EC71  F01F         	call	___lmul	;wreg free
  7641   001B96  C028  F084         	movff	?___lmul,___xxtofl@val
  7642   001B9A  C029  F085         	movff	?___lmul+1,___xxtofl@val+1
  7643   001B9E  C02A  F086         	movff	?___lmul+2,___xxtofl@val+2
  7644   001BA2  C02B  F087         	movff	?___lmul+3,___xxtofl@val+3
  7645   001BA6  0E00               	movlw	0
  7646   001BA8  EC42  F00E         	call	___xxtofl
  7647   001BAC  C084  F092         	movff	?___xxtofl,___flmul@b
  7648   001BB0  C085  F093         	movff	?___xxtofl+1,___flmul@b+1
  7649   001BB4  C086  F094         	movff	?___xxtofl+2,___flmul@b+2
  7650   001BB8  C087  F095         	movff	?___xxtofl+3,___flmul@b+3
  7651   001BBC  EC45  F008         	call	___flmul	;wreg free
  7652   001BC0  C092  F0AF         	movff	?___flmul,___fldiv@a
  7653   001BC4  C093  F0B0         	movff	?___flmul+1,___fldiv@a+1
  7654   001BC8  C094  F0B1         	movff	?___flmul+2,___fldiv@a+2
  7655   001BCC  C095  F0B2         	movff	?___flmul+3,___fldiv@a+3
  7656   001BD0  0E00               	movlw	0
  7657   001BD2  0100               	movlb	0	; () banked
  7658   001BD4  6F96               	movwf	___flmul@a& (0+255),b
  7659   001BD6  0E24               	movlw	36
  7660   001BD8  6F97               	movwf	(___flmul@a+1)& (0+255),b
  7661   001BDA  0E74               	movlw	116
  7662   001BDC  6F98               	movwf	(___flmul@a+2)& (0+255),b
  7663   001BDE  0E49               	movlw	73
  7664   001BE0  6F99               	movwf	(___flmul@a+3)& (0+255),b
  7665   001BE2  C166  F084         	movff	Pulse_Meter_Calculate@XTAL_FREQ_MHZ,___xxtofl@val
  7666   001BE6  C167  F085         	movff	Pulse_Meter_Calculate@XTAL_FREQ_MHZ+1,___xxtofl@val+1
  7667   001BEA  C168  F086         	movff	Pulse_Meter_Calculate@XTAL_FREQ_MHZ+2,___xxtofl@val+2
  7668   001BEE  C169  F087         	movff	Pulse_Meter_Calculate@XTAL_FREQ_MHZ+3,___xxtofl@val+3
  7669   001BF2  0E00               	movlw	0
  7670   001BF4  EC42  F00E         	call	___xxtofl
  7671   001BF8  C084  F092         	movff	?___xxtofl,___flmul@b
  7672   001BFC  C085  F093         	movff	?___xxtofl+1,___flmul@b+1
  7673   001C00  C086  F094         	movff	?___xxtofl+2,___flmul@b+2
  7674   001C04  C087  F095         	movff	?___xxtofl+3,___flmul@b+3
  7675   001C08  EC45  F008         	call	___flmul	;wreg free
  7676   001C0C  C092  F0AB         	movff	?___flmul,___fldiv@b
  7677   001C10  C093  F0AC         	movff	?___flmul+1,___fldiv@b+1
  7678   001C14  C094  F0AD         	movff	?___flmul+2,___fldiv@b+2
  7679   001C18  C095  F0AE         	movff	?___flmul+3,___fldiv@b+3
  7680   001C1C  EC5B  F00A         	call	___fldiv	;wreg free
  7681   001C20  C0AB  F15E         	movff	?___fldiv,___fltol@f1
  7682   001C24  C0AC  F15F         	movff	?___fldiv+1,___fltol@f1+1
  7683   001C28  C0AD  F160         	movff	?___fldiv+2,___fltol@f1+2
  7684   001C2C  C0AE  F161         	movff	?___fldiv+3,___fltol@f1+3
  7685   001C30  EC5E  F016         	call	___fltol	;wreg free
  7686   001C34  C15E  F16F         	movff	?___fltol,Pulse_Meter_Calculate@Freq
  7687   001C38  C15F  F170         	movff	?___fltol+1,Pulse_Meter_Calculate@Freq+1
  7688   001C3C  C160  F171         	movff	?___fltol+2,Pulse_Meter_Calculate@Freq+2
  7689   001C40  C161  F172         	movff	?___fltol+3,Pulse_Meter_Calculate@Freq+3
  7690   001C44                     
  7691                           ;Pulse_Meter.c: 85:         *Pulse_Freq = Freq;
  7692   001C44  C16B  FFD9         	movff	Pulse_Meter_Calculate@Pulse_Freq,fsr2l
  7693   001C48  C16C  FFDA         	movff	Pulse_Meter_Calculate@Pulse_Freq+1,fsr2h
  7694   001C4C  C16F  FFDE         	movff	Pulse_Meter_Calculate@Freq,postinc2
  7695   001C50  C170  FFDE         	movff	Pulse_Meter_Calculate@Freq+1,postinc2
  7696   001C54  C171  FFDE         	movff	Pulse_Meter_Calculate@Freq+2,postinc2
  7697   001C58  C172  FFDE         	movff	Pulse_Meter_Calculate@Freq+3,postinc2
  7698   001C5C                     
  7699                           ;Pulse_Meter.c: 86:         *Pulse_Duty_Cycle = Duty_Cycle;
  7700   001C5C  C16D  FFD9         	movff	Pulse_Meter_Calculate@Pulse_Duty_Cycle,fsr2l
  7701   001C60  C16E  FFDA         	movff	Pulse_Meter_Calculate@Pulse_Duty_Cycle+1,fsr2h
  7702   001C64  C173  FFDF         	movff	Pulse_Meter_Calculate@Duty_Cycle,indf2
  7703   001C68                     
  7704                           ;Pulse_Meter.c: 89:         Timer1_Write_Value(&timer1_obj, 0);
  7705   001C68  0ED7               	movlw	low _timer1_obj
  7706   001C6A  6E28               	movwf	Timer1_Write_Value@_timer^0,c
  7707   001C6C  0E00               	movlw	high _timer1_obj
  7708   001C6E  6E29               	movwf	(Timer1_Write_Value@_timer+1)^0,c
  7709   001C70  0E00               	movlw	0
  7710   001C72  6E2B               	movwf	(Timer1_Write_Value@_value+1)^0,c
  7711   001C74  0E00               	movlw	0
  7712   001C76  6E2A               	movwf	Timer1_Write_Value@_value^0,c
  7713   001C78  EC9C  F021         	call	_Timer1_Write_Value	;wreg free
  7714   001C7C                     
  7715                           ;Pulse_Meter.c: 92:         cap_flag = 0;
  7716   001C7C  0E00               	movlw	0
  7717   001C7E  0100               	movlb	0	; () banked
  7718   001C80  6FD6               	movwf	_cap_flag& (0+255),b	;volatile
  7719   001C82                     l1479:
  7720                           
  7721                           ; BSR set to: 0
  7722   001C82  0012               	return		;funcret
  7723   001C84                     __end_of_Pulse_Meter_Calculate:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function ___lmul *****************
  7727 ;; Defined at:
  7728 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul32.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;  multiplier      4   39[COMRAM] unsigned long 
  7731 ;;  multiplicand    4   43[COMRAM] unsigned long 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  product         4    0[BANK0 ] unsigned long 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  4   39[COMRAM] unsigned long 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7743 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;Total ram usage:       12 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; Hardware stack levels required when called: 8
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_CCP_PWM_Mode_Init
  7754 ;;		_Pulse_Meter_Calculate
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text47
  7759   003EE2                     __ptext47:
  7760                           	callstack 0
  7761   003EE2                     ___lmul:
  7762                           	callstack 17
  7763   003EE2  0E00               	movlw	0
  7764   003EE4  0100               	movlb	0	; () banked
  7765   003EE6  6F80               	movwf	___lmul@product& (0+255),b
  7766   003EE8  0E00               	movlw	0
  7767   003EEA  6F81               	movwf	(___lmul@product+1)& (0+255),b
  7768   003EEC  0E00               	movlw	0
  7769   003EEE  6F82               	movwf	(___lmul@product+2)& (0+255),b
  7770   003EF0  0E00               	movlw	0
  7771   003EF2  6F83               	movwf	(___lmul@product+3)& (0+255),b
  7772   003EF4                     l8774:
  7773   003EF4  A028               	btfss	___lmul@multiplier^0,0,c
  7774   003EF6  EF7F  F01F         	goto	u8691
  7775   003EFA  EF81  F01F         	goto	u8690
  7776   003EFE                     u8691:
  7777   003EFE  EF8A  F01F         	goto	l8778
  7778   003F02                     u8690:
  7779   003F02  502C               	movf	___lmul@multiplicand^0,w,c
  7780   003F04  0100               	movlb	0	; () banked
  7781   003F06  2780               	addwf	___lmul@product& (0+255),f,b
  7782   003F08  502D               	movf	(___lmul@multiplicand+1)^0,w,c
  7783   003F0A  2381               	addwfc	(___lmul@product+1)& (0+255),f,b
  7784   003F0C  502E               	movf	(___lmul@multiplicand+2)^0,w,c
  7785   003F0E  2382               	addwfc	(___lmul@product+2)& (0+255),f,b
  7786   003F10  502F               	movf	(___lmul@multiplicand+3)^0,w,c
  7787   003F12  2383               	addwfc	(___lmul@product+3)& (0+255),f,b
  7788   003F14                     l8778:
  7789   003F14  90D8               	bcf	status,0,c
  7790   003F16  362C               	rlcf	___lmul@multiplicand^0,f,c
  7791   003F18  362D               	rlcf	(___lmul@multiplicand+1)^0,f,c
  7792   003F1A  362E               	rlcf	(___lmul@multiplicand+2)^0,f,c
  7793   003F1C  362F               	rlcf	(___lmul@multiplicand+3)^0,f,c
  7794   003F1E  90D8               	bcf	status,0,c
  7795   003F20  322B               	rrcf	(___lmul@multiplier+3)^0,f,c
  7796   003F22  322A               	rrcf	(___lmul@multiplier+2)^0,f,c
  7797   003F24  3229               	rrcf	(___lmul@multiplier+1)^0,f,c
  7798   003F26  3228               	rrcf	___lmul@multiplier^0,f,c
  7799   003F28  5028               	movf	___lmul@multiplier^0,w,c
  7800   003F2A  1029               	iorwf	(___lmul@multiplier+1)^0,w,c
  7801   003F2C  102A               	iorwf	(___lmul@multiplier+2)^0,w,c
  7802   003F2E  102B               	iorwf	(___lmul@multiplier+3)^0,w,c
  7803   003F30  A4D8               	btfss	status,2,c
  7804   003F32  EF9D  F01F         	goto	u8701
  7805   003F36  EF9F  F01F         	goto	u8700
  7806   003F3A                     u8701:
  7807   003F3A  EF7A  F01F         	goto	l8774
  7808   003F3E                     u8700:
  7809   003F3E  C080  F028         	movff	___lmul@product,?___lmul
  7810   003F42  C081  F029         	movff	___lmul@product+1,?___lmul+1
  7811   003F46  C082  F02A         	movff	___lmul@product+2,?___lmul+2
  7812   003F4A  C083  F02B         	movff	___lmul@product+3,?___lmul+3
  7813   003F4E  0012               	return		;funcret
  7814   003F50                     __end_of___lmul:
  7815                           	callstack 0
  7816                           
  7817 ;; *************** function _Timer1_Write_Value *****************
  7818 ;; Defined at:
  7819 ;;		line 80 in file "MCAL_Layer/Timer1/hal_timer1.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  _timer          2   39[COMRAM] PTR const struct .
  7822 ;;		 -> timer1_obj(6), 
  7823 ;;  _value          2   41[COMRAM] unsigned int 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;  ret             1    0        unsigned char 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      unsigned char 
  7828 ;; Registers used:
  7829 ;;		wreg, status,2, status,0
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7835 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;Total ram usage:        4 bytes
  7840 ;; Hardware stack levels used: 1
  7841 ;; Hardware stack levels required when called: 8
  7842 ;; This function calls:
  7843 ;;		Nothing
  7844 ;; This function is called by:
  7845 ;;		_Pulse_Meter_Calculate
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text48
  7850   004338                     __ptext48:
  7851                           	callstack 0
  7852   004338                     _Timer1_Write_Value:
  7853                           	callstack 21
  7854   004338                     
  7855                           ;MCAL_Layer/Timer1/hal_timer1.c: 83:     if(_timer==((void*)0)){
  7856   004338  5028               	movf	Timer1_Write_Value@_timer^0,w,c
  7857   00433A  1029               	iorwf	(Timer1_Write_Value@_timer+1)^0,w,c
  7858   00433C  A4D8               	btfss	status,2,c
  7859   00433E  EFA3  F021         	goto	u9311
  7860   004342  EFA5  F021         	goto	u9310
  7861   004346                     u9311:
  7862   004346  EFA7  F021         	goto	l9348
  7863   00434A                     u9310:
  7864   00434A                     
  7865                           ;MCAL_Layer/Timer1/hal_timer1.c: 85:     }
  7866   00434A  EFAB  F021         	goto	l1263
  7867   00434E                     l9348:
  7868                           
  7869                           ;MCAL_Layer/Timer1/hal_timer1.c: 87:     {;MCAL_Layer/Timer1/hal_timer1.c: 88:         (
      +                          *((volatile uint8 *)(0xFCF))) = (_value)>>8;
  7870   00434E  502B               	movf	(Timer1_Write_Value@_value+1)^0,w,c
  7871   004350  6ECF               	movwf	207,c	;volatile
  7872   004352                     
  7873                           ;MCAL_Layer/Timer1/hal_timer1.c: 89:         (*((volatile uint8 *)(0xFCE))) = (uint8)(_v
      +                          alue);
  7874   004352  C02A  FFCE         	movff	Timer1_Write_Value@_value,4046	;volatile
  7875   004356                     l1263:
  7876   004356  0012               	return		;funcret
  7877   004358                     __end_of_Timer1_Write_Value:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _CCP_PWM_Set_Duty *****************
  7881 ;; Defined at:
  7882 ;;		line 243 in file "MCAL_Layer/CCP/hal_ccp.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  _ccp_obj        2    8[BANK1 ] PTR const struct .
  7885 ;;		 -> ccp2_obj(13), 
  7886 ;;  _duty           1   10[BANK1 ] const unsigned char 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  l_duty_temp     2   13[BANK1 ] unsigned int 
  7889 ;;  ret             1    0        unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      unsigned char 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7899 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;Total ram usage:        7 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 9
  7906 ;; This function calls:
  7907 ;;		___fldiv
  7908 ;;		___flmul
  7909 ;;		___fltol
  7910 ;;		___xxtofl
  7911 ;; This function is called by:
  7912 ;;		_main
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text49
  7917   00214E                     __ptext49:
  7918                           	callstack 0
  7919   00214E                     _CCP_PWM_Set_Duty:
  7920                           	callstack 21
  7921   00214E                     
  7922                           ;MCAL_Layer/CCP/hal_ccp.c: 246:     uint16 l_duty_temp = 0;
  7923   00214E  0E00               	movlw	0
  7924   002150  0101               	movlb	1	; () banked
  7925   002152  6F6C               	movwf	(CCP_PWM_Set_Duty@l_duty_temp+1)& (0+255),b
  7926   002154  0E00               	movlw	0
  7927   002156  6F6B               	movwf	CCP_PWM_Set_Duty@l_duty_temp& (0+255),b
  7928   002158                     
  7929                           ; BSR set to: 1
  7930                           ;MCAL_Layer/CCP/hal_ccp.c: 247:     if(_ccp_obj==((void*)0))
  7931   002158  5166               	movf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),w,b
  7932   00215A  1167               	iorwf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),w,b
  7933   00215C  A4D8               	btfss	status,2,c
  7934   00215E  EFB3  F010         	goto	u9961
  7935   002162  EFB5  F010         	goto	u9960
  7936   002166                     u9961:
  7937   002166  EFB7  F010         	goto	l9774
  7938   00216A                     u9960:
  7939   00216A                     l9772:
  7940                           
  7941                           ; BSR set to: 1
  7942                           ;MCAL_Layer/CCP/hal_ccp.c: 250:     }
  7943   00216A  EF5A  F011         	goto	l537
  7944   00216E                     l9774:
  7945                           
  7946                           ; BSR set to: 1
  7947                           ;MCAL_Layer/CCP/hal_ccp.c: 252:     {;MCAL_Layer/CCP/hal_ccp.c: 253:         l_duty_temp
      +                           = (uint16) ( ((4*((*((volatile uint8 *)(0xFCB)))+1)))*(_duty/100.0) );
  7948   00216E  0E00               	movlw	0
  7949   002170  0100               	movlb	0	; () banked
  7950   002172  6FAF               	movwf	___fldiv@a& (0+255),b
  7951   002174  0E00               	movlw	0
  7952   002176  6FB0               	movwf	(___fldiv@a+1)& (0+255),b
  7953   002178  0EC8               	movlw	200
  7954   00217A  6FB1               	movwf	(___fldiv@a+2)& (0+255),b
  7955   00217C  0E42               	movlw	66
  7956   00217E  6FB2               	movwf	(___fldiv@a+3)& (0+255),b
  7957   002180  0101               	movlb	1	; () banked
  7958   002182  5168               	movf	CCP_PWM_Set_Duty@_duty& (0+255),w,b
  7959   002184  0100               	movlb	0	; () banked
  7960   002186  6F84               	movwf	___xxtofl@val& (0+255),b
  7961   002188  6B85               	clrf	(___xxtofl@val+1)& (0+255),b
  7962   00218A  6B86               	clrf	(___xxtofl@val+2)& (0+255),b
  7963   00218C  6B87               	clrf	(___xxtofl@val+3)& (0+255),b
  7964   00218E  0E01               	movlw	1
  7965   002190  EC42  F00E         	call	___xxtofl
  7966   002194  C084  F0AB         	movff	?___xxtofl,___fldiv@b
  7967   002198  C085  F0AC         	movff	?___xxtofl+1,___fldiv@b+1
  7968   00219C  C086  F0AD         	movff	?___xxtofl+2,___fldiv@b+2
  7969   0021A0  C087  F0AE         	movff	?___xxtofl+3,___fldiv@b+3
  7970   0021A4  EC5B  F00A         	call	___fldiv	;wreg free
  7971   0021A8  C0AB  F096         	movff	?___fldiv,___flmul@a
  7972   0021AC  C0AC  F097         	movff	?___fldiv+1,___flmul@a+1
  7973   0021B0  C0AD  F098         	movff	?___fldiv+2,___flmul@a+2
  7974   0021B4  C0AE  F099         	movff	?___fldiv+3,___flmul@a+3
  7975   0021B8  50CB               	movf	203,w,c	;volatile
  7976   0021BA  0101               	movlb	1	; () banked
  7977   0021BC  6F69               	movwf	??_CCP_PWM_Set_Duty& (0+255),b
  7978   0021BE  6B6A               	clrf	(??_CCP_PWM_Set_Duty+1)& (0+255),b
  7979   0021C0  90D8               	bcf	status,0,c
  7980   0021C2  3769               	rlcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7981   0021C4  376A               	rlcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7982   0021C6  90D8               	bcf	status,0,c
  7983   0021C8  3769               	rlcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7984   0021CA  376A               	rlcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7985   0021CC  0E04               	movlw	4
  7986   0021CE  2769               	addwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  7987   0021D0  0E00               	movlw	0
  7988   0021D2  236A               	addwfc	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  7989   0021D4  C169  F084         	movff	??_CCP_PWM_Set_Duty,___xxtofl@val
  7990   0021D8  C16A  F085         	movff	??_CCP_PWM_Set_Duty+1,___xxtofl@val+1
  7991   0021DC  0100               	movlb	0	; () banked
  7992   0021DE  0E00               	movlw	0
  7993   0021E0  BF85               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  7994   0021E2  0EFF               	movlw	-1
  7995   0021E4  6F86               	movwf	(___xxtofl@val+2)& (0+255),b
  7996   0021E6  6F87               	movwf	(___xxtofl@val+3)& (0+255),b
  7997   0021E8  0E01               	movlw	1
  7998   0021EA  EC42  F00E         	call	___xxtofl
  7999   0021EE  C084  F092         	movff	?___xxtofl,___flmul@b
  8000   0021F2  C085  F093         	movff	?___xxtofl+1,___flmul@b+1
  8001   0021F6  C086  F094         	movff	?___xxtofl+2,___flmul@b+2
  8002   0021FA  C087  F095         	movff	?___xxtofl+3,___flmul@b+3
  8003   0021FE  EC45  F008         	call	___flmul	;wreg free
  8004   002202  C092  F15E         	movff	?___flmul,___fltol@f1
  8005   002206  C093  F15F         	movff	?___flmul+1,___fltol@f1+1
  8006   00220A  C094  F160         	movff	?___flmul+2,___fltol@f1+2
  8007   00220E  C095  F161         	movff	?___flmul+3,___fltol@f1+3
  8008   002212  EC5E  F016         	call	___fltol	;wreg free
  8009   002216  C15E  F16B         	movff	?___fltol,CCP_PWM_Set_Duty@l_duty_temp
  8010   00221A  C15F  F16C         	movff	?___fltol+1,CCP_PWM_Set_Duty@l_duty_temp+1
  8011   00221E                     
  8012                           ;MCAL_Layer/CCP/hal_ccp.c: 254:         if (_ccp_obj->ccp_inst == CCP1_INST)
  8013   00221E  0101               	movlb	1	; () banked
  8014   002220  EE20 F001          	lfsr	2,1
  8015   002224  5166               	movf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),w,b
  8016   002226  26D9               	addwf	fsr2l,f,c
  8017   002228  5167               	movf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),w,b
  8018   00222A  22DA               	addwfc	fsr2h,f,c
  8019   00222C  50DF               	movf	indf2,w,c
  8020   00222E  A4D8               	btfss	status,2,c
  8021   002230  EF1C  F011         	goto	u9971
  8022   002234  EF1E  F011         	goto	u9970
  8023   002238                     u9971:
  8024   002238  EF36  F011         	goto	l9780
  8025   00223C                     u9970:
  8026   00223C                     
  8027                           ; BSR set to: 1
  8028                           ;MCAL_Layer/CCP/hal_ccp.c: 255:         {;MCAL_Layer/CCP/hal_ccp.c: 256:             (*(
      +                          (volatile CCP1CON_t *)(0xFBD))).DC1B = (uint8)(l_duty_temp & 0x03);
  8029   00223C  C16B  F169         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8030   002240  0E03               	movlw	3
  8031   002242  1769               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8032   002244  3B69               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8033   002246  50BD               	movf	189,w,c	;volatile
  8034   002248  1969               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8035   00224A  0BCF               	andlw	-49
  8036   00224C  1969               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8037   00224E  6EBD               	movwf	189,c	;volatile
  8038                           
  8039                           ;MCAL_Layer/CCP/hal_ccp.c: 257:             (*( (volatile uint8 *)(0xFBE) ) ) = (uint8)(
      +                          l_duty_temp >> 2);
  8040   002250  C16B  F169         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8041   002254  C16C  F16A         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  8042   002258  90D8               	bcf	status,0,c
  8043   00225A  336A               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8044   00225C  3369               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8045   00225E  90D8               	bcf	status,0,c
  8046   002260  336A               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8047   002262  3369               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8048   002264  5169               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8049   002266  6EBE               	movwf	190,c	;volatile
  8050                           
  8051                           ;MCAL_Layer/CCP/hal_ccp.c: 259:         }
  8052   002268  EF5A  F011         	goto	l537
  8053   00226C                     l9780:
  8054                           
  8055                           ; BSR set to: 1
  8056   00226C  EE20 F001          	lfsr	2,1
  8057   002270  5166               	movf	CCP_PWM_Set_Duty@_ccp_obj& (0+255),w,b
  8058   002272  26D9               	addwf	fsr2l,f,c
  8059   002274  5167               	movf	(CCP_PWM_Set_Duty@_ccp_obj+1)& (0+255),w,b
  8060   002276  22DA               	addwfc	fsr2h,f,c
  8061   002278  04DE               	decf	postinc2,w,c
  8062   00227A  A4D8               	btfss	status,2,c
  8063   00227C  EF42  F011         	goto	u9981
  8064   002280  EF44  F011         	goto	u9980
  8065   002284                     u9981:
  8066   002284  EFB5  F010         	goto	l9772
  8067   002288                     u9980:
  8068   002288                     
  8069                           ; BSR set to: 1
  8070                           ;MCAL_Layer/CCP/hal_ccp.c: 261:         {;MCAL_Layer/CCP/hal_ccp.c: 262:            (*((
      +                          volatile CCP2CON_t *)(0xFBA))).DC2B = (uint8)(l_duty_temp & 0x03);
  8071   002288  C16B  F169         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8072   00228C  0E03               	movlw	3
  8073   00228E  1769               	andwf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8074   002290  3B69               	swapf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8075   002292  50BA               	movf	186,w,c	;volatile
  8076   002294  1969               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8077   002296  0BCF               	andlw	-49
  8078   002298  1969               	xorwf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8079   00229A  6EBA               	movwf	186,c	;volatile
  8080                           
  8081                           ;MCAL_Layer/CCP/hal_ccp.c: 263:            (*( (volatile uint8 *)(0xFBB) ) ) = (uint8)(l
      +                          _duty_temp >> 2);
  8082   00229C  C16B  F169         	movff	CCP_PWM_Set_Duty@l_duty_temp,??_CCP_PWM_Set_Duty
  8083   0022A0  C16C  F16A         	movff	CCP_PWM_Set_Duty@l_duty_temp+1,??_CCP_PWM_Set_Duty+1
  8084   0022A4  90D8               	bcf	status,0,c
  8085   0022A6  336A               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8086   0022A8  3369               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8087   0022AA  90D8               	bcf	status,0,c
  8088   0022AC  336A               	rrcf	(??_CCP_PWM_Set_Duty+1)& (0+255),f,b
  8089   0022AE  3369               	rrcf	??_CCP_PWM_Set_Duty& (0+255),f,b
  8090   0022B0  5169               	movf	??_CCP_PWM_Set_Duty& (0+255),w,b
  8091   0022B2  6EBB               	movwf	187,c	;volatile
  8092   0022B4                     l537:
  8093                           
  8094                           ; BSR set to: 1
  8095   0022B4  0012               	return		;funcret
  8096   0022B6                     __end_of_CCP_PWM_Set_Duty:
  8097                           	callstack 0
  8098                           
  8099 ;; *************** function ___xxtofl *****************
  8100 ;; Defined at:
  8101 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;  sign            1    wreg     unsigned char 
  8104 ;;  val             4    4[BANK0 ] long 
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;  sign            1   12[BANK0 ] unsigned char 
  8107 ;;  arg             4   14[BANK0 ] unsigned long 
  8108 ;;  exp             1   13[BANK0 ] unsigned char 
  8109 ;; Return value:  Size  Location     Type
  8110 ;;                  4    4[BANK0 ] unsigned char 
  8111 ;; Registers used:
  8112 ;;		wreg, status,2, status,0
  8113 ;; Tracked objects:
  8114 ;;		On entry : 0/0
  8115 ;;		On exit  : 0/0
  8116 ;;		Unchanged: 0/0
  8117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8118 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8121 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8122 ;;Total ram usage:       14 bytes
  8123 ;; Hardware stack levels used: 1
  8124 ;; Hardware stack levels required when called: 8
  8125 ;; This function calls:
  8126 ;;		Nothing
  8127 ;; This function is called by:
  8128 ;;		_CCP_PWM_Set_Duty
  8129 ;;		_Pulse_Meter_Calculate
  8130 ;; This function uses a non-reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text50
  8134   001C84                     __ptext50:
  8135                           	callstack 0
  8136   001C84                     ___xxtofl:
  8137                           	callstack 21
  8138                           
  8139                           ; BSR set to: 1
  8140                           ;incstack = 0
  8141                           ;___xxtofl@sign stored from wreg
  8142   001C84  0100               	movlb	0	; () banked
  8143   001C86  6F8C               	movwf	___xxtofl@sign& (0+255),b
  8144   001C88  0100               	movlb	0	; () banked
  8145   001C8A  518C               	movf	___xxtofl@sign& (0+255),w,b
  8146   001C8C  B4D8               	btfsc	status,2,c
  8147   001C8E  EF4B  F00E         	goto	u9811
  8148   001C92  EF4D  F00E         	goto	u9810
  8149   001C96                     u9811:
  8150   001C96  EF6F  F00E         	goto	l2155
  8151   001C9A                     u9810:
  8152   001C9A                     
  8153                           ; BSR set to: 0
  8154   001C9A  BF87               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  8155   001C9C  EF54  F00E         	goto	u9820
  8156   001CA0  EF52  F00E         	goto	u9821
  8157   001CA4                     u9821:
  8158   001CA4  EF6F  F00E         	goto	l2155
  8159   001CA8                     u9820:
  8160   001CA8                     
  8161                           ; BSR set to: 0
  8162   001CA8  C084  F088         	movff	___xxtofl@val,??___xxtofl
  8163   001CAC  C085  F089         	movff	___xxtofl@val+1,??___xxtofl+1
  8164   001CB0  C086  F08A         	movff	___xxtofl@val+2,??___xxtofl+2
  8165   001CB4  C087  F08B         	movff	___xxtofl@val+3,??___xxtofl+3
  8166   001CB8  1F88               	comf	??___xxtofl& (0+255),f,b
  8167   001CBA  1F89               	comf	(??___xxtofl+1)& (0+255),f,b
  8168   001CBC  1F8A               	comf	(??___xxtofl+2)& (0+255),f,b
  8169   001CBE  1F8B               	comf	(??___xxtofl+3)& (0+255),f,b
  8170   001CC0  2B88               	incf	??___xxtofl& (0+255),f,b
  8171   001CC2  0E00               	movlw	0
  8172   001CC4  2389               	addwfc	(??___xxtofl+1)& (0+255),f,b
  8173   001CC6  238A               	addwfc	(??___xxtofl+2)& (0+255),f,b
  8174   001CC8  238B               	addwfc	(??___xxtofl+3)& (0+255),f,b
  8175   001CCA  C088  F08E         	movff	??___xxtofl,___xxtofl@arg
  8176   001CCE  C089  F08F         	movff	??___xxtofl+1,___xxtofl@arg+1
  8177   001CD2  C08A  F090         	movff	??___xxtofl+2,___xxtofl@arg+2
  8178   001CD6  C08B  F091         	movff	??___xxtofl+3,___xxtofl@arg+3
  8179   001CDA  EF77  F00E         	goto	l9678
  8180   001CDE                     l2155:
  8181                           
  8182                           ; BSR set to: 0
  8183   001CDE  C084  F08E         	movff	___xxtofl@val,___xxtofl@arg
  8184   001CE2  C085  F08F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8185   001CE6  C086  F090         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8186   001CEA  C087  F091         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8187   001CEE                     l9678:
  8188                           
  8189                           ; BSR set to: 0
  8190   001CEE  5184               	movf	___xxtofl@val& (0+255),w,b
  8191   001CF0  1185               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  8192   001CF2  1186               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  8193   001CF4  1187               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  8194   001CF6  A4D8               	btfss	status,2,c
  8195   001CF8  EF80  F00E         	goto	u9831
  8196   001CFC  EF82  F00E         	goto	u9830
  8197   001D00                     u9831:
  8198   001D00  EF8C  F00E         	goto	l9684
  8199   001D04                     u9830:
  8200   001D04                     
  8201                           ; BSR set to: 0
  8202   001D04  0E00               	movlw	0
  8203   001D06  6F84               	movwf	?___xxtofl& (0+255),b
  8204   001D08  0E00               	movlw	0
  8205   001D0A  6F85               	movwf	(?___xxtofl+1)& (0+255),b
  8206   001D0C  0E00               	movlw	0
  8207   001D0E  6F86               	movwf	(?___xxtofl+2)& (0+255),b
  8208   001D10  0E00               	movlw	0
  8209   001D12  6F87               	movwf	(?___xxtofl+3)& (0+255),b
  8210   001D14  EF1D  F00F         	goto	l2158
  8211   001D18                     l9684:
  8212                           
  8213                           ; BSR set to: 0
  8214   001D18  0E96               	movlw	150
  8215   001D1A  6F8D               	movwf	___xxtofl@exp& (0+255),b
  8216   001D1C  EF96  F00E         	goto	l9688
  8217   001D20                     l9686:
  8218                           
  8219                           ; BSR set to: 0
  8220   001D20  2B8D               	incf	___xxtofl@exp& (0+255),f,b
  8221   001D22  90D8               	bcf	status,0,c
  8222   001D24  3391               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8223   001D26  3390               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8224   001D28  338F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8225   001D2A  338E               	rrcf	___xxtofl@arg& (0+255),f,b
  8226   001D2C                     l9688:
  8227                           
  8228                           ; BSR set to: 0
  8229   001D2C  0E00               	movlw	0
  8230   001D2E  158E               	andwf	___xxtofl@arg& (0+255),w,b
  8231   001D30  6F88               	movwf	??___xxtofl& (0+255),b
  8232   001D32  0E00               	movlw	0
  8233   001D34  158F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8234   001D36  6F89               	movwf	(??___xxtofl+1)& (0+255),b
  8235   001D38  0E00               	movlw	0
  8236   001D3A  1590               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8237   001D3C  6F8A               	movwf	(??___xxtofl+2)& (0+255),b
  8238   001D3E  0EFE               	movlw	254
  8239   001D40  1591               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8240   001D42  6F8B               	movwf	(??___xxtofl+3)& (0+255),b
  8241   001D44  5188               	movf	??___xxtofl& (0+255),w,b
  8242   001D46  1189               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8243   001D48  118A               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8244   001D4A  118B               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8245   001D4C  A4D8               	btfss	status,2,c
  8246   001D4E  EFAB  F00E         	goto	u9841
  8247   001D52  EFAD  F00E         	goto	u9840
  8248   001D56                     u9841:
  8249   001D56  EF90  F00E         	goto	l9686
  8250   001D5A                     u9840:
  8251   001D5A  EFBB  F00E         	goto	l2162
  8252   001D5E                     l9690:
  8253                           
  8254                           ; BSR set to: 0
  8255   001D5E  2B8D               	incf	___xxtofl@exp& (0+255),f,b
  8256   001D60                     
  8257                           ; BSR set to: 0
  8258   001D60  0E01               	movlw	1
  8259   001D62  278E               	addwf	___xxtofl@arg& (0+255),f,b
  8260   001D64  0E00               	movlw	0
  8261   001D66  238F               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  8262   001D68  2390               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  8263   001D6A  2391               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  8264   001D6C                     
  8265                           ; BSR set to: 0
  8266   001D6C  90D8               	bcf	status,0,c
  8267   001D6E  3391               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  8268   001D70  3390               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  8269   001D72  338F               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  8270   001D74  338E               	rrcf	___xxtofl@arg& (0+255),f,b
  8271   001D76                     l2162:
  8272                           
  8273                           ; BSR set to: 0
  8274   001D76  0E00               	movlw	0
  8275   001D78  158E               	andwf	___xxtofl@arg& (0+255),w,b
  8276   001D7A  6F88               	movwf	??___xxtofl& (0+255),b
  8277   001D7C  0E00               	movlw	0
  8278   001D7E  158F               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  8279   001D80  6F89               	movwf	(??___xxtofl+1)& (0+255),b
  8280   001D82  0E00               	movlw	0
  8281   001D84  1590               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  8282   001D86  6F8A               	movwf	(??___xxtofl+2)& (0+255),b
  8283   001D88  0EFF               	movlw	255
  8284   001D8A  1591               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  8285   001D8C  6F8B               	movwf	(??___xxtofl+3)& (0+255),b
  8286   001D8E  5188               	movf	??___xxtofl& (0+255),w,b
  8287   001D90  1189               	iorwf	(??___xxtofl+1)& (0+255),w,b
  8288   001D92  118A               	iorwf	(??___xxtofl+2)& (0+255),w,b
  8289   001D94  118B               	iorwf	(??___xxtofl+3)& (0+255),w,b
  8290   001D96  A4D8               	btfss	status,2,c
  8291   001D98  EFD0  F00E         	goto	u9851
  8292   001D9C  EFD2  F00E         	goto	u9850
  8293   001DA0                     u9851:
  8294   001DA0  EFAF  F00E         	goto	l9690
  8295   001DA4                     u9850:
  8296   001DA4  EFDA  F00E         	goto	l9698
  8297   001DA8                     l9696:
  8298                           
  8299                           ; BSR set to: 0
  8300   001DA8  078D               	decf	___xxtofl@exp& (0+255),f,b
  8301   001DAA  90D8               	bcf	status,0,c
  8302   001DAC  378E               	rlcf	___xxtofl@arg& (0+255),f,b
  8303   001DAE  378F               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  8304   001DB0  3790               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  8305   001DB2  3791               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  8306   001DB4                     l9698:
  8307                           
  8308                           ; BSR set to: 0
  8309   001DB4  BF90               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  8310   001DB6  EFDF  F00E         	goto	u9861
  8311   001DBA  EFE1  F00E         	goto	u9860
  8312   001DBE                     u9861:
  8313   001DBE  EFE9  F00E         	goto	l2169
  8314   001DC2                     u9860:
  8315   001DC2                     
  8316                           ; BSR set to: 0
  8317   001DC2  0E02               	movlw	2
  8318   001DC4  618D               	cpfslt	___xxtofl@exp& (0+255),b
  8319   001DC6  EFE7  F00E         	goto	u9871
  8320   001DCA  EFE9  F00E         	goto	u9870
  8321   001DCE                     u9871:
  8322   001DCE  EFD4  F00E         	goto	l9696
  8323   001DD2                     u9870:
  8324   001DD2                     l2169:
  8325                           
  8326                           ; BSR set to: 0
  8327   001DD2  B18D               	btfsc	___xxtofl@exp& (0+255),0,b
  8328   001DD4  EFEE  F00E         	goto	u9881
  8329   001DD8  EFF0  F00E         	goto	u9880
  8330   001DDC                     u9881:
  8331   001DDC  EFF1  F00E         	goto	l9704
  8332   001DE0                     u9880:
  8333   001DE0                     
  8334                           ; BSR set to: 0
  8335   001DE0  9F90               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  8336   001DE2                     l9704:
  8337                           
  8338                           ; BSR set to: 0
  8339   001DE2  90D8               	bcf	status,0,c
  8340   001DE4  338D               	rrcf	___xxtofl@exp& (0+255),f,b
  8341   001DE6                     
  8342                           ; BSR set to: 0
  8343   001DE6  C08D  F088         	movff	___xxtofl@exp,??___xxtofl
  8344   001DEA  6B89               	clrf	(??___xxtofl+1)& (0+255),b
  8345   001DEC  6B8A               	clrf	(??___xxtofl+2)& (0+255),b
  8346   001DEE  6B8B               	clrf	(??___xxtofl+3)& (0+255),b
  8347   001DF0  C088  F08B         	movff	??___xxtofl,??___xxtofl+3
  8348   001DF4  6B8A               	clrf	(??___xxtofl+2)& (0+255),b
  8349   001DF6  6B89               	clrf	(??___xxtofl+1)& (0+255),b
  8350   001DF8  6B88               	clrf	??___xxtofl& (0+255),b
  8351   001DFA  5188               	movf	??___xxtofl& (0+255),w,b
  8352   001DFC  138E               	iorwf	___xxtofl@arg& (0+255),f,b
  8353   001DFE  5189               	movf	(??___xxtofl+1)& (0+255),w,b
  8354   001E00  138F               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  8355   001E02  518A               	movf	(??___xxtofl+2)& (0+255),w,b
  8356   001E04  1390               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  8357   001E06  518B               	movf	(??___xxtofl+3)& (0+255),w,b
  8358   001E08  1391               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  8359   001E0A                     
  8360                           ; BSR set to: 0
  8361   001E0A  518C               	movf	___xxtofl@sign& (0+255),w,b
  8362   001E0C  B4D8               	btfsc	status,2,c
  8363   001E0E  EF0B  F00F         	goto	u9891
  8364   001E12  EF0D  F00F         	goto	u9890
  8365   001E16                     u9891:
  8366   001E16  EF15  F00F         	goto	l9714
  8367   001E1A                     u9890:
  8368   001E1A                     
  8369                           ; BSR set to: 0
  8370   001E1A  BF87               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  8371   001E1C  EF14  F00F         	goto	u9900
  8372   001E20  EF12  F00F         	goto	u9901
  8373   001E24                     u9901:
  8374   001E24  EF15  F00F         	goto	l9714
  8375   001E28                     u9900:
  8376   001E28                     
  8377                           ; BSR set to: 0
  8378   001E28  8F91               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  8379   001E2A                     l9714:
  8380                           
  8381                           ; BSR set to: 0
  8382   001E2A  C08E  F084         	movff	___xxtofl@arg,?___xxtofl
  8383   001E2E  C08F  F085         	movff	___xxtofl@arg+1,?___xxtofl+1
  8384   001E32  C090  F086         	movff	___xxtofl@arg+2,?___xxtofl+2
  8385   001E36  C091  F087         	movff	___xxtofl@arg+3,?___xxtofl+3
  8386   001E3A                     l2158:
  8387                           
  8388                           ; BSR set to: 0
  8389   001E3A  0012               	return		;funcret
  8390   001E3C                     __end_of___xxtofl:
  8391                           	callstack 0
  8392                           
  8393 ;; *************** function ___fltol *****************
  8394 ;; Defined at:
  8395 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  8396 ;; Parameters:    Size  Location     Type
  8397 ;;  f1              4    0[BANK1 ] unsigned char 
  8398 ;; Auto vars:     Size  Location     Type
  8399 ;;  exp1            1   69[BANK0 ] unsigned char 
  8400 ;;  sign1           1   68[BANK0 ] unsigned char 
  8401 ;; Return value:  Size  Location     Type
  8402 ;;                  4    0[BANK1 ] long 
  8403 ;; Registers used:
  8404 ;;		wreg, status,2, status,0
  8405 ;; Tracked objects:
  8406 ;;		On entry : 0/0
  8407 ;;		On exit  : 0/0
  8408 ;;		Unchanged: 0/0
  8409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8410 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8411 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8412 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8413 ;;      Totals:         0       2       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8414 ;;Total ram usage:       10 bytes
  8415 ;; Hardware stack levels used: 1
  8416 ;; Hardware stack levels required when called: 8
  8417 ;; This function calls:
  8418 ;;		Nothing
  8419 ;; This function is called by:
  8420 ;;		_CCP_PWM_Set_Duty
  8421 ;;		_Pulse_Meter_Calculate
  8422 ;; This function uses a non-reentrant model
  8423 ;;
  8424                           
  8425                           	psect	text51
  8426   002CBC                     __ptext51:
  8427                           	callstack 0
  8428   002CBC                     ___fltol:
  8429                           	callstack 21
  8430   002CBC  0101               	movlb	1	; () banked
  8431   002CBE  3560               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8432   002CC0  3561               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8433   002CC2  0100               	movlb	0	; () banked
  8434   002CC4  6FC5               	movwf	___fltol@exp1& (0+255),b
  8435   002CC6  51C5               	movf	___fltol@exp1& (0+255),w,b
  8436   002CC8  A4D8               	btfss	status,2,c
  8437   002CCA  EF69  F016         	goto	u9741
  8438   002CCE  EF6B  F016         	goto	u9740
  8439   002CD2                     u9741:
  8440   002CD2  EF76  F016         	goto	l9634
  8441   002CD6                     u9740:
  8442   002CD6                     l9630:
  8443                           
  8444                           ; BSR set to: 0
  8445   002CD6  0E00               	movlw	0
  8446   002CD8  0101               	movlb	1	; () banked
  8447   002CDA  6F5E               	movwf	?___fltol& (0+255),b
  8448   002CDC  0E00               	movlw	0
  8449   002CDE  6F5F               	movwf	(?___fltol+1)& (0+255),b
  8450   002CE0  0E00               	movlw	0
  8451   002CE2  6F60               	movwf	(?___fltol+2)& (0+255),b
  8452   002CE4  0E00               	movlw	0
  8453   002CE6  6F61               	movwf	(?___fltol+3)& (0+255),b
  8454   002CE8  EFEC  F016         	goto	l1797
  8455   002CEC                     l9634:
  8456                           
  8457                           ; BSR set to: 0
  8458   002CEC  C15E  F162         	movff	___fltol@f1,??___fltol
  8459   002CF0  C15F  F163         	movff	___fltol@f1+1,??___fltol+1
  8460   002CF4  C160  F164         	movff	___fltol@f1+2,??___fltol+2
  8461   002CF8  C161  F165         	movff	___fltol@f1+3,??___fltol+3
  8462   002CFC  0E20               	movlw	32
  8463   002CFE  EF87  F016         	goto	u9750
  8464   002D02                     u9755:
  8465   002D02  0101               	movlb	1	; () banked
  8466   002D04  90D8               	bcf	status,0,c
  8467   002D06  3365               	rrcf	(??___fltol+3)& (0+255),f,b
  8468   002D08  3364               	rrcf	(??___fltol+2)& (0+255),f,b
  8469   002D0A  3363               	rrcf	(??___fltol+1)& (0+255),f,b
  8470   002D0C  3362               	rrcf	??___fltol& (0+255),f,b
  8471   002D0E                     u9750:
  8472   002D0E  2EE8               	decfsz	wreg,f,c
  8473   002D10  EF81  F016         	goto	u9755
  8474   002D14  5162               	movf	??___fltol& (0+255),w,b
  8475   002D16  0100               	movlb	0	; () banked
  8476   002D18  6FC4               	movwf	___fltol@sign1& (0+255),b
  8477   002D1A                     
  8478                           ; BSR set to: 0
  8479   002D1A  0101               	movlb	1	; () banked
  8480   002D1C  8F60               	bsf	(___fltol@f1+2)& (0+255),7,b
  8481   002D1E                     
  8482                           ; BSR set to: 1
  8483   002D1E  0EFF               	movlw	255
  8484   002D20  175E               	andwf	___fltol@f1& (0+255),f,b
  8485   002D22  0EFF               	movlw	255
  8486   002D24  175F               	andwf	(___fltol@f1+1)& (0+255),f,b
  8487   002D26  0EFF               	movlw	255
  8488   002D28  1760               	andwf	(___fltol@f1+2)& (0+255),f,b
  8489   002D2A  0E00               	movlw	0
  8490   002D2C  1761               	andwf	(___fltol@f1+3)& (0+255),f,b
  8491   002D2E                     
  8492                           ; BSR set to: 1
  8493   002D2E  0E96               	movlw	150
  8494   002D30  0100               	movlb	0	; () banked
  8495   002D32  5FC5               	subwf	___fltol@exp1& (0+255),f,b
  8496   002D34                     
  8497                           ; BSR set to: 0
  8498   002D34  BFC5               	btfsc	___fltol@exp1& (0+255),7,b
  8499   002D36  EFA1  F016         	goto	u9760
  8500   002D3A  EF9F  F016         	goto	u9761
  8501   002D3E                     u9761:
  8502   002D3E  EFB9  F016         	goto	l9654
  8503   002D42                     u9760:
  8504   002D42                     
  8505                           ; BSR set to: 0
  8506   002D42  51C5               	movf	___fltol@exp1& (0+255),w,b
  8507   002D44  0A80               	xorlw	128
  8508   002D46  0F97               	addlw	151
  8509   002D48  B0D8               	btfsc	status,0,c
  8510   002D4A  EFA9  F016         	goto	u9771
  8511   002D4E  EFAB  F016         	goto	u9770
  8512   002D52                     u9771:
  8513   002D52  EFAD  F016         	goto	l9650
  8514   002D56                     u9770:
  8515   002D56  EF6B  F016         	goto	l9630
  8516   002D5A                     l9650:
  8517                           
  8518                           ; BSR set to: 0
  8519   002D5A  0101               	movlb	1	; () banked
  8520   002D5C  90D8               	bcf	status,0,c
  8521   002D5E  3361               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8522   002D60  3360               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8523   002D62  335F               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8524   002D64  335E               	rrcf	___fltol@f1& (0+255),f,b
  8525   002D66                     
  8526                           ; BSR set to: 1
  8527   002D66  0100               	movlb	0	; () banked
  8528   002D68  3FC5               	incfsz	___fltol@exp1& (0+255),f,b
  8529   002D6A  EFAD  F016         	goto	l9650
  8530   002D6E  EFD3  F016         	goto	l9664
  8531   002D72                     l9654:
  8532                           
  8533                           ; BSR set to: 0
  8534   002D72  0E1F               	movlw	31
  8535   002D74  65C5               	cpfsgt	___fltol@exp1& (0+255),b
  8536   002D76  EFBF  F016         	goto	u9781
  8537   002D7A  EFC1  F016         	goto	u9780
  8538   002D7E                     u9781:
  8539   002D7E  EFCB  F016         	goto	l9662
  8540   002D82                     u9780:
  8541   002D82  EF6B  F016         	goto	l9630
  8542   002D86                     l9660:
  8543                           
  8544                           ; BSR set to: 0
  8545   002D86  0101               	movlb	1	; () banked
  8546   002D88  90D8               	bcf	status,0,c
  8547   002D8A  375E               	rlcf	___fltol@f1& (0+255),f,b
  8548   002D8C  375F               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8549   002D8E  3760               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8550   002D90  3761               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8551   002D92  0100               	movlb	0	; () banked
  8552   002D94  07C5               	decf	___fltol@exp1& (0+255),f,b
  8553   002D96                     l9662:
  8554                           
  8555                           ; BSR set to: 0
  8556   002D96  51C5               	movf	___fltol@exp1& (0+255),w,b
  8557   002D98  A4D8               	btfss	status,2,c
  8558   002D9A  EFD1  F016         	goto	u9791
  8559   002D9E  EFD3  F016         	goto	u9790
  8560   002DA2                     u9791:
  8561   002DA2  EFC3  F016         	goto	l9660
  8562   002DA6                     u9790:
  8563   002DA6                     l9664:
  8564                           
  8565                           ; BSR set to: 0
  8566   002DA6  51C4               	movf	___fltol@sign1& (0+255),w,b
  8567   002DA8  B4D8               	btfsc	status,2,c
  8568   002DAA  EFD9  F016         	goto	u9801
  8569   002DAE  EFDB  F016         	goto	u9800
  8570   002DB2                     u9801:
  8571   002DB2  EFE4  F016         	goto	l9668
  8572   002DB6                     u9800:
  8573   002DB6                     
  8574                           ; BSR set to: 0
  8575   002DB6  0101               	movlb	1	; () banked
  8576   002DB8  1F61               	comf	(___fltol@f1+3)& (0+255),f,b
  8577   002DBA  1F60               	comf	(___fltol@f1+2)& (0+255),f,b
  8578   002DBC  1F5F               	comf	(___fltol@f1+1)& (0+255),f,b
  8579   002DBE  6D5E               	negf	___fltol@f1& (0+255),b
  8580   002DC0  0E00               	movlw	0
  8581   002DC2  235F               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8582   002DC4  2360               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8583   002DC6  2361               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8584   002DC8                     l9668:
  8585   002DC8  C15E  F15E         	movff	___fltol@f1,?___fltol
  8586   002DCC  C15F  F15F         	movff	___fltol@f1+1,?___fltol+1
  8587   002DD0  C160  F160         	movff	___fltol@f1+2,?___fltol+2
  8588   002DD4  C161  F161         	movff	___fltol@f1+3,?___fltol+3
  8589   002DD8                     l1797:
  8590   002DD8  0012               	return		;funcret
  8591   002DDA                     __end_of___fltol:
  8592                           	callstack 0
  8593                           
  8594 ;; *************** function ___flmul *****************
  8595 ;; Defined at:
  8596 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  8597 ;; Parameters:    Size  Location     Type
  8598 ;;  b               4   18[BANK0 ] long 
  8599 ;;  a               4   22[BANK0 ] long 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  prod            4   37[BANK0 ] struct .
  8602 ;;  grs             4   32[BANK0 ] unsigned long 
  8603 ;;  temp            2   41[BANK0 ] struct .
  8604 ;;  bexp            1   36[BANK0 ] unsigned char 
  8605 ;;  aexp            1   31[BANK0 ] unsigned char 
  8606 ;;  sign            1   30[BANK0 ] unsigned char 
  8607 ;; Return value:  Size  Location     Type
  8608 ;;                  4   18[BANK0 ] unsigned char 
  8609 ;; Registers used:
  8610 ;;		wreg, status,2, status,0, prodl, prodh
  8611 ;; Tracked objects:
  8612 ;;		On entry : 0/0
  8613 ;;		On exit  : 0/0
  8614 ;;		Unchanged: 0/0
  8615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8616 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8620 ;;Total ram usage:       25 bytes
  8621 ;; Hardware stack levels used: 1
  8622 ;; Hardware stack levels required when called: 8
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_CCP_PWM_Set_Duty
  8627 ;;		_Pulse_Meter_Calculate
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           	psect	text52
  8632   00108A                     __ptext52:
  8633                           	callstack 0
  8634   00108A                     ___flmul:
  8635                           	callstack 21
  8636   00108A  0100               	movlb	0	; () banked
  8637   00108C  5195               	movf	(___flmul@b+3)& (0+255),w,b
  8638   00108E  0B80               	andlw	128
  8639   001090  6F9E               	movwf	___flmul@sign& (0+255),b
  8640   001092  5195               	movf	(___flmul@b+3)& (0+255),w,b
  8641   001094  2595               	addwf	(___flmul@b+3)& (0+255),w,b
  8642   001096  6FA4               	movwf	___flmul@bexp& (0+255),b
  8643   001098                     
  8644                           ; BSR set to: 0
  8645   001098  AF94               	btfss	(___flmul@b+2)& (0+255),7,b
  8646   00109A  EF51  F008         	goto	u9551
  8647   00109E  EF53  F008         	goto	u9550
  8648   0010A2                     u9551:
  8649   0010A2  EF54  F008         	goto	l9504
  8650   0010A6                     u9550:
  8651   0010A6                     
  8652                           ; BSR set to: 0
  8653   0010A6  81A4               	bsf	___flmul@bexp& (0+255),0,b
  8654   0010A8                     l9504:
  8655                           
  8656                           ; BSR set to: 0
  8657   0010A8  51A4               	movf	___flmul@bexp& (0+255),w,b
  8658   0010AA  B4D8               	btfsc	status,2,c
  8659   0010AC  EF5A  F008         	goto	u9561
  8660   0010B0  EF5C  F008         	goto	u9560
  8661   0010B4                     u9561:
  8662   0010B4  EF6F  F008         	goto	l9512
  8663   0010B8                     u9560:
  8664   0010B8                     
  8665                           ; BSR set to: 0
  8666   0010B8  29A4               	incf	___flmul@bexp& (0+255),w,b
  8667   0010BA  A4D8               	btfss	status,2,c
  8668   0010BC  EF62  F008         	goto	u9571
  8669   0010C0  EF64  F008         	goto	u9570
  8670   0010C4                     u9571:
  8671   0010C4  EF6C  F008         	goto	l9510
  8672   0010C8                     u9570:
  8673   0010C8                     
  8674                           ; BSR set to: 0
  8675   0010C8  0E00               	movlw	0
  8676   0010CA  6F92               	movwf	___flmul@b& (0+255),b
  8677   0010CC  0E00               	movlw	0
  8678   0010CE  6F93               	movwf	(___flmul@b+1)& (0+255),b
  8679   0010D0  0E00               	movlw	0
  8680   0010D2  6F94               	movwf	(___flmul@b+2)& (0+255),b
  8681   0010D4  0E00               	movlw	0
  8682   0010D6  6F95               	movwf	(___flmul@b+3)& (0+255),b
  8683   0010D8                     l9510:
  8684                           
  8685                           ; BSR set to: 0
  8686   0010D8  8F94               	bsf	(___flmul@b+2)& (0+255),7,b
  8687   0010DA  EF77  F008         	goto	l9514
  8688   0010DE                     l9512:
  8689                           
  8690                           ; BSR set to: 0
  8691   0010DE  0E00               	movlw	0
  8692   0010E0  6F92               	movwf	___flmul@b& (0+255),b
  8693   0010E2  0E00               	movlw	0
  8694   0010E4  6F93               	movwf	(___flmul@b+1)& (0+255),b
  8695   0010E6  0E00               	movlw	0
  8696   0010E8  6F94               	movwf	(___flmul@b+2)& (0+255),b
  8697   0010EA  0E00               	movlw	0
  8698   0010EC  6F95               	movwf	(___flmul@b+3)& (0+255),b
  8699   0010EE                     l9514:
  8700                           
  8701                           ; BSR set to: 0
  8702   0010EE  5199               	movf	(___flmul@a+3)& (0+255),w,b
  8703   0010F0  0B80               	andlw	128
  8704   0010F2  1B9E               	xorwf	___flmul@sign& (0+255),f,b
  8705   0010F4                     
  8706                           ; BSR set to: 0
  8707   0010F4  5199               	movf	(___flmul@a+3)& (0+255),w,b
  8708   0010F6  2599               	addwf	(___flmul@a+3)& (0+255),w,b
  8709   0010F8  6F9F               	movwf	___flmul@aexp& (0+255),b
  8710   0010FA                     
  8711                           ; BSR set to: 0
  8712   0010FA  AF98               	btfss	(___flmul@a+2)& (0+255),7,b
  8713   0010FC  EF82  F008         	goto	u9581
  8714   001100  EF84  F008         	goto	u9580
  8715   001104                     u9581:
  8716   001104  EF85  F008         	goto	l9522
  8717   001108                     u9580:
  8718   001108                     
  8719                           ; BSR set to: 0
  8720   001108  819F               	bsf	___flmul@aexp& (0+255),0,b
  8721   00110A                     l9522:
  8722                           
  8723                           ; BSR set to: 0
  8724   00110A  519F               	movf	___flmul@aexp& (0+255),w,b
  8725   00110C  B4D8               	btfsc	status,2,c
  8726   00110E  EF8B  F008         	goto	u9591
  8727   001112  EF8D  F008         	goto	u9590
  8728   001116                     u9591:
  8729   001116  EFA0  F008         	goto	l9530
  8730   00111A                     u9590:
  8731   00111A                     
  8732                           ; BSR set to: 0
  8733   00111A  299F               	incf	___flmul@aexp& (0+255),w,b
  8734   00111C  A4D8               	btfss	status,2,c
  8735   00111E  EF93  F008         	goto	u9601
  8736   001122  EF95  F008         	goto	u9600
  8737   001126                     u9601:
  8738   001126  EF9D  F008         	goto	l9528
  8739   00112A                     u9600:
  8740   00112A                     
  8741                           ; BSR set to: 0
  8742   00112A  0E00               	movlw	0
  8743   00112C  6F96               	movwf	___flmul@a& (0+255),b
  8744   00112E  0E00               	movlw	0
  8745   001130  6F97               	movwf	(___flmul@a+1)& (0+255),b
  8746   001132  0E00               	movlw	0
  8747   001134  6F98               	movwf	(___flmul@a+2)& (0+255),b
  8748   001136  0E00               	movlw	0
  8749   001138  6F99               	movwf	(___flmul@a+3)& (0+255),b
  8750   00113A                     l9528:
  8751                           
  8752                           ; BSR set to: 0
  8753   00113A  8F98               	bsf	(___flmul@a+2)& (0+255),7,b
  8754   00113C  EFA8  F008         	goto	l2114
  8755   001140                     l9530:
  8756                           
  8757                           ; BSR set to: 0
  8758   001140  0E00               	movlw	0
  8759   001142  6F96               	movwf	___flmul@a& (0+255),b
  8760   001144  0E00               	movlw	0
  8761   001146  6F97               	movwf	(___flmul@a+1)& (0+255),b
  8762   001148  0E00               	movlw	0
  8763   00114A  6F98               	movwf	(___flmul@a+2)& (0+255),b
  8764   00114C  0E00               	movlw	0
  8765   00114E  6F99               	movwf	(___flmul@a+3)& (0+255),b
  8766   001150                     l2114:
  8767                           
  8768                           ; BSR set to: 0
  8769   001150  519F               	movf	___flmul@aexp& (0+255),w,b
  8770   001152  B4D8               	btfsc	status,2,c
  8771   001154  EFAE  F008         	goto	u9611
  8772   001158  EFB0  F008         	goto	u9610
  8773   00115C                     u9611:
  8774   00115C  EFB8  F008         	goto	l9534
  8775   001160                     u9610:
  8776   001160                     
  8777                           ; BSR set to: 0
  8778   001160  51A4               	movf	___flmul@bexp& (0+255),w,b
  8779   001162  A4D8               	btfss	status,2,c
  8780   001164  EFB6  F008         	goto	u9621
  8781   001168  EFB8  F008         	goto	u9620
  8782   00116C                     u9621:
  8783   00116C  EFC2  F008         	goto	l9538
  8784   001170                     u9620:
  8785   001170                     l9534:
  8786                           
  8787                           ; BSR set to: 0
  8788   001170  0E00               	movlw	0
  8789   001172  6F92               	movwf	?___flmul& (0+255),b
  8790   001174  0E00               	movlw	0
  8791   001176  6F93               	movwf	(?___flmul+1)& (0+255),b
  8792   001178  0E00               	movlw	0
  8793   00117A  6F94               	movwf	(?___flmul+2)& (0+255),b
  8794   00117C  0E00               	movlw	0
  8795   00117E  6F95               	movwf	(?___flmul+3)& (0+255),b
  8796   001180  EF5A  F00A         	goto	l2118
  8797   001184                     l9538:
  8798                           
  8799                           ; BSR set to: 0
  8800   001184  5198               	movf	(___flmul@a+2)& (0+255),w,b
  8801   001186  0392               	mulwf	___flmul@b& (0+255),b
  8802   001188  CFF3 F0A9          	movff	prodl,___flmul@temp
  8803   00118C  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8804   001190                     
  8805                           ; BSR set to: 0
  8806   001190  51A9               	movf	___flmul@temp& (0+255),w,b
  8807   001192  6FA0               	movwf	___flmul@grs& (0+255),b
  8808   001194  6BA1               	clrf	(___flmul@grs+1)& (0+255),b
  8809   001196  6BA2               	clrf	(___flmul@grs+2)& (0+255),b
  8810   001198  6BA3               	clrf	(___flmul@grs+3)& (0+255),b
  8811   00119A                     
  8812                           ; BSR set to: 0
  8813   00119A  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8814   00119C  6FA5               	movwf	___flmul@prod& (0+255),b
  8815   00119E  6BA6               	clrf	(___flmul@prod+1)& (0+255),b
  8816   0011A0  6BA7               	clrf	(___flmul@prod+2)& (0+255),b
  8817   0011A2  6BA8               	clrf	(___flmul@prod+3)& (0+255),b
  8818   0011A4  5197               	movf	(___flmul@a+1)& (0+255),w,b
  8819   0011A6  0393               	mulwf	(___flmul@b+1)& (0+255),b
  8820   0011A8  CFF3 F0A9          	movff	prodl,___flmul@temp
  8821   0011AC  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8822   0011B0                     
  8823                           ; BSR set to: 0
  8824   0011B0  51A9               	movf	___flmul@temp& (0+255),w,b
  8825   0011B2  27A0               	addwf	___flmul@grs& (0+255),f,b
  8826   0011B4  0E00               	movlw	0
  8827   0011B6  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8828   0011B8  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8829   0011BA  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8830   0011BC                     
  8831                           ; BSR set to: 0
  8832   0011BC  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8833   0011BE  27A5               	addwf	___flmul@prod& (0+255),f,b
  8834   0011C0  0E00               	movlw	0
  8835   0011C2  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8836   0011C4  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8837   0011C6  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8838   0011C8  5196               	movf	___flmul@a& (0+255),w,b
  8839   0011CA  0394               	mulwf	(___flmul@b+2)& (0+255),b
  8840   0011CC  CFF3 F0A9          	movff	prodl,___flmul@temp
  8841   0011D0  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8842   0011D4                     
  8843                           ; BSR set to: 0
  8844   0011D4  51A9               	movf	___flmul@temp& (0+255),w,b
  8845   0011D6  27A0               	addwf	___flmul@grs& (0+255),f,b
  8846   0011D8  0E00               	movlw	0
  8847   0011DA  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8848   0011DC  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8849   0011DE  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8850   0011E0                     
  8851                           ; BSR set to: 0
  8852   0011E0  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8853   0011E2  27A5               	addwf	___flmul@prod& (0+255),f,b
  8854   0011E4  0E00               	movlw	0
  8855   0011E6  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8856   0011E8  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8857   0011EA  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8858   0011EC                     
  8859                           ; BSR set to: 0
  8860   0011EC  C0A2  F0A3         	movff	___flmul@grs+2,___flmul@grs+3
  8861   0011F0  C0A1  F0A2         	movff	___flmul@grs+1,___flmul@grs+2
  8862   0011F4  C0A0  F0A1         	movff	___flmul@grs,___flmul@grs+1
  8863   0011F8  6BA0               	clrf	___flmul@grs& (0+255),b
  8864   0011FA                     
  8865                           ; BSR set to: 0
  8866   0011FA  5196               	movf	___flmul@a& (0+255),w,b
  8867   0011FC  0393               	mulwf	(___flmul@b+1)& (0+255),b
  8868   0011FE  CFF3 F0A9          	movff	prodl,___flmul@temp
  8869   001202  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8870   001206                     
  8871                           ; BSR set to: 0
  8872   001206  51A9               	movf	___flmul@temp& (0+255),w,b
  8873   001208  27A0               	addwf	___flmul@grs& (0+255),f,b
  8874   00120A  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8875   00120C  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8876   00120E  0E00               	movlw	0
  8877   001210  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8878   001212  0E00               	movlw	0
  8879   001214  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8880   001216                     
  8881                           ; BSR set to: 0
  8882   001216  5197               	movf	(___flmul@a+1)& (0+255),w,b
  8883   001218  0392               	mulwf	___flmul@b& (0+255),b
  8884   00121A  CFF3 F0A9          	movff	prodl,___flmul@temp
  8885   00121E  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8886   001222                     
  8887                           ; BSR set to: 0
  8888   001222  51A9               	movf	___flmul@temp& (0+255),w,b
  8889   001224  27A0               	addwf	___flmul@grs& (0+255),f,b
  8890   001226  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8891   001228  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8892   00122A  0E00               	movlw	0
  8893   00122C  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8894   00122E  0E00               	movlw	0
  8895   001230  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8896   001232                     
  8897                           ; BSR set to: 0
  8898   001232  C0A2  F0A3         	movff	___flmul@grs+2,___flmul@grs+3
  8899   001236  C0A1  F0A2         	movff	___flmul@grs+1,___flmul@grs+2
  8900   00123A  C0A0  F0A1         	movff	___flmul@grs,___flmul@grs+1
  8901   00123E  6BA0               	clrf	___flmul@grs& (0+255),b
  8902   001240  5196               	movf	___flmul@a& (0+255),w,b
  8903   001242  0392               	mulwf	___flmul@b& (0+255),b
  8904   001244  CFF3 F0A9          	movff	prodl,___flmul@temp
  8905   001248  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8906   00124C                     
  8907                           ; BSR set to: 0
  8908   00124C  51A9               	movf	___flmul@temp& (0+255),w,b
  8909   00124E  27A0               	addwf	___flmul@grs& (0+255),f,b
  8910   001250  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8911   001252  23A1               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8912   001254  0E00               	movlw	0
  8913   001256  23A2               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8914   001258  0E00               	movlw	0
  8915   00125A  23A3               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8916   00125C                     
  8917                           ; BSR set to: 0
  8918   00125C  5198               	movf	(___flmul@a+2)& (0+255),w,b
  8919   00125E  0393               	mulwf	(___flmul@b+1)& (0+255),b
  8920   001260  CFF3 F0A9          	movff	prodl,___flmul@temp
  8921   001264  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8922   001268  51A9               	movf	___flmul@temp& (0+255),w,b
  8923   00126A  27A5               	addwf	___flmul@prod& (0+255),f,b
  8924   00126C  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8925   00126E  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8926   001270  0E00               	movlw	0
  8927   001272  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8928   001274  0E00               	movlw	0
  8929   001276  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8930   001278                     
  8931                           ; BSR set to: 0
  8932   001278  5197               	movf	(___flmul@a+1)& (0+255),w,b
  8933   00127A  0394               	mulwf	(___flmul@b+2)& (0+255),b
  8934   00127C  CFF3 F0A9          	movff	prodl,___flmul@temp
  8935   001280  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8936   001284                     
  8937                           ; BSR set to: 0
  8938   001284  51A9               	movf	___flmul@temp& (0+255),w,b
  8939   001286  27A5               	addwf	___flmul@prod& (0+255),f,b
  8940   001288  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8941   00128A  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8942   00128C  0E00               	movlw	0
  8943   00128E  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8944   001290  0E00               	movlw	0
  8945   001292  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8946   001294  5198               	movf	(___flmul@a+2)& (0+255),w,b
  8947   001296  0394               	mulwf	(___flmul@b+2)& (0+255),b
  8948   001298  CFF3 F0A9          	movff	prodl,___flmul@temp
  8949   00129C  CFF4 F0AA          	movff	prodh,___flmul@temp+1
  8950   0012A0                     
  8951                           ; BSR set to: 0
  8952   0012A0  51A9               	movf	___flmul@temp& (0+255),w,b
  8953   0012A2  6F9A               	movwf	??___flmul& (0+255),b
  8954   0012A4  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  8955   0012A6  6F9B               	movwf	(??___flmul+1)& (0+255),b
  8956   0012A8  6B9C               	clrf	(??___flmul+2)& (0+255),b
  8957   0012AA  6B9D               	clrf	(??___flmul+3)& (0+255),b
  8958   0012AC  C09C  F09D         	movff	??___flmul+2,??___flmul+3
  8959   0012B0  C09B  F09C         	movff	??___flmul+1,??___flmul+2
  8960   0012B4  C09A  F09B         	movff	??___flmul,??___flmul+1
  8961   0012B8  6B9A               	clrf	??___flmul& (0+255),b
  8962   0012BA  519A               	movf	??___flmul& (0+255),w,b
  8963   0012BC  27A5               	addwf	___flmul@prod& (0+255),f,b
  8964   0012BE  519B               	movf	(??___flmul+1)& (0+255),w,b
  8965   0012C0  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8966   0012C2  519C               	movf	(??___flmul+2)& (0+255),w,b
  8967   0012C4  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8968   0012C6  519D               	movf	(??___flmul+3)& (0+255),w,b
  8969   0012C8  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8970   0012CA                     
  8971                           ; BSR set to: 0
  8972   0012CA  C0A0  F09A         	movff	___flmul@grs,??___flmul
  8973   0012CE  C0A1  F09B         	movff	___flmul@grs+1,??___flmul+1
  8974   0012D2  C0A2  F09C         	movff	___flmul@grs+2,??___flmul+2
  8975   0012D6  C0A3  F09D         	movff	___flmul@grs+3,??___flmul+3
  8976   0012DA  0E19               	movlw	25
  8977   0012DC  EF75  F009         	goto	u9630
  8978   0012E0                     u9635:
  8979   0012E0  90D8               	bcf	status,0,c
  8980   0012E2  339D               	rrcf	(??___flmul+3)& (0+255),f,b
  8981   0012E4  339C               	rrcf	(??___flmul+2)& (0+255),f,b
  8982   0012E6  339B               	rrcf	(??___flmul+1)& (0+255),f,b
  8983   0012E8  339A               	rrcf	??___flmul& (0+255),f,b
  8984   0012EA                     u9630:
  8985   0012EA  2EE8               	decfsz	wreg,f,c
  8986   0012EC  EF70  F009         	goto	u9635
  8987   0012F0  519A               	movf	??___flmul& (0+255),w,b
  8988   0012F2  27A5               	addwf	___flmul@prod& (0+255),f,b
  8989   0012F4  519B               	movf	(??___flmul+1)& (0+255),w,b
  8990   0012F6  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8991   0012F8  519C               	movf	(??___flmul+2)& (0+255),w,b
  8992   0012FA  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8993   0012FC  519D               	movf	(??___flmul+3)& (0+255),w,b
  8994   0012FE  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8995   001300                     
  8996                           ; BSR set to: 0
  8997   001300  C0A2  F0A3         	movff	___flmul@grs+2,___flmul@grs+3
  8998   001304  C0A1  F0A2         	movff	___flmul@grs+1,___flmul@grs+2
  8999   001308  C0A0  F0A1         	movff	___flmul@grs,___flmul@grs+1
  9000   00130C  6BA0               	clrf	___flmul@grs& (0+255),b
  9001   00130E                     
  9002                           ; BSR set to: 0
  9003   00130E  519F               	movf	___flmul@aexp& (0+255),w,b
  9004   001310  C0A4  F09A         	movff	___flmul@bexp,??___flmul
  9005   001314  6B9B               	clrf	(??___flmul+1)& (0+255),b
  9006   001316  279A               	addwf	??___flmul& (0+255),f,b
  9007   001318  0E00               	movlw	0
  9008   00131A  239B               	addwfc	(??___flmul+1)& (0+255),f,b
  9009   00131C  0E82               	movlw	130
  9010   00131E  259A               	addwf	??___flmul& (0+255),w,b
  9011   001320  6FA9               	movwf	___flmul@temp& (0+255),b
  9012   001322  0EFF               	movlw	255
  9013   001324  219B               	addwfc	(??___flmul+1)& (0+255),w,b
  9014   001326  6FAA               	movwf	(___flmul@temp+1)& (0+255),b
  9015   001328  EFAB  F009         	goto	l9586
  9016   00132C                     l9580:
  9017                           
  9018                           ; BSR set to: 0
  9019   00132C  90D8               	bcf	status,0,c
  9020   00132E  37A5               	rlcf	___flmul@prod& (0+255),f,b
  9021   001330  37A6               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9022   001332  37A7               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9023   001334  37A8               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9024   001336                     
  9025                           ; BSR set to: 0
  9026   001336  AFA3               	btfss	(___flmul@grs+3)& (0+255),7,b
  9027   001338  EFA0  F009         	goto	u9641
  9028   00133C  EFA2  F009         	goto	u9640
  9029   001340                     u9641:
  9030   001340  EFA3  F009         	goto	l2121
  9031   001344                     u9640:
  9032   001344                     
  9033                           ; BSR set to: 0
  9034   001344  81A5               	bsf	___flmul@prod& (0+255),0,b
  9035   001346                     l2121:
  9036                           
  9037                           ; BSR set to: 0
  9038   001346  90D8               	bcf	status,0,c
  9039   001348  37A0               	rlcf	___flmul@grs& (0+255),f,b
  9040   00134A  37A1               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9041   00134C  37A2               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9042   00134E  37A3               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9043   001350  07A9               	decf	___flmul@temp& (0+255),f,b
  9044   001352  A0D8               	btfss	status,0,c
  9045   001354  07AA               	decf	(___flmul@temp+1)& (0+255),f,b
  9046   001356                     l9586:
  9047                           
  9048                           ; BSR set to: 0
  9049   001356  AFA7               	btfss	(___flmul@prod+2)& (0+255),7,b
  9050   001358  EFB0  F009         	goto	u9651
  9051   00135C  EFB2  F009         	goto	u9650
  9052   001360                     u9651:
  9053   001360  EF96  F009         	goto	l9580
  9054   001364                     u9650:
  9055   001364                     
  9056                           ; BSR set to: 0
  9057   001364  0E00               	movlw	0
  9058   001366  6F9F               	movwf	___flmul@aexp& (0+255),b
  9059   001368                     
  9060                           ; BSR set to: 0
  9061   001368  AFA3               	btfss	(___flmul@grs+3)& (0+255),7,b
  9062   00136A  EFB9  F009         	goto	u9661
  9063   00136E  EFBB  F009         	goto	u9660
  9064   001372                     u9661:
  9065   001372  EFDF  F009         	goto	l2123
  9066   001376                     u9660:
  9067   001376                     
  9068                           ; BSR set to: 0
  9069   001376  0EFF               	movlw	255
  9070   001378  15A0               	andwf	___flmul@grs& (0+255),w,b
  9071   00137A  6F9A               	movwf	??___flmul& (0+255),b
  9072   00137C  0EFF               	movlw	255
  9073   00137E  15A1               	andwf	(___flmul@grs+1)& (0+255),w,b
  9074   001380  6F9B               	movwf	(??___flmul+1)& (0+255),b
  9075   001382  0EFF               	movlw	255
  9076   001384  15A2               	andwf	(___flmul@grs+2)& (0+255),w,b
  9077   001386  6F9C               	movwf	(??___flmul+2)& (0+255),b
  9078   001388  0E7F               	movlw	127
  9079   00138A  15A3               	andwf	(___flmul@grs+3)& (0+255),w,b
  9080   00138C  6F9D               	movwf	(??___flmul+3)& (0+255),b
  9081   00138E  519A               	movf	??___flmul& (0+255),w,b
  9082   001390  119B               	iorwf	(??___flmul+1)& (0+255),w,b
  9083   001392  119C               	iorwf	(??___flmul+2)& (0+255),w,b
  9084   001394  119D               	iorwf	(??___flmul+3)& (0+255),w,b
  9085   001396  B4D8               	btfsc	status,2,c
  9086   001398  EFD0  F009         	goto	u9671
  9087   00139C  EFD2  F009         	goto	u9670
  9088   0013A0                     u9671:
  9089   0013A0  EFD6  F009         	goto	l2124
  9090   0013A4                     u9670:
  9091   0013A4                     l9594:
  9092                           
  9093                           ; BSR set to: 0
  9094   0013A4  0E01               	movlw	1
  9095   0013A6  6F9F               	movwf	___flmul@aexp& (0+255),b
  9096   0013A8  EFDF  F009         	goto	l2123
  9097   0013AC                     l2124:
  9098                           
  9099                           ; BSR set to: 0
  9100   0013AC  A1A5               	btfss	___flmul@prod& (0+255),0,b
  9101   0013AE  EFDB  F009         	goto	u9681
  9102   0013B2  EFDD  F009         	goto	u9680
  9103   0013B6                     u9681:
  9104   0013B6  EFDF  F009         	goto	l2123
  9105   0013BA                     u9680:
  9106   0013BA  EFD2  F009         	goto	l9594
  9107   0013BE                     l2123:
  9108                           
  9109                           ; BSR set to: 0
  9110   0013BE  519F               	movf	___flmul@aexp& (0+255),w,b
  9111   0013C0  B4D8               	btfsc	status,2,c
  9112   0013C2  EFE5  F009         	goto	u9691
  9113   0013C6  EFE7  F009         	goto	u9690
  9114   0013CA                     u9691:
  9115   0013CA  EF0B  F00A         	goto	l9606
  9116   0013CE                     u9690:
  9117   0013CE                     
  9118                           ; BSR set to: 0
  9119   0013CE  0E01               	movlw	1
  9120   0013D0  27A5               	addwf	___flmul@prod& (0+255),f,b
  9121   0013D2  0E00               	movlw	0
  9122   0013D4  23A6               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9123   0013D6  23A7               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9124   0013D8  23A8               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9125   0013DA                     
  9126                           ; BSR set to: 0
  9127   0013DA  A1A8               	btfss	(___flmul@prod+3)& (0+255),0,b
  9128   0013DC  EFF2  F009         	goto	u9701
  9129   0013E0  EFF4  F009         	goto	u9700
  9130   0013E4                     u9701:
  9131   0013E4  EF0B  F00A         	goto	l9606
  9132   0013E8                     u9700:
  9133   0013E8                     
  9134                           ; BSR set to: 0
  9135   0013E8  C0A5  F09A         	movff	___flmul@prod,??___flmul
  9136   0013EC  C0A6  F09B         	movff	___flmul@prod+1,??___flmul+1
  9137   0013F0  C0A7  F09C         	movff	___flmul@prod+2,??___flmul+2
  9138   0013F4  C0A8  F09D         	movff	___flmul@prod+3,??___flmul+3
  9139   0013F8  359D               	rlcf	(??___flmul+3)& (0+255),w,b
  9140   0013FA  339D               	rrcf	(??___flmul+3)& (0+255),f,b
  9141   0013FC  339C               	rrcf	(??___flmul+2)& (0+255),f,b
  9142   0013FE  339B               	rrcf	(??___flmul+1)& (0+255),f,b
  9143   001400  339A               	rrcf	??___flmul& (0+255),f,b
  9144   001402  C09A  F0A5         	movff	??___flmul,___flmul@prod
  9145   001406  C09B  F0A6         	movff	??___flmul+1,___flmul@prod+1
  9146   00140A  C09C  F0A7         	movff	??___flmul+2,___flmul@prod+2
  9147   00140E  C09D  F0A8         	movff	??___flmul+3,___flmul@prod+3
  9148   001412                     
  9149                           ; BSR set to: 0
  9150   001412  4BA9               	infsnz	___flmul@temp& (0+255),f,b
  9151   001414  2BAA               	incf	(___flmul@temp+1)& (0+255),f,b
  9152   001416                     l9606:
  9153                           
  9154                           ; BSR set to: 0
  9155   001416  BFAA               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9156   001418  EF16  F00A         	goto	u9711
  9157   00141C  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  9158   00141E  E108               	bnz	u9710
  9159   001420  29A9               	incf	___flmul@temp& (0+255),w,b
  9160   001422  A0D8               	btfss	status,0,c
  9161   001424  EF16  F00A         	goto	u9711
  9162   001428  EF18  F00A         	goto	u9710
  9163   00142C                     u9711:
  9164   00142C  EF22  F00A         	goto	l9610
  9165   001430                     u9710:
  9166   001430                     
  9167                           ; BSR set to: 0
  9168   001430  0E00               	movlw	0
  9169   001432  6FA5               	movwf	___flmul@prod& (0+255),b
  9170   001434  0E00               	movlw	0
  9171   001436  6FA6               	movwf	(___flmul@prod+1)& (0+255),b
  9172   001438  0E80               	movlw	128
  9173   00143A  6FA7               	movwf	(___flmul@prod+2)& (0+255),b
  9174   00143C  0E7F               	movlw	127
  9175   00143E  6FA8               	movwf	(___flmul@prod+3)& (0+255),b
  9176   001440  EF50  F00A         	goto	l9622
  9177   001444                     l9610:
  9178                           
  9179                           ; BSR set to: 0
  9180   001444  BFAA               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9181   001446  EF2F  F00A         	goto	u9720
  9182   00144A  51AA               	movf	(___flmul@temp+1)& (0+255),w,b
  9183   00144C  E106               	bnz	u9721
  9184   00144E  05A9               	decf	___flmul@temp& (0+255),w,b
  9185   001450  B0D8               	btfsc	status,0,c
  9186   001452  EF2D  F00A         	goto	u9721
  9187   001456  EF2F  F00A         	goto	u9720
  9188   00145A                     u9721:
  9189   00145A  EF3B  F00A         	goto	l2131
  9190   00145E                     u9720:
  9191   00145E                     
  9192                           ; BSR set to: 0
  9193   00145E  0E00               	movlw	0
  9194   001460  6FA5               	movwf	___flmul@prod& (0+255),b
  9195   001462  0E00               	movlw	0
  9196   001464  6FA6               	movwf	(___flmul@prod+1)& (0+255),b
  9197   001466  0E00               	movlw	0
  9198   001468  6FA7               	movwf	(___flmul@prod+2)& (0+255),b
  9199   00146A  0E00               	movlw	0
  9200   00146C  6FA8               	movwf	(___flmul@prod+3)& (0+255),b
  9201   00146E  0E00               	movlw	0
  9202   001470  6F9E               	movwf	___flmul@sign& (0+255),b
  9203   001472  EF50  F00A         	goto	l9622
  9204   001476                     l2131:
  9205                           
  9206                           ; BSR set to: 0
  9207   001476  C0A9  F0A4         	movff	___flmul@temp,___flmul@bexp
  9208   00147A                     
  9209                           ; BSR set to: 0
  9210   00147A  0EFF               	movlw	255
  9211   00147C  17A5               	andwf	___flmul@prod& (0+255),f,b
  9212   00147E  0EFF               	movlw	255
  9213   001480  17A6               	andwf	(___flmul@prod+1)& (0+255),f,b
  9214   001482  0E7F               	movlw	127
  9215   001484  17A7               	andwf	(___flmul@prod+2)& (0+255),f,b
  9216   001486  0E00               	movlw	0
  9217   001488  17A8               	andwf	(___flmul@prod+3)& (0+255),f,b
  9218   00148A                     
  9219                           ; BSR set to: 0
  9220   00148A  A1A4               	btfss	___flmul@bexp& (0+255),0,b
  9221   00148C  EF4A  F00A         	goto	u9731
  9222   001490  EF4C  F00A         	goto	u9730
  9223   001494                     u9731:
  9224   001494  EF4D  F00A         	goto	l9620
  9225   001498                     u9730:
  9226   001498                     
  9227                           ; BSR set to: 0
  9228   001498  8FA7               	bsf	(___flmul@prod+2)& (0+255),7,b
  9229   00149A                     l9620:
  9230                           
  9231                           ; BSR set to: 0
  9232   00149A  90D8               	bcf	status,0,c
  9233   00149C  31A4               	rrcf	___flmul@bexp& (0+255),w,b
  9234   00149E  6FA8               	movwf	(___flmul@prod+3)& (0+255),b
  9235   0014A0                     l9622:
  9236                           
  9237                           ; BSR set to: 0
  9238   0014A0  519E               	movf	___flmul@sign& (0+255),w,b
  9239   0014A2  13A8               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9240   0014A4                     
  9241                           ; BSR set to: 0
  9242   0014A4  C0A5  F092         	movff	___flmul@prod,?___flmul
  9243   0014A8  C0A6  F093         	movff	___flmul@prod+1,?___flmul+1
  9244   0014AC  C0A7  F094         	movff	___flmul@prod+2,?___flmul+2
  9245   0014B0  C0A8  F095         	movff	___flmul@prod+3,?___flmul+3
  9246   0014B4                     l2118:
  9247                           
  9248                           ; BSR set to: 0
  9249   0014B4  0012               	return		;funcret
  9250   0014B6                     __end_of___flmul:
  9251                           	callstack 0
  9252                           
  9253 ;; *************** function ___fldiv *****************
  9254 ;; Defined at:
  9255 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;  b               4   43[BANK0 ] unsigned char 
  9258 ;;  a               4   47[BANK0 ] unsigned char 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;  grs             4   62[BANK0 ] unsigned long 
  9261 ;;  rem             4   55[BANK0 ] unsigned long 
  9262 ;;  new_exp         2   60[BANK0 ] short 
  9263 ;;  aexp            1   67[BANK0 ] unsigned char 
  9264 ;;  bexp            1   66[BANK0 ] unsigned char 
  9265 ;;  sign            1   59[BANK0 ] unsigned char 
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  4   43[BANK0 ] unsigned char 
  9268 ;; Registers used:
  9269 ;;		wreg, status,2, status,0
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9275 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9278 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9279 ;;Total ram usage:       25 bytes
  9280 ;; Hardware stack levels used: 1
  9281 ;; Hardware stack levels required when called: 8
  9282 ;; This function calls:
  9283 ;;		Nothing
  9284 ;; This function is called by:
  9285 ;;		_CCP_PWM_Set_Duty
  9286 ;;		_Pulse_Meter_Calculate
  9287 ;; This function uses a non-reentrant model
  9288 ;;
  9289                           
  9290                           	psect	text53
  9291   0014B6                     __ptext53:
  9292                           	callstack 0
  9293   0014B6                     ___fldiv:
  9294                           	callstack 21
  9295   0014B6  0100               	movlb	0	; () banked
  9296   0014B8  51AE               	movf	(___fldiv@b+3)& (0+255),w,b
  9297   0014BA  0B80               	andlw	128
  9298   0014BC  6FBB               	movwf	___fldiv@sign& (0+255),b
  9299   0014BE  51AE               	movf	(___fldiv@b+3)& (0+255),w,b
  9300   0014C0  25AE               	addwf	(___fldiv@b+3)& (0+255),w,b
  9301   0014C2  6FC2               	movwf	___fldiv@bexp& (0+255),b
  9302   0014C4                     
  9303                           ; BSR set to: 0
  9304   0014C4  AFAD               	btfss	(___fldiv@b+2)& (0+255),7,b
  9305   0014C6  EF67  F00A         	goto	u9321
  9306   0014CA  EF69  F00A         	goto	u9320
  9307   0014CE                     u9321:
  9308   0014CE  EF6A  F00A         	goto	l9366
  9309   0014D2                     u9320:
  9310   0014D2                     
  9311                           ; BSR set to: 0
  9312   0014D2  81C2               	bsf	___fldiv@bexp& (0+255),0,b
  9313   0014D4                     l9366:
  9314                           
  9315                           ; BSR set to: 0
  9316   0014D4  51C2               	movf	___fldiv@bexp& (0+255),w,b
  9317   0014D6  B4D8               	btfsc	status,2,c
  9318   0014D8  EF70  F00A         	goto	u9331
  9319   0014DC  EF72  F00A         	goto	u9330
  9320   0014E0                     u9331:
  9321   0014E0  EF87  F00A         	goto	l9376
  9322   0014E4                     u9330:
  9323   0014E4                     
  9324                           ; BSR set to: 0
  9325   0014E4  29C2               	incf	___fldiv@bexp& (0+255),w,b
  9326   0014E6  A4D8               	btfss	status,2,c
  9327   0014E8  EF78  F00A         	goto	u9341
  9328   0014EC  EF7A  F00A         	goto	u9340
  9329   0014F0                     u9341:
  9330   0014F0  EF82  F00A         	goto	l9372
  9331   0014F4                     u9340:
  9332   0014F4                     
  9333                           ; BSR set to: 0
  9334   0014F4  0E00               	movlw	0
  9335   0014F6  6FAB               	movwf	___fldiv@b& (0+255),b
  9336   0014F8  0E00               	movlw	0
  9337   0014FA  6FAC               	movwf	(___fldiv@b+1)& (0+255),b
  9338   0014FC  0E00               	movlw	0
  9339   0014FE  6FAD               	movwf	(___fldiv@b+2)& (0+255),b
  9340   001500  0E00               	movlw	0
  9341   001502  6FAE               	movwf	(___fldiv@b+3)& (0+255),b
  9342   001504                     l9372:
  9343                           
  9344                           ; BSR set to: 0
  9345   001504  8FAD               	bsf	(___fldiv@b+2)& (0+255),7,b
  9346   001506                     
  9347                           ; BSR set to: 0
  9348   001506  0E00               	movlw	0
  9349   001508  6FAE               	movwf	(___fldiv@b+3)& (0+255),b
  9350   00150A  EF8F  F00A         	goto	l9378
  9351   00150E                     l9376:
  9352                           
  9353                           ; BSR set to: 0
  9354   00150E  0E00               	movlw	0
  9355   001510  6FAB               	movwf	___fldiv@b& (0+255),b
  9356   001512  0E00               	movlw	0
  9357   001514  6FAC               	movwf	(___fldiv@b+1)& (0+255),b
  9358   001516  0E00               	movlw	0
  9359   001518  6FAD               	movwf	(___fldiv@b+2)& (0+255),b
  9360   00151A  0E00               	movlw	0
  9361   00151C  6FAE               	movwf	(___fldiv@b+3)& (0+255),b
  9362   00151E                     l9378:
  9363                           
  9364                           ; BSR set to: 0
  9365   00151E  51B2               	movf	(___fldiv@a+3)& (0+255),w,b
  9366   001520  0B80               	andlw	128
  9367   001522  1BBB               	xorwf	___fldiv@sign& (0+255),f,b
  9368   001524                     
  9369                           ; BSR set to: 0
  9370   001524  51B2               	movf	(___fldiv@a+3)& (0+255),w,b
  9371   001526  25B2               	addwf	(___fldiv@a+3)& (0+255),w,b
  9372   001528  6FC3               	movwf	___fldiv@aexp& (0+255),b
  9373   00152A                     
  9374                           ; BSR set to: 0
  9375   00152A  AFB1               	btfss	(___fldiv@a+2)& (0+255),7,b
  9376   00152C  EF9A  F00A         	goto	u9351
  9377   001530  EF9C  F00A         	goto	u9350
  9378   001534                     u9351:
  9379   001534  EF9D  F00A         	goto	l9386
  9380   001538                     u9350:
  9381   001538                     
  9382                           ; BSR set to: 0
  9383   001538  81C3               	bsf	___fldiv@aexp& (0+255),0,b
  9384   00153A                     l9386:
  9385                           
  9386                           ; BSR set to: 0
  9387   00153A  51C3               	movf	___fldiv@aexp& (0+255),w,b
  9388   00153C  B4D8               	btfsc	status,2,c
  9389   00153E  EFA3  F00A         	goto	u9361
  9390   001542  EFA5  F00A         	goto	u9360
  9391   001546                     u9361:
  9392   001546  EFBA  F00A         	goto	l9396
  9393   00154A                     u9360:
  9394   00154A                     
  9395                           ; BSR set to: 0
  9396   00154A  29C3               	incf	___fldiv@aexp& (0+255),w,b
  9397   00154C  A4D8               	btfss	status,2,c
  9398   00154E  EFAB  F00A         	goto	u9371
  9399   001552  EFAD  F00A         	goto	u9370
  9400   001556                     u9371:
  9401   001556  EFB5  F00A         	goto	l9392
  9402   00155A                     u9370:
  9403   00155A                     
  9404                           ; BSR set to: 0
  9405   00155A  0E00               	movlw	0
  9406   00155C  6FAF               	movwf	___fldiv@a& (0+255),b
  9407   00155E  0E00               	movlw	0
  9408   001560  6FB0               	movwf	(___fldiv@a+1)& (0+255),b
  9409   001562  0E00               	movlw	0
  9410   001564  6FB1               	movwf	(___fldiv@a+2)& (0+255),b
  9411   001566  0E00               	movlw	0
  9412   001568  6FB2               	movwf	(___fldiv@a+3)& (0+255),b
  9413   00156A                     l9392:
  9414                           
  9415                           ; BSR set to: 0
  9416   00156A  8FB1               	bsf	(___fldiv@a+2)& (0+255),7,b
  9417   00156C                     
  9418                           ; BSR set to: 0
  9419   00156C  0E00               	movlw	0
  9420   00156E  6FB2               	movwf	(___fldiv@a+3)& (0+255),b
  9421   001570  EFC2  F00A         	goto	l9398
  9422   001574                     l9396:
  9423                           
  9424                           ; BSR set to: 0
  9425   001574  0E00               	movlw	0
  9426   001576  6FAF               	movwf	___fldiv@a& (0+255),b
  9427   001578  0E00               	movlw	0
  9428   00157A  6FB0               	movwf	(___fldiv@a+1)& (0+255),b
  9429   00157C  0E00               	movlw	0
  9430   00157E  6FB1               	movwf	(___fldiv@a+2)& (0+255),b
  9431   001580  0E00               	movlw	0
  9432   001582  6FB2               	movwf	(___fldiv@a+3)& (0+255),b
  9433   001584                     l9398:
  9434                           
  9435                           ; BSR set to: 0
  9436   001584  51AF               	movf	___fldiv@a& (0+255),w,b
  9437   001586  11B0               	iorwf	(___fldiv@a+1)& (0+255),w,b
  9438   001588  11B1               	iorwf	(___fldiv@a+2)& (0+255),w,b
  9439   00158A  11B2               	iorwf	(___fldiv@a+3)& (0+255),w,b
  9440   00158C  A4D8               	btfss	status,2,c
  9441   00158E  EFCB  F00A         	goto	u9381
  9442   001592  EFCD  F00A         	goto	u9380
  9443   001596                     u9381:
  9444   001596  EFE5  F00A         	goto	l9410
  9445   00159A                     u9380:
  9446   00159A                     
  9447                           ; BSR set to: 0
  9448   00159A  0E00               	movlw	0
  9449   00159C  6FAB               	movwf	___fldiv@b& (0+255),b
  9450   00159E  0E00               	movlw	0
  9451   0015A0  6FAC               	movwf	(___fldiv@b+1)& (0+255),b
  9452   0015A2  0E00               	movlw	0
  9453   0015A4  6FAD               	movwf	(___fldiv@b+2)& (0+255),b
  9454   0015A6  0E00               	movlw	0
  9455   0015A8  6FAE               	movwf	(___fldiv@b+3)& (0+255),b
  9456   0015AA                     
  9457                           ; BSR set to: 0
  9458   0015AA  0E80               	movlw	128
  9459   0015AC  13AD               	iorwf	(___fldiv@b+2)& (0+255),f,b
  9460   0015AE  0E7F               	movlw	127
  9461   0015B0  13AE               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9462   0015B2                     l9404:
  9463                           
  9464                           ; BSR set to: 0
  9465   0015B2  51BB               	movf	___fldiv@sign& (0+255),w,b
  9466   0015B4  13AE               	iorwf	(___fldiv@b+3)& (0+255),f,b
  9467   0015B6                     
  9468                           ; BSR set to: 0
  9469   0015B6  C0AB  F0AB         	movff	___fldiv@b,?___fldiv
  9470   0015BA  C0AC  F0AC         	movff	___fldiv@b+1,?___fldiv+1
  9471   0015BE  C0AD  F0AD         	movff	___fldiv@b+2,?___fldiv+2
  9472   0015C2  C0AE  F0AE         	movff	___fldiv@b+3,?___fldiv+3
  9473   0015C6  EF28  F00C         	goto	l2082
  9474   0015CA                     l9410:
  9475                           
  9476                           ; BSR set to: 0
  9477   0015CA  51C2               	movf	___fldiv@bexp& (0+255),w,b
  9478   0015CC  A4D8               	btfss	status,2,c
  9479   0015CE  EFEB  F00A         	goto	u9391
  9480   0015D2  EFED  F00A         	goto	u9390
  9481   0015D6                     u9391:
  9482   0015D6  EFF7  F00A         	goto	l9418
  9483   0015DA                     u9390:
  9484   0015DA                     
  9485                           ; BSR set to: 0
  9486   0015DA  0E00               	movlw	0
  9487   0015DC  6FAB               	movwf	?___fldiv& (0+255),b
  9488   0015DE  0E00               	movlw	0
  9489   0015E0  6FAC               	movwf	(?___fldiv+1)& (0+255),b
  9490   0015E2  0E00               	movlw	0
  9491   0015E4  6FAD               	movwf	(?___fldiv+2)& (0+255),b
  9492   0015E6  0E00               	movlw	0
  9493   0015E8  6FAE               	movwf	(?___fldiv+3)& (0+255),b
  9494   0015EA  EF28  F00C         	goto	l2082
  9495   0015EE                     l9418:
  9496                           
  9497                           ; BSR set to: 0
  9498   0015EE  51C3               	movf	___fldiv@aexp& (0+255),w,b
  9499   0015F0  C0C2  F0B3         	movff	___fldiv@bexp,??___fldiv
  9500   0015F4  6BB4               	clrf	(??___fldiv+1)& (0+255),b
  9501   0015F6  5FB3               	subwf	??___fldiv& (0+255),f,b
  9502   0015F8  0E00               	movlw	0
  9503   0015FA  5BB4               	subwfb	(??___fldiv+1)& (0+255),f,b
  9504   0015FC  0E7F               	movlw	127
  9505   0015FE  25B3               	addwf	??___fldiv& (0+255),w,b
  9506   001600  6FBC               	movwf	___fldiv@new_exp& (0+255),b
  9507   001602  0E00               	movlw	0
  9508   001604  21B4               	addwfc	(??___fldiv+1)& (0+255),w,b
  9509   001606  6FBD               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9510   001608                     
  9511                           ; BSR set to: 0
  9512   001608  C0AB  F0B7         	movff	___fldiv@b,___fldiv@rem
  9513   00160C  C0AC  F0B8         	movff	___fldiv@b+1,___fldiv@rem+1
  9514   001610  C0AD  F0B9         	movff	___fldiv@b+2,___fldiv@rem+2
  9515   001614  C0AE  F0BA         	movff	___fldiv@b+3,___fldiv@rem+3
  9516   001618                     
  9517                           ; BSR set to: 0
  9518   001618  0E00               	movlw	0
  9519   00161A  6FAB               	movwf	___fldiv@b& (0+255),b
  9520   00161C  0E00               	movlw	0
  9521   00161E  6FAC               	movwf	(___fldiv@b+1)& (0+255),b
  9522   001620  0E00               	movlw	0
  9523   001622  6FAD               	movwf	(___fldiv@b+2)& (0+255),b
  9524   001624  0E00               	movlw	0
  9525   001626  6FAE               	movwf	(___fldiv@b+3)& (0+255),b
  9526   001628                     
  9527                           ; BSR set to: 0
  9528   001628  0E00               	movlw	0
  9529   00162A  6FBE               	movwf	___fldiv@grs& (0+255),b
  9530   00162C  0E00               	movlw	0
  9531   00162E  6FBF               	movwf	(___fldiv@grs+1)& (0+255),b
  9532   001630  0E00               	movlw	0
  9533   001632  6FC0               	movwf	(___fldiv@grs+2)& (0+255),b
  9534   001634  0E00               	movlw	0
  9535   001636  6FC1               	movwf	(___fldiv@grs+3)& (0+255),b
  9536   001638                     
  9537                           ; BSR set to: 0
  9538   001638  0E00               	movlw	0
  9539   00163A  6FC3               	movwf	___fldiv@aexp& (0+255),b
  9540   00163C  EF58  F00B         	goto	l2084
  9541   001640                     l9428:
  9542                           
  9543                           ; BSR set to: 0
  9544   001640  51C3               	movf	___fldiv@aexp& (0+255),w,b
  9545   001642  B4D8               	btfsc	status,2,c
  9546   001644  EF26  F00B         	goto	u9401
  9547   001648  EF28  F00B         	goto	u9400
  9548   00164C                     u9401:
  9549   00164C  EF3F  F00B         	goto	l9436
  9550   001650                     u9400:
  9551   001650                     
  9552                           ; BSR set to: 0
  9553   001650  90D8               	bcf	status,0,c
  9554   001652  37B7               	rlcf	___fldiv@rem& (0+255),f,b
  9555   001654  37B8               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  9556   001656  37B9               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  9557   001658  37BA               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  9558   00165A  90D8               	bcf	status,0,c
  9559   00165C  37AB               	rlcf	___fldiv@b& (0+255),f,b
  9560   00165E  37AC               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9561   001660  37AD               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9562   001662  37AE               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9563   001664                     
  9564                           ; BSR set to: 0
  9565   001664  AFC1               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9566   001666  EF37  F00B         	goto	u9411
  9567   00166A  EF39  F00B         	goto	u9410
  9568   00166E                     u9411:
  9569   00166E  EF3A  F00B         	goto	l2087
  9570   001672                     u9410:
  9571   001672                     
  9572                           ; BSR set to: 0
  9573   001672  81AB               	bsf	___fldiv@b& (0+255),0,b
  9574   001674                     l2087:
  9575                           
  9576                           ; BSR set to: 0
  9577   001674  90D8               	bcf	status,0,c
  9578   001676  37BE               	rlcf	___fldiv@grs& (0+255),f,b
  9579   001678  37BF               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9580   00167A  37C0               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9581   00167C  37C1               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9582   00167E                     l9436:
  9583                           
  9584                           ; BSR set to: 0
  9585   00167E  51AF               	movf	___fldiv@a& (0+255),w,b
  9586   001680  5DB7               	subwf	___fldiv@rem& (0+255),w,b
  9587   001682  51B0               	movf	(___fldiv@a+1)& (0+255),w,b
  9588   001684  59B8               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  9589   001686  51B1               	movf	(___fldiv@a+2)& (0+255),w,b
  9590   001688  59B9               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  9591   00168A  51B2               	movf	(___fldiv@a+3)& (0+255),w,b
  9592   00168C  59BA               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  9593   00168E  A0D8               	btfss	status,0,c
  9594   001690  EF4C  F00B         	goto	u9421
  9595   001694  EF4E  F00B         	goto	u9420
  9596   001698                     u9421:
  9597   001698  EF57  F00B         	goto	l9442
  9598   00169C                     u9420:
  9599   00169C                     
  9600                           ; BSR set to: 0
  9601   00169C  8DC1               	bsf	(___fldiv@grs+3)& (0+255),6,b
  9602   00169E                     
  9603                           ; BSR set to: 0
  9604   00169E  51AF               	movf	___fldiv@a& (0+255),w,b
  9605   0016A0  5FB7               	subwf	___fldiv@rem& (0+255),f,b
  9606   0016A2  51B0               	movf	(___fldiv@a+1)& (0+255),w,b
  9607   0016A4  5BB8               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  9608   0016A6  51B1               	movf	(___fldiv@a+2)& (0+255),w,b
  9609   0016A8  5BB9               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  9610   0016AA  51B2               	movf	(___fldiv@a+3)& (0+255),w,b
  9611   0016AC  5BBA               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  9612   0016AE                     l9442:
  9613                           
  9614                           ; BSR set to: 0
  9615   0016AE  2BC3               	incf	___fldiv@aexp& (0+255),f,b
  9616   0016B0                     l2084:
  9617                           
  9618                           ; BSR set to: 0
  9619   0016B0  0E19               	movlw	25
  9620   0016B2  65C3               	cpfsgt	___fldiv@aexp& (0+255),b
  9621   0016B4  EF5E  F00B         	goto	u9431
  9622   0016B8  EF60  F00B         	goto	u9430
  9623   0016BC                     u9431:
  9624   0016BC  EF20  F00B         	goto	l9428
  9625   0016C0                     u9430:
  9626   0016C0                     
  9627                           ; BSR set to: 0
  9628   0016C0  51B7               	movf	___fldiv@rem& (0+255),w,b
  9629   0016C2  11B8               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  9630   0016C4  11B9               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  9631   0016C6  11BA               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  9632   0016C8  B4D8               	btfsc	status,2,c
  9633   0016CA  EF69  F00B         	goto	u9441
  9634   0016CE  EF6B  F00B         	goto	u9440
  9635   0016D2                     u9441:
  9636   0016D2  EF83  F00B         	goto	l9454
  9637   0016D6                     u9440:
  9638   0016D6                     
  9639                           ; BSR set to: 0
  9640   0016D6  81BE               	bsf	___fldiv@grs& (0+255),0,b
  9641   0016D8  EF83  F00B         	goto	l9454
  9642   0016DC                     l9448:
  9643                           
  9644                           ; BSR set to: 0
  9645   0016DC  90D8               	bcf	status,0,c
  9646   0016DE  37AB               	rlcf	___fldiv@b& (0+255),f,b
  9647   0016E0  37AC               	rlcf	(___fldiv@b+1)& (0+255),f,b
  9648   0016E2  37AD               	rlcf	(___fldiv@b+2)& (0+255),f,b
  9649   0016E4  37AE               	rlcf	(___fldiv@b+3)& (0+255),f,b
  9650   0016E6                     
  9651                           ; BSR set to: 0
  9652   0016E6  AFC1               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9653   0016E8  EF78  F00B         	goto	u9451
  9654   0016EC  EF7A  F00B         	goto	u9450
  9655   0016F0                     u9451:
  9656   0016F0  EF7B  F00B         	goto	l2093
  9657   0016F4                     u9450:
  9658   0016F4                     
  9659                           ; BSR set to: 0
  9660   0016F4  81AB               	bsf	___fldiv@b& (0+255),0,b
  9661   0016F6                     l2093:
  9662                           
  9663                           ; BSR set to: 0
  9664   0016F6  90D8               	bcf	status,0,c
  9665   0016F8  37BE               	rlcf	___fldiv@grs& (0+255),f,b
  9666   0016FA  37BF               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  9667   0016FC  37C0               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  9668   0016FE  37C1               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  9669   001700  07BC               	decf	___fldiv@new_exp& (0+255),f,b
  9670   001702  A0D8               	btfss	status,0,c
  9671   001704  07BD               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  9672   001706                     l9454:
  9673                           
  9674                           ; BSR set to: 0
  9675   001706  AFAD               	btfss	(___fldiv@b+2)& (0+255),7,b
  9676   001708  EF88  F00B         	goto	u9461
  9677   00170C  EF8A  F00B         	goto	u9460
  9678   001710                     u9461:
  9679   001710  EF6E  F00B         	goto	l9448
  9680   001714                     u9460:
  9681   001714                     
  9682                           ; BSR set to: 0
  9683   001714  0E00               	movlw	0
  9684   001716  6FC3               	movwf	___fldiv@aexp& (0+255),b
  9685   001718                     
  9686                           ; BSR set to: 0
  9687   001718  AFC1               	btfss	(___fldiv@grs+3)& (0+255),7,b
  9688   00171A  EF91  F00B         	goto	u9471
  9689   00171E  EF93  F00B         	goto	u9470
  9690   001722                     u9471:
  9691   001722  EFB7  F00B         	goto	l2095
  9692   001726                     u9470:
  9693   001726                     
  9694                           ; BSR set to: 0
  9695   001726  0EFF               	movlw	255
  9696   001728  15BE               	andwf	___fldiv@grs& (0+255),w,b
  9697   00172A  6FB3               	movwf	??___fldiv& (0+255),b
  9698   00172C  0EFF               	movlw	255
  9699   00172E  15BF               	andwf	(___fldiv@grs+1)& (0+255),w,b
  9700   001730  6FB4               	movwf	(??___fldiv+1)& (0+255),b
  9701   001732  0EFF               	movlw	255
  9702   001734  15C0               	andwf	(___fldiv@grs+2)& (0+255),w,b
  9703   001736  6FB5               	movwf	(??___fldiv+2)& (0+255),b
  9704   001738  0E7F               	movlw	127
  9705   00173A  15C1               	andwf	(___fldiv@grs+3)& (0+255),w,b
  9706   00173C  6FB6               	movwf	(??___fldiv+3)& (0+255),b
  9707   00173E  51B3               	movf	??___fldiv& (0+255),w,b
  9708   001740  11B4               	iorwf	(??___fldiv+1)& (0+255),w,b
  9709   001742  11B5               	iorwf	(??___fldiv+2)& (0+255),w,b
  9710   001744  11B6               	iorwf	(??___fldiv+3)& (0+255),w,b
  9711   001746  B4D8               	btfsc	status,2,c
  9712   001748  EFA8  F00B         	goto	u9481
  9713   00174C  EFAA  F00B         	goto	u9480
  9714   001750                     u9481:
  9715   001750  EFAE  F00B         	goto	l2096
  9716   001754                     u9480:
  9717   001754                     l9462:
  9718                           
  9719                           ; BSR set to: 0
  9720   001754  0E01               	movlw	1
  9721   001756  6FC3               	movwf	___fldiv@aexp& (0+255),b
  9722   001758  EFB7  F00B         	goto	l2095
  9723   00175C                     l2096:
  9724                           
  9725                           ; BSR set to: 0
  9726   00175C  A1AB               	btfss	___fldiv@b& (0+255),0,b
  9727   00175E  EFB3  F00B         	goto	u9491
  9728   001762  EFB5  F00B         	goto	u9490
  9729   001766                     u9491:
  9730   001766  EFB7  F00B         	goto	l2095
  9731   00176A                     u9490:
  9732   00176A  EFAA  F00B         	goto	l9462
  9733   00176E                     l2095:
  9734                           
  9735                           ; BSR set to: 0
  9736   00176E  51C3               	movf	___fldiv@aexp& (0+255),w,b
  9737   001770  B4D8               	btfsc	status,2,c
  9738   001772  EFBD  F00B         	goto	u9501
  9739   001776  EFBF  F00B         	goto	u9500
  9740   00177A                     u9501:
  9741   00177A  EFE3  F00B         	goto	l9474
  9742   00177E                     u9500:
  9743   00177E                     
  9744                           ; BSR set to: 0
  9745   00177E  0E01               	movlw	1
  9746   001780  27AB               	addwf	___fldiv@b& (0+255),f,b
  9747   001782  0E00               	movlw	0
  9748   001784  23AC               	addwfc	(___fldiv@b+1)& (0+255),f,b
  9749   001786  23AD               	addwfc	(___fldiv@b+2)& (0+255),f,b
  9750   001788  23AE               	addwfc	(___fldiv@b+3)& (0+255),f,b
  9751   00178A                     
  9752                           ; BSR set to: 0
  9753   00178A  A1AE               	btfss	(___fldiv@b+3)& (0+255),0,b
  9754   00178C  EFCA  F00B         	goto	u9511
  9755   001790  EFCC  F00B         	goto	u9510
  9756   001794                     u9511:
  9757   001794  EFE3  F00B         	goto	l9474
  9758   001798                     u9510:
  9759   001798                     
  9760                           ; BSR set to: 0
  9761   001798  C0AB  F0B3         	movff	___fldiv@b,??___fldiv
  9762   00179C  C0AC  F0B4         	movff	___fldiv@b+1,??___fldiv+1
  9763   0017A0  C0AD  F0B5         	movff	___fldiv@b+2,??___fldiv+2
  9764   0017A4  C0AE  F0B6         	movff	___fldiv@b+3,??___fldiv+3
  9765   0017A8  35B6               	rlcf	(??___fldiv+3)& (0+255),w,b
  9766   0017AA  33B6               	rrcf	(??___fldiv+3)& (0+255),f,b
  9767   0017AC  33B5               	rrcf	(??___fldiv+2)& (0+255),f,b
  9768   0017AE  33B4               	rrcf	(??___fldiv+1)& (0+255),f,b
  9769   0017B0  33B3               	rrcf	??___fldiv& (0+255),f,b
  9770   0017B2  C0B3  F0AB         	movff	??___fldiv,___fldiv@b
  9771   0017B6  C0B4  F0AC         	movff	??___fldiv+1,___fldiv@b+1
  9772   0017BA  C0B5  F0AD         	movff	??___fldiv+2,___fldiv@b+2
  9773   0017BE  C0B6  F0AE         	movff	??___fldiv+3,___fldiv@b+3
  9774   0017C2                     
  9775                           ; BSR set to: 0
  9776   0017C2  4BBC               	infsnz	___fldiv@new_exp& (0+255),f,b
  9777   0017C4  2BBD               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  9778   0017C6                     l9474:
  9779                           
  9780                           ; BSR set to: 0
  9781   0017C6  BFBD               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9782   0017C8  EFEE  F00B         	goto	u9521
  9783   0017CC  51BD               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9784   0017CE  E108               	bnz	u9520
  9785   0017D0  29BC               	incf	___fldiv@new_exp& (0+255),w,b
  9786   0017D2  A0D8               	btfss	status,0,c
  9787   0017D4  EFEE  F00B         	goto	u9521
  9788   0017D8  EFF0  F00B         	goto	u9520
  9789   0017DC                     u9521:
  9790   0017DC  EFFB  F00B         	goto	l9478
  9791   0017E0                     u9520:
  9792   0017E0                     
  9793                           ; BSR set to: 0
  9794   0017E0  0E00               	movlw	0
  9795   0017E2  6FBD               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9796   0017E4  69BC               	setf	___fldiv@new_exp& (0+255),b
  9797   0017E6  0E00               	movlw	0
  9798   0017E8  6FAB               	movwf	___fldiv@b& (0+255),b
  9799   0017EA  0E00               	movlw	0
  9800   0017EC  6FAC               	movwf	(___fldiv@b+1)& (0+255),b
  9801   0017EE  0E00               	movlw	0
  9802   0017F0  6FAD               	movwf	(___fldiv@b+2)& (0+255),b
  9803   0017F2  0E00               	movlw	0
  9804   0017F4  6FAE               	movwf	(___fldiv@b+3)& (0+255),b
  9805   0017F6                     l9478:
  9806                           
  9807                           ; BSR set to: 0
  9808   0017F6  BFBD               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  9809   0017F8  EF08  F00C         	goto	u9530
  9810   0017FC  51BD               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  9811   0017FE  E106               	bnz	u9531
  9812   001800  05BC               	decf	___fldiv@new_exp& (0+255),w,b
  9813   001802  B0D8               	btfsc	status,0,c
  9814   001804  EF06  F00C         	goto	u9531
  9815   001808  EF08  F00C         	goto	u9530
  9816   00180C                     u9531:
  9817   00180C  EF16  F00C         	goto	l9482
  9818   001810                     u9530:
  9819   001810                     
  9820                           ; BSR set to: 0
  9821   001810  0E00               	movlw	0
  9822   001812  6FBD               	movwf	(___fldiv@new_exp+1)& (0+255),b
  9823   001814  0E00               	movlw	0
  9824   001816  6FBC               	movwf	___fldiv@new_exp& (0+255),b
  9825   001818  0E00               	movlw	0
  9826   00181A  6FAB               	movwf	___fldiv@b& (0+255),b
  9827   00181C  0E00               	movlw	0
  9828   00181E  6FAC               	movwf	(___fldiv@b+1)& (0+255),b
  9829   001820  0E00               	movlw	0
  9830   001822  6FAD               	movwf	(___fldiv@b+2)& (0+255),b
  9831   001824  0E00               	movlw	0
  9832   001826  6FAE               	movwf	(___fldiv@b+3)& (0+255),b
  9833   001828  0E00               	movlw	0
  9834   00182A  6FBB               	movwf	___fldiv@sign& (0+255),b
  9835   00182C                     l9482:
  9836                           
  9837                           ; BSR set to: 0
  9838   00182C  C0BC  F0C2         	movff	___fldiv@new_exp,___fldiv@bexp
  9839   001830                     
  9840                           ; BSR set to: 0
  9841   001830  A1C2               	btfss	___fldiv@bexp& (0+255),0,b
  9842   001832  EF1D  F00C         	goto	u9541
  9843   001836  EF1F  F00C         	goto	u9540
  9844   00183A                     u9541:
  9845   00183A  EF22  F00C         	goto	l9488
  9846   00183E                     u9540:
  9847   00183E                     
  9848                           ; BSR set to: 0
  9849   00183E  8FAD               	bsf	(___fldiv@b+2)& (0+255),7,b
  9850   001840  EF23  F00C         	goto	l9490
  9851   001844                     l9488:
  9852                           
  9853                           ; BSR set to: 0
  9854   001844  9FAD               	bcf	(___fldiv@b+2)& (0+255),7,b
  9855   001846                     l9490:
  9856                           
  9857                           ; BSR set to: 0
  9858   001846  90D8               	bcf	status,0,c
  9859   001848  31C2               	rrcf	___fldiv@bexp& (0+255),w,b
  9860   00184A  6FAE               	movwf	(___fldiv@b+3)& (0+255),b
  9861   00184C  EFD9  F00A         	goto	l9404
  9862   001850                     l2082:
  9863                           
  9864                           ; BSR set to: 0
  9865   001850  0012               	return		;funcret
  9866   001852                     __end_of___fldiv:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function _InterruptManagerLow *****************
  9870 ;; Defined at:
  9871 ;;		line 65 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;		None
  9874 ;; Auto vars:     Size  Location     Type
  9875 ;;		None
  9876 ;; Return value:  Size  Location     Type
  9877 ;;                  1    wreg      void 
  9878 ;; Registers used:
  9879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9880 ;; Tracked objects:
  9881 ;;		On entry : 0/0
  9882 ;;		On exit  : 0/0
  9883 ;;		Unchanged: 0/0
  9884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9887 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9888 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;Total ram usage:        7 bytes
  9890 ;; Hardware stack levels used: 1
  9891 ;; Hardware stack levels required when called: 7
  9892 ;; This function calls:
  9893 ;;		_ADC_ISR
  9894 ;;		_CCP1_ISR
  9895 ;;		_CCP2_ISR
  9896 ;;		_INT1_ISR
  9897 ;;		_INT2_ISR
  9898 ;;		_RB4_ISR
  9899 ;;		_RB5_ISR
  9900 ;;		_RB6_ISR
  9901 ;;		_RB7_ISR
  9902 ;;		_TMR0_ISR
  9903 ;;		_TMR1_ISR
  9904 ;;		_TMR2_ISR
  9905 ;;		_TMR3_ISR
  9906 ;; This function is called by:
  9907 ;;		Interrupt level 1
  9908 ;; This function uses a non-reentrant model
  9909 ;;
  9910                           
  9911                           	psect	intcodelo
  9912   000018                     __pintcodelo:
  9913                           	callstack 0
  9914   000018                     _InterruptManagerLow:
  9915                           	callstack 13
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;incstack = 0
  9919   000018  8058               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9920   00001A  CFD8 F021          	movff	status,??_InterruptManagerLow
  9921   00001E  CFE8 F022          	movff	wreg,??_InterruptManagerLow+1
  9922   000022  CFE0 F023          	movff	bsr,??_InterruptManagerLow+2
  9923   000026  CFFA F024          	movff	pclath,??_InterruptManagerLow+3
  9924   00002A  CFFB F025          	movff	pclatu,??_InterruptManagerLow+4
  9925   00002E  CFD9 F026          	movff	fsr2l,??_InterruptManagerLow+5
  9926   000032  CFDA F027          	movff	fsr2h,??_InterruptManagerLow+6
  9927   000036                     
  9928                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66:       if((0 == (*((volatile INTCON3_
      +                          t *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
  9929   000036  BCF0               	btfsc	240,6,c	;volatile
  9930   000038  EF20  F000         	goto	i1u779_21
  9931   00003C  EF22  F000         	goto	i1u779_20
  9932   000040                     i1u779_21:
  9933   000040  EF2B  F000         	goto	i1l1146
  9934   000044                     i1u779_20:
  9935   000044  A0F0               	btfss	240,0,c	;volatile
  9936   000046  EF27  F000         	goto	i1u780_21
  9937   00004A  EF29  F000         	goto	i1u780_20
  9938   00004E                     i1u780_21:
  9939   00004E  EF2B  F000         	goto	i1l1146
  9940   000052                     i1u780_20:
  9941   000052                     
  9942                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 67:         INT1_ISR();
  9943   000052  EC03  F022         	call	_INT1_ISR	;wreg free
  9944   000056                     i1l1146:
  9945                           
  9946                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70:     if((0 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
  9947   000056  BEF0               	btfsc	240,7,c	;volatile
  9948   000058  EF30  F000         	goto	i1u781_21
  9949   00005C  EF32  F000         	goto	i1u781_20
  9950   000060                     i1u781_21:
  9951   000060  EF3B  F000         	goto	i1l1148
  9952   000064                     i1u781_20:
  9953   000064  A2F0               	btfss	240,1,c	;volatile
  9954   000066  EF37  F000         	goto	i1u782_21
  9955   00006A  EF39  F000         	goto	i1u782_20
  9956   00006E                     i1u782_21:
  9957   00006E  EF3B  F000         	goto	i1l1148
  9958   000072                     i1u782_20:
  9959   000072                     
  9960                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71:         INT2_ISR();
  9961   000072  EC01  F022         	call	_INT2_ISR	;wreg free
  9962   000076                     i1l1148:
  9963                           
  9964                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74:      if((0 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
  9965   000076  B0F1               	btfsc	241,0,c	;volatile
  9966   000078  EF40  F000         	goto	i1u783_21
  9967   00007C  EF42  F000         	goto	i1u783_20
  9968   000080                     i1u783_21:
  9969   000080  EF58  F000         	goto	i1l1150
  9970   000084                     i1u783_20:
  9971   000084  A0F2               	btfss	242,0,c	;volatile
  9972   000086  EF47  F000         	goto	i1u784_21
  9973   00008A  EF49  F000         	goto	i1u784_20
  9974   00008E                     i1u784_21:
  9975   00008E  EF58  F000         	goto	i1l1150
  9976   000092                     i1u784_20:
  9977   000092  3881               	swapf	129,w,c	;volatile
  9978   000094  0B0F               	andlw	15
  9979   000096  0B01               	andlw	1
  9980   000098  184E               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
  9981   00009A  B4D8               	btfsc	status,2,c
  9982   00009C  EF52  F000         	goto	i1u785_21
  9983   0000A0  EF54  F000         	goto	i1u785_20
  9984   0000A4                     i1u785_21:
  9985   0000A4  EF58  F000         	goto	i1l1150
  9986   0000A8                     i1u785_20:
  9987   0000A8                     
  9988                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75:         RB4_pin_init_value^=1;
  9989   0000A8  0E01               	movlw	1
  9990   0000AA  1A4E               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
  9991   0000AC                     
  9992                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76:         RB4_ISR();
  9993   0000AC  ECFF  F021         	call	_RB4_ISR	;wreg free
  9994   0000B0                     i1l1150:
  9995                           
  9996                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 79:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
  9997   0000B0  B0F1               	btfsc	241,0,c	;volatile
  9998   0000B2  EF5D  F000         	goto	i1u786_21
  9999   0000B6  EF5F  F000         	goto	i1u786_20
 10000   0000BA                     i1u786_21:
 10001   0000BA  EF76  F000         	goto	i1l1152
 10002   0000BE                     i1u786_20:
 10003   0000BE  A0F2               	btfss	242,0,c	;volatile
 10004   0000C0  EF64  F000         	goto	i1u787_21
 10005   0000C4  EF66  F000         	goto	i1u787_20
 10006   0000C8                     i1u787_21:
 10007   0000C8  EF76  F000         	goto	i1l1152
 10008   0000CC                     i1u787_20:
 10009   0000CC  3881               	swapf	129,w,c	;volatile
 10010   0000CE  42E8               	rrncf	wreg,f,c
 10011   0000D0  0B07               	andlw	7
 10012   0000D2  0B01               	andlw	1
 10013   0000D4  184D               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
 10014   0000D6  B4D8               	btfsc	status,2,c
 10015   0000D8  EF70  F000         	goto	i1u788_21
 10016   0000DC  EF72  F000         	goto	i1u788_20
 10017   0000E0                     i1u788_21:
 10018   0000E0  EF76  F000         	goto	i1l1152
 10019   0000E4                     i1u788_20:
 10020   0000E4                     
 10021                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80:         RB5_pin_init_value^=1;
 10022   0000E4  0E01               	movlw	1
 10023   0000E6  1A4D               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
 10024   0000E8                     
 10025                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81:         RB5_ISR();
 10026   0000E8  ECFD  F021         	call	_RB5_ISR	;wreg free
 10027   0000EC                     i1l1152:
 10028                           
 10029                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 84:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
 10030   0000EC  B0F1               	btfsc	241,0,c	;volatile
 10031   0000EE  EF7B  F000         	goto	i1u789_21
 10032   0000F2  EF7D  F000         	goto	i1u789_20
 10033   0000F6                     i1u789_21:
 10034   0000F6  EF94  F000         	goto	i1l1154
 10035   0000FA                     i1u789_20:
 10036   0000FA  A0F2               	btfss	242,0,c	;volatile
 10037   0000FC  EF82  F000         	goto	i1u790_21
 10038   000100  EF84  F000         	goto	i1u790_20
 10039   000104                     i1u790_21:
 10040   000104  EF94  F000         	goto	i1l1154
 10041   000108                     i1u790_20:
 10042   000108  4481               	rlncf	129,w,c	;volatile
 10043   00010A  46E8               	rlncf	wreg,f,c
 10044   00010C  0B03               	andlw	3
 10045   00010E  0B01               	andlw	1
 10046   000110  184C               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
 10047   000112  B4D8               	btfsc	status,2,c
 10048   000114  EF8E  F000         	goto	i1u791_21
 10049   000118  EF90  F000         	goto	i1u791_20
 10050   00011C                     i1u791_21:
 10051   00011C  EF94  F000         	goto	i1l1154
 10052   000120                     i1u791_20:
 10053   000120                     
 10054                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85:         RB6_pin_init_value^=1;
 10055   000120  0E01               	movlw	1
 10056   000122  1A4C               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
 10057   000124                     
 10058                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86:         RB6_ISR();
 10059   000124  ECFB  F021         	call	_RB6_ISR	;wreg free
 10060   000128                     i1l1154:
 10061                           
 10062                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89:        if((0 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
 10063   000128  B0F1               	btfsc	241,0,c	;volatile
 10064   00012A  EF99  F000         	goto	i1u792_21
 10065   00012E  EF9B  F000         	goto	i1u792_20
 10066   000132                     i1u792_21:
 10067   000132  EFB0  F000         	goto	i1l1156
 10068   000136                     i1u792_20:
 10069   000136  A0F2               	btfss	242,0,c	;volatile
 10070   000138  EFA0  F000         	goto	i1u793_21
 10071   00013C  EFA2  F000         	goto	i1u793_20
 10072   000140                     i1u793_21:
 10073   000140  EFB0  F000         	goto	i1l1156
 10074   000144                     i1u793_20:
 10075   000144  4481               	rlncf	129,w,c	;volatile
 10076   000146  0B01               	andlw	1
 10077   000148  184B               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
 10078   00014A  B4D8               	btfsc	status,2,c
 10079   00014C  EFAA  F000         	goto	i1u794_21
 10080   000150  EFAC  F000         	goto	i1u794_20
 10081   000154                     i1u794_21:
 10082   000154  EFB0  F000         	goto	i1l1156
 10083   000158                     i1u794_20:
 10084   000158                     
 10085                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90:         RB7_pin_init_value^=1;
 10086   000158  0E01               	movlw	1
 10087   00015A  1A4B               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
 10088   00015C                     
 10089                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 91:         RB7_ISR();
 10090   00015C  ECF9  F021         	call	_RB7_ISR	;wreg free
 10091   000160                     i1l1156:
 10092                           
 10093                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 94:      if((0 == (*((volatile IPR1_t *)
      +                          (0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
 10094   000160  BC9F               	btfsc	159,6,c	;volatile
 10095   000162  EFB5  F000         	goto	i1u795_21
 10096   000166  EFB7  F000         	goto	i1u795_20
 10097   00016A                     i1u795_21:
 10098   00016A  EFC0  F000         	goto	i1l1158
 10099   00016E                     i1u795_20:
 10100   00016E  AC9E               	btfss	158,6,c	;volatile
 10101   000170  EFBC  F000         	goto	i1u796_21
 10102   000174  EFBE  F000         	goto	i1u796_20
 10103   000178                     i1u796_21:
 10104   000178  EFC0  F000         	goto	i1l1158
 10105   00017C                     i1u796_20:
 10106   00017C                     
 10107                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 95:         ADC_ISR();
 10108   00017C  EC05  F022         	call	_ADC_ISR	;wreg free
 10109   000180                     i1l1158:
 10110                           
 10111                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 98:     if((0 == (*((volatile INTCON2_t 
      +                          *)(0xFF1))).TMR0IP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).TMR0IF)){
 10112   000180  B4F1               	btfsc	241,2,c	;volatile
 10113   000182  EFC5  F000         	goto	i1u797_21
 10114   000186  EFC7  F000         	goto	i1u797_20
 10115   00018A                     i1u797_21:
 10116   00018A  EFD0  F000         	goto	i1l1160
 10117   00018E                     i1u797_20:
 10118   00018E  A4F2               	btfss	242,2,c	;volatile
 10119   000190  EFCC  F000         	goto	i1u798_21
 10120   000194  EFCE  F000         	goto	i1u798_20
 10121   000198                     i1u798_21:
 10122   000198  EFD0  F000         	goto	i1l1160
 10123   00019C                     i1u798_20:
 10124   00019C                     
 10125                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 99:         TMR0_ISR();
 10126   00019C  ECDC  F021         	call	_TMR0_ISR	;wreg free
 10127   0001A0                     i1l1160:
 10128                           
 10129                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 102:     if((0 == (*((volatile IPR1_t *)
      +                          (0xF9F))).TMR1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR1IF)){
 10130   0001A0  B09F               	btfsc	159,0,c	;volatile
 10131   0001A2  EFD5  F000         	goto	i1u799_21
 10132   0001A6  EFD7  F000         	goto	i1u799_20
 10133   0001AA                     i1u799_21:
 10134   0001AA  EFE0  F000         	goto	i1l1162
 10135   0001AE                     i1u799_20:
 10136   0001AE  A09E               	btfss	158,0,c	;volatile
 10137   0001B0  EFDC  F000         	goto	i1u800_21
 10138   0001B4  EFDE  F000         	goto	i1u800_20
 10139   0001B8                     i1u800_21:
 10140   0001B8  EFE0  F000         	goto	i1l1162
 10141   0001BC                     i1u800_20:
 10142   0001BC                     
 10143                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 103:         TMR1_ISR();
 10144   0001BC  ECE0  F020         	call	_TMR1_ISR	;wreg free
 10145   0001C0                     i1l1162:
 10146                           
 10147                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 106:       if((0 == (*((volatile IPR1_t 
      +                          *)(0xF9F))).TMR2IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR2IF)){
 10148   0001C0  B29F               	btfsc	159,1,c	;volatile
 10149   0001C2  EFE5  F000         	goto	i1u801_21
 10150   0001C6  EFE7  F000         	goto	i1u801_20
 10151   0001CA                     i1u801_21:
 10152   0001CA  EFF0  F000         	goto	i1l1164
 10153   0001CE                     i1u801_20:
 10154   0001CE  A29E               	btfss	158,1,c	;volatile
 10155   0001D0  EFEC  F000         	goto	i1u802_21
 10156   0001D4  EFEE  F000         	goto	i1u802_20
 10157   0001D8                     i1u802_21:
 10158   0001D8  EFF0  F000         	goto	i1l1164
 10159   0001DC                     i1u802_20:
 10160   0001DC                     
 10161                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 107:         TMR2_ISR();
 10162   0001DC  ECF3  F021         	call	_TMR2_ISR	;wreg free
 10163   0001E0                     i1l1164:
 10164                           
 10165                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 110:      if((0 == (*((volatile IPR2_t *
      +                          )(0xFA2))).TMR3IP)&&(1 == (*((volatile PIR2_t *)(0xFA1))).TMR3IF)){
 10166   0001E0  B2A2               	btfsc	162,1,c	;volatile
 10167   0001E2  EFF5  F000         	goto	i1u803_21
 10168   0001E6  EFF7  F000         	goto	i1u803_20
 10169   0001EA                     i1u803_21:
 10170   0001EA  EF00  F001         	goto	i1l1166
 10171   0001EE                     i1u803_20:
 10172   0001EE  A2A1               	btfss	161,1,c	;volatile
 10173   0001F0  EFFC  F000         	goto	i1u804_21
 10174   0001F4  EFFE  F000         	goto	i1u804_20
 10175   0001F8                     i1u804_21:
 10176   0001F8  EF00  F001         	goto	i1l1166
 10177   0001FC                     i1u804_20:
 10178   0001FC                     
 10179                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 111:         TMR3_ISR();
 10180   0001FC  ECD6  F021         	call	_TMR3_ISR	;wreg free
 10181   000200                     i1l1166:
 10182                           
 10183                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 114:       if((0 == (*((volatile IPR1_t 
      +                          *)(0xF9F))).CCP1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).CCP1IF)){
 10184   000200  B49F               	btfsc	159,2,c	;volatile
 10185   000202  EF05  F001         	goto	i1u805_21
 10186   000206  EF07  F001         	goto	i1u805_20
 10187   00020A                     i1u805_21:
 10188   00020A  EF10  F001         	goto	i1l1168
 10189   00020E                     i1u805_20:
 10190   00020E  A49E               	btfss	158,2,c	;volatile
 10191   000210  EF0C  F001         	goto	i1u806_21
 10192   000214  EF0E  F001         	goto	i1u806_20
 10193   000218                     i1u806_21:
 10194   000218  EF10  F001         	goto	i1l1168
 10195   00021C                     i1u806_20:
 10196   00021C                     
 10197                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 115:         CCP1_ISR();
 10198   00021C  EC2D  F021         	call	_CCP1_ISR	;wreg free
 10199   000220                     i1l1168:
 10200                           
 10201                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 118:       if((0 == (*((volatile IPR2_t 
      +                          *)(0xFA2))).CCP2IP)&&(1 == (*((volatile PIR2_t *)(0xFA1))).CCP2IF)){
 10202   000220  B0A2               	btfsc	162,0,c	;volatile
 10203   000222  EF15  F001         	goto	i1u807_21
 10204   000226  EF17  F001         	goto	i1u807_20
 10205   00022A                     i1u807_21:
 10206   00022A  EF20  F001         	goto	i1l1171
 10207   00022E                     i1u807_20:
 10208   00022E  A0A1               	btfss	161,0,c	;volatile
 10209   000230  EF1C  F001         	goto	i1u808_21
 10210   000234  EF1E  F001         	goto	i1u808_20
 10211   000238                     i1u808_21:
 10212   000238  EF20  F001         	goto	i1l1171
 10213   00023C                     i1u808_20:
 10214   00023C                     
 10215                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 119:         CCP2_ISR();
 10216   00023C  EC16  F021         	call	_CCP2_ISR	;wreg free
 10217   000240                     i1l1171:
 10218   000240  C027  FFDA         	movff	??_InterruptManagerLow+6,fsr2h
 10219   000244  C026  FFD9         	movff	??_InterruptManagerLow+5,fsr2l
 10220   000248  C025  FFFB         	movff	??_InterruptManagerLow+4,pclatu
 10221   00024C  C024  FFFA         	movff	??_InterruptManagerLow+3,pclath
 10222   000250  C023  FFE0         	movff	??_InterruptManagerLow+2,bsr
 10223   000254  C022  FFE8         	movff	??_InterruptManagerLow+1,wreg
 10224   000258  C021  FFD8         	movff	??_InterruptManagerLow,status
 10225   00025C  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 10226   00025E  0010               	retfie	
 10227   000260                     __end_of_InterruptManagerLow:
 10228                           	callstack 0
 10229                           
 10230 ;; *************** function _TMR3_ISR *****************
 10231 ;; Defined at:
 10232 ;;		line 139 in file "MCAL_Layer/Timer3/hal_timer3.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;		None
 10235 ;; Auto vars:     Size  Location     Type
 10236 ;;		None
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  1    wreg      void 
 10239 ;; Registers used:
 10240 ;;		wreg, status,2
 10241 ;; Tracked objects:
 10242 ;;		On entry : 0/0
 10243 ;;		On exit  : 0/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10250 ;;Total ram usage:        0 bytes
 10251 ;; Hardware stack levels used: 1
 10252 ;; Hardware stack levels required when called: 4
 10253 ;; This function calls:
 10254 ;;		Nothing
 10255 ;; This function is called by:
 10256 ;;		_InterruptManagerLow
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text55
 10261   0043AC                     __ptext55:
 10262                           	callstack 0
 10263   0043AC                     _TMR3_ISR:
 10264                           	callstack 15
 10265   0043AC                     
 10266                           ;MCAL_Layer/Timer3/hal_timer3.c: 141:     (*((volatile uint8 *)(0xFB3))) = (timer3_prelo
      +                          ad)>>8;
 10267   0043AC  5032               	movf	(_timer3_preload+1)^0,w,c
 10268   0043AE  6EB3               	movwf	179,c	;volatile
 10269   0043B0                     
 10270                           ;MCAL_Layer/Timer3/hal_timer3.c: 142:     (*((volatile uint8 *)(0xFB2))) = (uint8)(timer
      +                          3_preload);
 10271   0043B0  C031  FFB2         	movff	_timer3_preload,4018	;volatile
 10272   0043B4                     
 10273                           ;MCAL_Layer/Timer3/hal_timer3.c: 143:     ((*((volatile PIR2_t *)(0xFA1))).TMR3IF=0);
 10274   0043B4  92A1               	bcf	161,1,c	;volatile
 10275   0043B6  0012               	return		;funcret
 10276   0043B8                     __end_of_TMR3_ISR:
 10277                           	callstack 0
 10278                           
 10279 ;; *************** function _TMR2_ISR *****************
 10280 ;; Defined at:
 10281 ;;		line 111 in file "MCAL_Layer/Timer2/hal_timer2.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;		None
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;		None
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  1    wreg      void 
 10288 ;; Registers used:
 10289 ;;		None
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10299 ;;Total ram usage:        0 bytes
 10300 ;; Hardware stack levels used: 1
 10301 ;; Hardware stack levels required when called: 4
 10302 ;; This function calls:
 10303 ;;		Nothing
 10304 ;; This function is called by:
 10305 ;;		_InterruptManagerLow
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           	psect	text56
 10310   0043E6                     __ptext56:
 10311                           	callstack 0
 10312   0043E6                     _TMR2_ISR:
 10313                           	callstack 15
 10314   0043E6                     
 10315                           ;MCAL_Layer/Timer2/hal_timer2.c: 112:     (*((volatile uint8 *)(0xFCC))) = timer2_preloa
      +                          d;
 10316   0043E6  C04A  FFCC         	movff	_timer2_preload,4044	;volatile
 10317   0043EA  0012               	return		;funcret
 10318   0043EC                     __end_of_TMR2_ISR:
 10319                           	callstack 0
 10320                           
 10321 ;; *************** function _TMR1_ISR *****************
 10322 ;; Defined at:
 10323 ;;		line 114 in file "MCAL_Layer/Timer1/hal_timer1.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;		None
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;		None
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      void 
 10330 ;; Registers used:
 10331 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10341 ;;Total ram usage:        0 bytes
 10342 ;; Hardware stack levels used: 1
 10343 ;; Hardware stack levels required when called: 5
 10344 ;; This function calls:
 10345 ;;		NULL
 10346 ;;		_TMR1_Callback_ISR
 10347 ;; This function is called by:
 10348 ;;		_InterruptManagerLow
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text57
 10353   0041C0                     __ptext57:
 10354                           	callstack 0
 10355   0041C0                     _TMR1_ISR:
 10356                           	callstack 14
 10357   0041C0                     
 10358                           ;MCAL_Layer/Timer1/hal_timer1.c: 115:     (*((volatile uint8 *)(0xFCF))) = (timer1_prelo
      +                          ad)>>8;
 10359   0041C0  5034               	movf	(_timer1_preload+1)^0,w,c
 10360   0041C2  6ECF               	movwf	207,c	;volatile
 10361   0041C4                     
 10362                           ;MCAL_Layer/Timer1/hal_timer1.c: 116:     (*((volatile uint8 *)(0xFCE))) = (uint8)(timer
      +                          1_preload);
 10363   0041C4  C033  FFCE         	movff	_timer1_preload,4046	;volatile
 10364   0041C8                     
 10365                           ;MCAL_Layer/Timer1/hal_timer1.c: 117:     ((*((volatile PIR1_t *)(0xF9E))).TMR1IF=0);
 10366   0041C8  909E               	bcf	158,0,c	;volatile
 10367   0041CA                     
 10368                           ;MCAL_Layer/Timer1/hal_timer1.c: 118:       if(TMR1_InterruptHandler){
 10369   0041CA  5035               	movf	_TMR1_InterruptHandler^0,w,c
 10370   0041CC  1036               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
 10371   0041CE  B4D8               	btfsc	status,2,c
 10372   0041D0  EFEC  F020         	goto	i1u209_21
 10373   0041D4  EFEE  F020         	goto	i1u209_20
 10374   0041D8                     i1u209_21:
 10375   0041D8  EFFA  F020         	goto	i1l1275
 10376   0041DC                     i1u209_20:
 10377   0041DC                     
 10378                           ;MCAL_Layer/Timer1/hal_timer1.c: 119:        TMR1_InterruptHandler();
 10379   0041DC  D802               	call	i1u210_28
 10380   0041DE  EFFA  F020         	goto	i1u210_29
 10381   0041E2                     i1u210_28:
 10382   0041E2  0005               	push	
 10383   0041E4  6EFA               	movwf	pclath,c
 10384   0041E6  5035               	movf	_TMR1_InterruptHandler^0,w,c
 10385   0041E8  6EFD               	movwf	tosl,c
 10386   0041EA  5036               	movf	(_TMR1_InterruptHandler+1)^0,w,c
 10387   0041EC  6EFE               	movwf	tosh,c
 10388   0041EE  6AFF               	clrf	tosu,c
 10389   0041F0  50FA               	movf	pclath,w,c
 10390   0041F2  0012               	return		;indir
 10391   0041F4                     i1u210_29:
 10392   0041F4                     i1l1275:
 10393   0041F4  0012               	return		;funcret
 10394   0041F6                     __end_of_TMR1_ISR:
 10395                           	callstack 0
 10396                           
 10397 ;; *************** function _TMR1_Callback_ISR *****************
 10398 ;; Defined at:
 10399 ;;		line 169 in file "Pulse_Meter.c"
 10400 ;; Parameters:    Size  Location     Type
 10401 ;;		None
 10402 ;; Auto vars:     Size  Location     Type
 10403 ;;		None
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  1    wreg      void 
 10406 ;; Registers used:
 10407 ;;		status,2, status,0
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10417 ;;Total ram usage:        0 bytes
 10418 ;; Hardware stack levels used: 1
 10419 ;; Hardware stack levels required when called: 4
 10420 ;; This function calls:
 10421 ;;		Nothing
 10422 ;; This function is called by:
 10423 ;;		_Timer1_Timer_Init
 10424 ;;		_TMR1_ISR
 10425 ;;		i2_TMR1_ISR
 10426 ;; This function uses a non-reentrant model
 10427 ;;
 10428                           
 10429                           	psect	text58
 10430   00439E                     __ptext58:
 10431                           	callstack 0
 10432   00439E                     _TMR1_Callback_ISR:
 10433                           	callstack 0
 10434                           
 10435                           ;Skip over the trampoline to the duplicate function for level 2
 10436   00439E  A258               	btfss	int$flags,1,c
 10437   0043A0  EFD4  F021         	goto	_TMR1_Callback_ISR$intlevel1
 10438   0043A4  EF07  F022         	goto	i2_TMR1_Callback_ISR
 10439   0043A8                     _TMR1_Callback_ISR$intlevel1:
 10440                           	callstack 14
 10441   0043A8                     
 10442                           ;Pulse_Meter.c: 170:     ovf_cnt++;
 10443   0043A8  2A49               	incf	_ovf_cnt^0,f,c	;volatile
 10444   0043AA  0012               	return		;funcret
 10445   0043AC                     __end_of_TMR1_Callback_ISR:
 10446                           	callstack 0
 10447                           
 10448 ;; *************** function _TMR0_ISR *****************
 10449 ;; Defined at:
 10450 ;;		line 110 in file "MCAL_Layer/Timer0/hal_timer0.c"
 10451 ;; Parameters:    Size  Location     Type
 10452 ;;		None
 10453 ;; Auto vars:     Size  Location     Type
 10454 ;;		None
 10455 ;; Return value:  Size  Location     Type
 10456 ;;                  1    wreg      void 
 10457 ;; Registers used:
 10458 ;;		wreg, status,2
 10459 ;; Tracked objects:
 10460 ;;		On entry : 0/0
 10461 ;;		On exit  : 0/0
 10462 ;;		Unchanged: 0/0
 10463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;Total ram usage:        0 bytes
 10469 ;; Hardware stack levels used: 1
 10470 ;; Hardware stack levels required when called: 4
 10471 ;; This function calls:
 10472 ;;		Nothing
 10473 ;; This function is called by:
 10474 ;;		_InterruptManagerLow
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           	psect	text59
 10479   0043B8                     __ptext59:
 10480                           	callstack 0
 10481   0043B8                     _TMR0_ISR:
 10482                           	callstack 15
 10483   0043B8                     
 10484                           ;MCAL_Layer/Timer0/hal_timer0.c: 112:     TMR0H = (timer0_preload)>>8;
 10485   0043B8  5038               	movf	(_timer0_preload+1)^0,w,c
 10486   0043BA  6ED7               	movwf	215,c	;volatile
 10487   0043BC                     
 10488                           ;MCAL_Layer/Timer0/hal_timer0.c: 113:     (*((volatile uint8 *)(0xFD6))) = (uint8)(timer
      +                          0_preload);
 10489   0043BC  C037  FFD6         	movff	_timer0_preload,4054	;volatile
 10490   0043C0                     
 10491                           ;MCAL_Layer/Timer0/hal_timer0.c: 114:     ((*((volatile INTCON_t *)(0xFF2))).TMR0IF=0);
 10492   0043C0  94F2               	bcf	242,2,c	;volatile
 10493   0043C2  0012               	return		;funcret
 10494   0043C4                     __end_of_TMR0_ISR:
 10495                           	callstack 0
 10496                           
 10497 ;; *************** function _RB7_ISR *****************
 10498 ;; Defined at:
 10499 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;		None
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		None
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;Total ram usage:        0 bytes
 10518 ;; Hardware stack levels used: 1
 10519 ;; Hardware stack levels required when called: 4
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_InterruptManagerLow
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text60
 10528   0043F2                     __ptext60:
 10529                           	callstack 0
 10530   0043F2                     _RB7_ISR:
 10531                           	callstack 15
 10532   0043F2                     
 10533                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 10534   0043F2  90F2               	bcf	242,0,c	;volatile
 10535   0043F4  0012               	return		;funcret
 10536   0043F6                     __end_of_RB7_ISR:
 10537                           	callstack 0
 10538                           
 10539 ;; *************** function _RB6_ISR *****************
 10540 ;; Defined at:
 10541 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10542 ;; Parameters:    Size  Location     Type
 10543 ;;		None
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;		None
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  1    wreg      void 
 10548 ;; Registers used:
 10549 ;;		None
 10550 ;; Tracked objects:
 10551 ;;		On entry : 0/0
 10552 ;;		On exit  : 0/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10559 ;;Total ram usage:        0 bytes
 10560 ;; Hardware stack levels used: 1
 10561 ;; Hardware stack levels required when called: 4
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_InterruptManagerLow
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           	psect	text61
 10570   0043F6                     __ptext61:
 10571                           	callstack 0
 10572   0043F6                     _RB6_ISR:
 10573                           	callstack 15
 10574   0043F6                     
 10575                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 10576   0043F6  90F2               	bcf	242,0,c	;volatile
 10577   0043F8  0012               	return		;funcret
 10578   0043FA                     __end_of_RB6_ISR:
 10579                           	callstack 0
 10580                           
 10581 ;; *************** function _RB5_ISR *****************
 10582 ;; Defined at:
 10583 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10584 ;; Parameters:    Size  Location     Type
 10585 ;;		None
 10586 ;; Auto vars:     Size  Location     Type
 10587 ;;		None
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  1    wreg      void 
 10590 ;; Registers used:
 10591 ;;		None
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/0
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10601 ;;Total ram usage:        0 bytes
 10602 ;; Hardware stack levels used: 1
 10603 ;; Hardware stack levels required when called: 4
 10604 ;; This function calls:
 10605 ;;		Nothing
 10606 ;; This function is called by:
 10607 ;;		_InterruptManagerLow
 10608 ;; This function uses a non-reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text62
 10612   0043FA                     __ptext62:
 10613                           	callstack 0
 10614   0043FA                     _RB5_ISR:
 10615                           	callstack 15
 10616   0043FA                     
 10617                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 10618   0043FA  90F2               	bcf	242,0,c	;volatile
 10619   0043FC  0012               	return		;funcret
 10620   0043FE                     __end_of_RB5_ISR:
 10621                           	callstack 0
 10622                           
 10623 ;; *************** function _RB4_ISR *****************
 10624 ;; Defined at:
 10625 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10626 ;; Parameters:    Size  Location     Type
 10627 ;;		None
 10628 ;; Auto vars:     Size  Location     Type
 10629 ;;		None
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      void 
 10632 ;; Registers used:
 10633 ;;		None
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;Total ram usage:        0 bytes
 10644 ;; Hardware stack levels used: 1
 10645 ;; Hardware stack levels required when called: 4
 10646 ;; This function calls:
 10647 ;;		Nothing
 10648 ;; This function is called by:
 10649 ;;		_InterruptManagerLow
 10650 ;; This function uses a non-reentrant model
 10651 ;;
 10652                           
 10653                           	psect	text63
 10654   0043FE                     __ptext63:
 10655                           	callstack 0
 10656   0043FE                     _RB4_ISR:
 10657                           	callstack 15
 10658   0043FE                     
 10659                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 10660   0043FE  90F2               	bcf	242,0,c	;volatile
 10661   004400  0012               	return		;funcret
 10662   004402                     __end_of_RB4_ISR:
 10663                           	callstack 0
 10664                           
 10665 ;; *************** function _INT2_ISR *****************
 10666 ;; Defined at:
 10667 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10668 ;; Parameters:    Size  Location     Type
 10669 ;;		None
 10670 ;; Auto vars:     Size  Location     Type
 10671 ;;		None
 10672 ;; Return value:  Size  Location     Type
 10673 ;;                  1    wreg      void 
 10674 ;; Registers used:
 10675 ;;		None
 10676 ;; Tracked objects:
 10677 ;;		On entry : 0/0
 10678 ;;		On exit  : 0/0
 10679 ;;		Unchanged: 0/0
 10680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10685 ;;Total ram usage:        0 bytes
 10686 ;; Hardware stack levels used: 1
 10687 ;; Hardware stack levels required when called: 4
 10688 ;; This function calls:
 10689 ;;		Nothing
 10690 ;; This function is called by:
 10691 ;;		_InterruptManagerLow
 10692 ;; This function uses a non-reentrant model
 10693 ;;
 10694                           
 10695                           	psect	text64
 10696   004402                     __ptext64:
 10697                           	callstack 0
 10698   004402                     _INT2_ISR:
 10699                           	callstack 15
 10700   004402                     
 10701                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
 10702   004402  92F0               	bcf	240,1,c	;volatile
 10703   004404  0012               	return		;funcret
 10704   004406                     __end_of_INT2_ISR:
 10705                           	callstack 0
 10706                           
 10707 ;; *************** function _INT1_ISR *****************
 10708 ;; Defined at:
 10709 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;		None
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;		None
 10714 ;; Return value:  Size  Location     Type
 10715 ;;                  1    wreg      void 
 10716 ;; Registers used:
 10717 ;;		None
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/0
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10727 ;;Total ram usage:        0 bytes
 10728 ;; Hardware stack levels used: 1
 10729 ;; Hardware stack levels required when called: 4
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_InterruptManagerLow
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           	psect	text65
 10738   004406                     __ptext65:
 10739                           	callstack 0
 10740   004406                     _INT1_ISR:
 10741                           	callstack 15
 10742   004406                     
 10743                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
 10744   004406  90F0               	bcf	240,0,c	;volatile
 10745   004408  0012               	return		;funcret
 10746   00440A                     __end_of_INT1_ISR:
 10747                           	callstack 0
 10748                           
 10749 ;; *************** function _CCP2_ISR *****************
 10750 ;; Defined at:
 10751 ;;		line 606 in file "MCAL_Layer/CCP/hal_ccp.c"
 10752 ;; Parameters:    Size  Location     Type
 10753 ;;		None
 10754 ;; Auto vars:     Size  Location     Type
 10755 ;;		None
 10756 ;; Return value:  Size  Location     Type
 10757 ;;                  1    wreg      void 
 10758 ;; Registers used:
 10759 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10760 ;; Tracked objects:
 10761 ;;		On entry : 0/0
 10762 ;;		On exit  : 0/0
 10763 ;;		Unchanged: 0/0
 10764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10769 ;;Total ram usage:        0 bytes
 10770 ;; Hardware stack levels used: 1
 10771 ;; Hardware stack levels required when called: 6
 10772 ;; This function calls:
 10773 ;;		NULL
 10774 ;;		_CCP1_Callback_ISR
 10775 ;; This function is called by:
 10776 ;;		_InterruptManagerLow
 10777 ;; This function uses a non-reentrant model
 10778 ;;
 10779                           
 10780                           	psect	text66
 10781   00422C                     __ptext66:
 10782                           	callstack 0
 10783   00422C                     _CCP2_ISR:
 10784                           	callstack 13
 10785   00422C                     
 10786                           ;MCAL_Layer/CCP/hal_ccp.c: 609:     ((*((volatile PIR2_t *)(0xFA1))).CCP2IF=0);
 10787   00422C  90A1               	bcf	161,0,c	;volatile
 10788   00422E                     
 10789                           ;MCAL_Layer/CCP/hal_ccp.c: 610:       if(CCP2_InterruptHandler){
 10790   00422E  5041               	movf	_CCP2_InterruptHandler^0,w,c
 10791   004230  1042               	iorwf	(_CCP2_InterruptHandler+1)^0,w,c
 10792   004232  B4D8               	btfsc	status,2,c
 10793   004234  EF1E  F021         	goto	i1u657_21
 10794   004238  EF20  F021         	goto	i1u657_20
 10795   00423C                     i1u657_21:
 10796   00423C  EF2C  F021         	goto	i1l646
 10797   004240                     i1u657_20:
 10798   004240                     
 10799                           ;MCAL_Layer/CCP/hal_ccp.c: 611:        CCP2_InterruptHandler();
 10800   004240  D802               	call	i1u658_28
 10801   004242  EF2C  F021         	goto	i1u658_29
 10802   004246                     i1u658_28:
 10803   004246  0005               	push	
 10804   004248  6EFA               	movwf	pclath,c
 10805   00424A  5041               	movf	_CCP2_InterruptHandler^0,w,c
 10806   00424C  6EFD               	movwf	tosl,c
 10807   00424E  5042               	movf	(_CCP2_InterruptHandler+1)^0,w,c
 10808   004250  6EFE               	movwf	tosh,c
 10809   004252  6AFF               	clrf	tosu,c
 10810   004254  50FA               	movf	pclath,w,c
 10811   004256  0012               	return		;indir
 10812   004258                     i1u658_29:
 10813   004258                     i1l646:
 10814   004258  0012               	return		;funcret
 10815   00425A                     __end_of_CCP2_ISR:
 10816                           	callstack 0
 10817                           
 10818 ;; *************** function _CCP1_ISR *****************
 10819 ;; Defined at:
 10820 ;;		line 596 in file "MCAL_Layer/CCP/hal_ccp.c"
 10821 ;; Parameters:    Size  Location     Type
 10822 ;;		None
 10823 ;; Auto vars:     Size  Location     Type
 10824 ;;		None
 10825 ;; Return value:  Size  Location     Type
 10826 ;;                  1    wreg      void 
 10827 ;; Registers used:
 10828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10829 ;; Tracked objects:
 10830 ;;		On entry : 0/0
 10831 ;;		On exit  : 0/0
 10832 ;;		Unchanged: 0/0
 10833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10838 ;;Total ram usage:        0 bytes
 10839 ;; Hardware stack levels used: 1
 10840 ;; Hardware stack levels required when called: 6
 10841 ;; This function calls:
 10842 ;;		NULL
 10843 ;;		_CCP1_Callback_ISR
 10844 ;; This function is called by:
 10845 ;;		_InterruptManagerLow
 10846 ;; This function uses a non-reentrant model
 10847 ;;
 10848                           
 10849                           	psect	text67
 10850   00425A                     __ptext67:
 10851                           	callstack 0
 10852   00425A                     _CCP1_ISR:
 10853                           	callstack 13
 10854   00425A                     
 10855                           ;MCAL_Layer/CCP/hal_ccp.c: 599:     ((*((volatile PIR1_t *)(0xF9E))).CCP1IF=0);
 10856   00425A  949E               	bcf	158,2,c	;volatile
 10857   00425C                     
 10858                           ;MCAL_Layer/CCP/hal_ccp.c: 600:       if(CCP1_InterruptHandler){
 10859   00425C  5043               	movf	_CCP1_InterruptHandler^0,w,c
 10860   00425E  1044               	iorwf	(_CCP1_InterruptHandler+1)^0,w,c
 10861   004260  B4D8               	btfsc	status,2,c
 10862   004262  EF35  F021         	goto	i1u655_21
 10863   004266  EF37  F021         	goto	i1u655_20
 10864   00426A                     i1u655_21:
 10865   00426A  EF43  F021         	goto	i1l641
 10866   00426E                     i1u655_20:
 10867   00426E                     
 10868                           ;MCAL_Layer/CCP/hal_ccp.c: 601:        CCP1_InterruptHandler();
 10869   00426E  D802               	call	i1u656_28
 10870   004270  EF43  F021         	goto	i1u656_29
 10871   004274                     i1u656_28:
 10872   004274  0005               	push	
 10873   004276  6EFA               	movwf	pclath,c
 10874   004278  5043               	movf	_CCP1_InterruptHandler^0,w,c
 10875   00427A  6EFD               	movwf	tosl,c
 10876   00427C  5044               	movf	(_CCP1_InterruptHandler+1)^0,w,c
 10877   00427E  6EFE               	movwf	tosh,c
 10878   004280  6AFF               	clrf	tosu,c
 10879   004282  50FA               	movf	pclath,w,c
 10880   004284  0012               	return		;indir
 10881   004286                     i1u656_29:
 10882   004286                     i1l641:
 10883   004286  0012               	return		;funcret
 10884   004288                     __end_of_CCP1_ISR:
 10885                           	callstack 0
 10886                           
 10887 ;; *************** function _CCP1_Callback_ISR *****************
 10888 ;; Defined at:
 10889 ;;		line 134 in file "Pulse_Meter.c"
 10890 ;; Parameters:    Size  Location     Type
 10891 ;;		None
 10892 ;; Auto vars:     Size  Location     Type
 10893 ;;		None
 10894 ;; Return value:  Size  Location     Type
 10895 ;;                  1    wreg      void 
 10896 ;; Registers used:
 10897 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10898 ;; Tracked objects:
 10899 ;;		On entry : 0/0
 10900 ;;		On exit  : 0/0
 10901 ;;		Unchanged: 0/0
 10902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10905 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10906 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10907 ;;Total ram usage:        4 bytes
 10908 ;; Hardware stack levels used: 1
 10909 ;; Hardware stack levels required when called: 5
 10910 ;; This function calls:
 10911 ;;		_CCP_Capture_Mode_Read_Value
 10912 ;; This function is called by:
 10913 ;;		_CCP1_Capture_Mode_Init
 10914 ;;		_CCP1_ISR
 10915 ;;		_CCP2_ISR
 10916 ;;		i2_CCP1_ISR
 10917 ;;		i2_CCP2_ISR
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           	psect	text68
 10922   002944                     __ptext68:
 10923                           	callstack 0
 10924   002944                     _CCP1_Callback_ISR:
 10925                           	callstack 0
 10926                           
 10927                           ;Skip over the trampoline to the duplicate function for level 2
 10928   002944  A258               	btfss	int$flags,1,c
 10929   002946  EFA7  F014         	goto	_CCP1_Callback_ISR$intlevel1
 10930   00294A  EFCD  F015         	goto	i2_CCP1_Callback_ISR
 10931   00294E                     _CCP1_Callback_ISR$intlevel1:
 10932                           	callstack 13
 10933   00294E                     
 10934                           ;Pulse_Meter.c: 135:    if (cap_flag == 0)
 10935   00294E  0100               	movlb	0	; () banked
 10936   002950  51D6               	movf	_cap_flag& (0+255),w,b	;volatile
 10937   002952  A4D8               	btfss	status,2,c
 10938   002954  EFAE  F014         	goto	i1u582_21
 10939   002958  EFB0  F014         	goto	i1u582_20
 10940   00295C                     i1u582_21:
 10941   00295C  EFCE  F014         	goto	i1l6764
 10942   002960                     i1u582_20:
 10943   002960                     
 10944                           ; BSR set to: 0
 10945                           ;Pulse_Meter.c: 136:             {;Pulse_Meter.c: 137:                 ovf_cnt = 0;
 10946   002960  0E00               	movlw	0
 10947   002962  6E49               	movwf	_ovf_cnt^0,c	;volatile
 10948                           
 10949                           ;Pulse_Meter.c: 138:                 Cap1=0;
 10950   002964  0E00               	movlw	0
 10951   002966  6FE5               	movwf	_Cap1& (0+255),b	;volatile
 10952   002968  0E00               	movlw	0
 10953   00296A  6FE6               	movwf	(_Cap1+1)& (0+255),b	;volatile
 10954   00296C  0E00               	movlw	0
 10955   00296E  6FE7               	movwf	(_Cap1+2)& (0+255),b	;volatile
 10956   002970  0E00               	movlw	0
 10957   002972  6FE8               	movwf	(_Cap1+3)& (0+255),b	;volatile
 10958                           
 10959                           ;Pulse_Meter.c: 139:                 cap_flag = 1;
 10960   002974  0E01               	movlw	1
 10961   002976  6FD6               	movwf	_cap_flag& (0+255),b	;volatile
 10962   002978                     
 10963                           ; BSR set to: 0
 10964                           ;Pulse_Meter.c: 140:                 CCP_Capture_Mode_Read_Value(&ccp1_obj,&Cap1);
 10965   002978  0E44               	movlw	low _ccp1_obj
 10966   00297A  6E13               	movwf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,c
 10967   00297C  0E01               	movlw	high _ccp1_obj
 10968   00297E  6E14               	movwf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,c
 10969   002980  0EE5               	movlw	low _Cap1
 10970   002982  6E15               	movwf	CCP_Capture_Mode_Read_Value@capture_value^0,c
 10971   002984  0E00               	movlw	high _Cap1
 10972   002986  6E16               	movwf	(CCP_Capture_Mode_Read_Value@capture_value+1)^0,c
 10973   002988  EC55  F01B         	call	_CCP_Capture_Mode_Read_Value	;wreg free
 10974   00298C                     
 10975                           ;Pulse_Meter.c: 141:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8
      +                          )0x00));
 10976   00298C  0EF0               	movlw	-16
 10977   00298E  16BD               	andwf	189,f,c	;volatile
 10978   002990                     
 10979                           ;Pulse_Meter.c: 142:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8
      +                          )0x04));
 10980   002990  50BD               	movf	189,w,c	;volatile
 10981   002992  0BF0               	andlw	-16
 10982   002994  0904               	iorlw	4
 10983   002996  6EBD               	movwf	189,c	;volatile
 10984                           
 10985                           ;Pulse_Meter.c: 144:             }
 10986   002998  EF37  F015         	goto	i1l1494
 10987   00299C                     i1l6764:
 10988                           
 10989                           ; BSR set to: 0
 10990   00299C  05D6               	decf	_cap_flag& (0+255),w,b	;volatile
 10991   00299E  A4D8               	btfss	status,2,c
 10992   0029A0  EFD4  F014         	goto	i1u583_21
 10993   0029A4  EFD6  F014         	goto	i1u583_20
 10994   0029A8                     i1u583_21:
 10995   0029A8  EF06  F015         	goto	i1l6776
 10996   0029AC                     i1u583_20:
 10997   0029AC                     
 10998                           ; BSR set to: 0
 10999                           ;Pulse_Meter.c: 146:                 Cap2 = 0;
 11000   0029AC  0E00               	movlw	0
 11001   0029AE  6FE1               	movwf	_Cap2& (0+255),b	;volatile
 11002   0029B0  0E00               	movlw	0
 11003   0029B2  6FE2               	movwf	(_Cap2+1)& (0+255),b	;volatile
 11004   0029B4  0E00               	movlw	0
 11005   0029B6  6FE3               	movwf	(_Cap2+2)& (0+255),b	;volatile
 11006   0029B8  0E00               	movlw	0
 11007   0029BA  6FE4               	movwf	(_Cap2+3)& (0+255),b	;volatile
 11008                           
 11009                           ;Pulse_Meter.c: 147:                 cap_flag = 2;
 11010   0029BC  0E02               	movlw	2
 11011   0029BE  6FD6               	movwf	_cap_flag& (0+255),b	;volatile
 11012   0029C0                     
 11013                           ; BSR set to: 0
 11014                           ;Pulse_Meter.c: 148:                 CCP_Capture_Mode_Read_Value(&ccp1_obj,&Cap2);
 11015   0029C0  0E44               	movlw	low _ccp1_obj
 11016   0029C2  6E13               	movwf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,c
 11017   0029C4  0E01               	movlw	high _ccp1_obj
 11018   0029C6  6E14               	movwf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,c
 11019   0029C8  0EE1               	movlw	low _Cap2
 11020   0029CA  6E15               	movwf	CCP_Capture_Mode_Read_Value@capture_value^0,c
 11021   0029CC  0E00               	movlw	high _Cap2
 11022   0029CE  6E16               	movwf	(CCP_Capture_Mode_Read_Value@capture_value+1)^0,c
 11023   0029D0  EC55  F01B         	call	_CCP_Capture_Mode_Read_Value	;wreg free
 11024   0029D4                     
 11025                           ;Pulse_Meter.c: 149:                 Cap2 += (ovf_cnt * 65536);
 11026   0029D4  C049  F01D         	movff	_ovf_cnt,??_CCP1_Callback_ISR	;volatile
 11027   0029D8  6A1E               	clrf	(??_CCP1_Callback_ISR+1)^0,c
 11028   0029DA  6A1F               	clrf	(??_CCP1_Callback_ISR+2)^0,c
 11029   0029DC  6A20               	clrf	(??_CCP1_Callback_ISR+3)^0,c
 11030   0029DE  C01E  F020         	movff	??_CCP1_Callback_ISR+1,??_CCP1_Callback_ISR+3
 11031   0029E2  C01D  F01F         	movff	??_CCP1_Callback_ISR,??_CCP1_Callback_ISR+2
 11032   0029E6  6A1E               	clrf	(??_CCP1_Callback_ISR+1)^0,c
 11033   0029E8  6A1D               	clrf	??_CCP1_Callback_ISR^0,c
 11034   0029EA  501D               	movf	??_CCP1_Callback_ISR^0,w,c
 11035   0029EC  0100               	movlb	0	; () banked
 11036   0029EE  27E1               	addwf	_Cap2& (0+255),f,b	;volatile
 11037   0029F0  501E               	movf	(??_CCP1_Callback_ISR+1)^0,w,c
 11038   0029F2  23E2               	addwfc	(_Cap2+1)& (0+255),f,b	;volatile
 11039   0029F4  501F               	movf	(??_CCP1_Callback_ISR+2)^0,w,c
 11040   0029F6  23E3               	addwfc	(_Cap2+2)& (0+255),f,b	;volatile
 11041   0029F8  5020               	movf	(??_CCP1_Callback_ISR+3)^0,w,c
 11042   0029FA  23E4               	addwfc	(_Cap2+3)& (0+255),f,b	;volatile
 11043   0029FC                     
 11044                           ; BSR set to: 0
 11045                           ;Pulse_Meter.c: 150:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8
      +                          )0x00));
 11046   0029FC  0EF0               	movlw	-16
 11047   0029FE  16BD               	andwf	189,f,c	;volatile
 11048   002A00                     
 11049                           ; BSR set to: 0
 11050                           ;Pulse_Meter.c: 151:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8
      +                          )0x05));
 11051   002A00  50BD               	movf	189,w,c	;volatile
 11052   002A02  0BF0               	andlw	-16
 11053   002A04  0905               	iorlw	5
 11054   002A06  6EBD               	movwf	189,c	;volatile
 11055                           
 11056                           ;Pulse_Meter.c: 152:             }
 11057   002A08  EF37  F015         	goto	i1l1494
 11058   002A0C                     i1l6776:
 11059                           
 11060                           ; BSR set to: 0
 11061   002A0C  0E02               	movlw	2
 11062   002A0E  19D6               	xorwf	_cap_flag& (0+255),w,b	;volatile
 11063   002A10  A4D8               	btfss	status,2,c
 11064   002A12  EF0D  F015         	goto	i1u584_21
 11065   002A16  EF0F  F015         	goto	i1u584_20
 11066   002A1A                     i1u584_21:
 11067   002A1A  EF37  F015         	goto	i1l1494
 11068   002A1E                     i1u584_20:
 11069   002A1E                     
 11070                           ; BSR set to: 0
 11071                           ;Pulse_Meter.c: 154:             {;Pulse_Meter.c: 155:                 Cap3 = 0;
 11072   002A1E  0E00               	movlw	0
 11073   002A20  6FDD               	movwf	_Cap3& (0+255),b	;volatile
 11074   002A22  0E00               	movlw	0
 11075   002A24  6FDE               	movwf	(_Cap3+1)& (0+255),b	;volatile
 11076   002A26  0E00               	movlw	0
 11077   002A28  6FDF               	movwf	(_Cap3+2)& (0+255),b	;volatile
 11078   002A2A  0E00               	movlw	0
 11079   002A2C  6FE0               	movwf	(_Cap3+3)& (0+255),b	;volatile
 11080   002A2E                     
 11081                           ; BSR set to: 0
 11082                           ;Pulse_Meter.c: 156:                 CCP_Capture_Mode_Read_Value(&ccp1_obj,&Cap3);
 11083   002A2E  0E44               	movlw	low _ccp1_obj
 11084   002A30  6E13               	movwf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,c
 11085   002A32  0E01               	movlw	high _ccp1_obj
 11086   002A34  6E14               	movwf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,c
 11087   002A36  0EDD               	movlw	low _Cap3
 11088   002A38  6E15               	movwf	CCP_Capture_Mode_Read_Value@capture_value^0,c
 11089   002A3A  0E00               	movlw	high _Cap3
 11090   002A3C  6E16               	movwf	(CCP_Capture_Mode_Read_Value@capture_value+1)^0,c
 11091   002A3E  EC55  F01B         	call	_CCP_Capture_Mode_Read_Value	;wreg free
 11092   002A42                     
 11093                           ;Pulse_Meter.c: 157:                 Cap3 += (ovf_cnt * 65536);
 11094   002A42  C049  F01D         	movff	_ovf_cnt,??_CCP1_Callback_ISR	;volatile
 11095   002A46  6A1E               	clrf	(??_CCP1_Callback_ISR+1)^0,c
 11096   002A48  6A1F               	clrf	(??_CCP1_Callback_ISR+2)^0,c
 11097   002A4A  6A20               	clrf	(??_CCP1_Callback_ISR+3)^0,c
 11098   002A4C  C01E  F020         	movff	??_CCP1_Callback_ISR+1,??_CCP1_Callback_ISR+3
 11099   002A50  C01D  F01F         	movff	??_CCP1_Callback_ISR,??_CCP1_Callback_ISR+2
 11100   002A54  6A1E               	clrf	(??_CCP1_Callback_ISR+1)^0,c
 11101   002A56  6A1D               	clrf	??_CCP1_Callback_ISR^0,c
 11102   002A58  501D               	movf	??_CCP1_Callback_ISR^0,w,c
 11103   002A5A  0100               	movlb	0	; () banked
 11104   002A5C  27DD               	addwf	_Cap3& (0+255),f,b	;volatile
 11105   002A5E  501E               	movf	(??_CCP1_Callback_ISR+1)^0,w,c
 11106   002A60  23DE               	addwfc	(_Cap3+1)& (0+255),f,b	;volatile
 11107   002A62  501F               	movf	(??_CCP1_Callback_ISR+2)^0,w,c
 11108   002A64  23DF               	addwfc	(_Cap3+2)& (0+255),f,b	;volatile
 11109   002A66  5020               	movf	(??_CCP1_Callback_ISR+3)^0,w,c
 11110   002A68  23E0               	addwfc	(_Cap3+3)& (0+255),f,b	;volatile
 11111   002A6A                     
 11112                           ; BSR set to: 0
 11113                           ;Pulse_Meter.c: 158:                 cap_flag = 3;
 11114   002A6A  0E03               	movlw	3
 11115   002A6C  6FD6               	movwf	_cap_flag& (0+255),b	;volatile
 11116   002A6E                     i1l1494:
 11117   002A6E  0012               	return		;funcret
 11118   002A70                     __end_of_CCP1_Callback_ISR:
 11119                           	callstack 0
 11120                           
 11121 ;; *************** function _CCP_Capture_Mode_Read_Value *****************
 11122 ;; Defined at:
 11123 ;;		line 142 in file "MCAL_Layer/CCP/hal_ccp.c"
 11124 ;; Parameters:    Size  Location     Type
 11125 ;;  _ccp_obj        2   18[COMRAM] PTR const struct .
 11126 ;;		 -> ccp1_obj(13), 
 11127 ;;  capture_valu    2   20[COMRAM] PTR unsigned long 
 11128 ;;		 -> Cap3(4), Cap1(4), Cap2(4), 
 11129 ;; Auto vars:     Size  Location     Type
 11130 ;;  capture_temp    2   26[COMRAM] struct .
 11131 ;;  ret             1    0        unsigned char 
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      unsigned char 
 11134 ;; Registers used:
 11135 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11144 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11145 ;;Total ram usage:       10 bytes
 11146 ;; Hardware stack levels used: 1
 11147 ;; Hardware stack levels required when called: 4
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_CCP1_Callback_ISR
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           	psect	text69
 11156   0036AA                     __ptext69:
 11157                           	callstack 0
 11158   0036AA                     _CCP_Capture_Mode_Read_Value:
 11159                           	callstack 13
 11160   0036AA                     
 11161                           ;MCAL_Layer/CCP/hal_ccp.c: 145:     CCP_REG_T capture_temp_value = {0};
 11162   0036AA  C03F  F01B         	movff	CCP_Capture_Mode_Read_Value@F3461,CCP_Capture_Mode_Read_Value@capture_temp_value
 11163   0036AE  C040  F01C         	movff	CCP_Capture_Mode_Read_Value@F3461+1,CCP_Capture_Mode_Read_Value@capture_temp_valu
      +                          e+1
 11164   0036B2                     
 11165                           ;MCAL_Layer/CCP/hal_ccp.c: 146:     if( (capture_value==((void*)0)) || (_ccp_obj == ((vo
      +                          id*)0)) )
 11166   0036B2  5015               	movf	CCP_Capture_Mode_Read_Value@capture_value^0,w,c
 11167   0036B4  1016               	iorwf	(CCP_Capture_Mode_Read_Value@capture_value+1)^0,w,c
 11168   0036B6  B4D8               	btfsc	status,2,c
 11169   0036B8  EF60  F01B         	goto	i1u558_21
 11170   0036BC  EF62  F01B         	goto	i1u558_20
 11171   0036C0                     i1u558_21:
 11172   0036C0  EF6B  F01B         	goto	i1l6554
 11173   0036C4                     i1u558_20:
 11174   0036C4  5013               	movf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 11175   0036C6  1014               	iorwf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 11176   0036C8  A4D8               	btfss	status,2,c
 11177   0036CA  EF69  F01B         	goto	i1u559_21
 11178   0036CE  EF6B  F01B         	goto	i1u559_20
 11179   0036D2                     i1u559_21:
 11180   0036D2  EF6D  F01B         	goto	i1l6556
 11181   0036D6                     i1u559_20:
 11182   0036D6                     i1l6554:
 11183                           
 11184                           ;MCAL_Layer/CCP/hal_ccp.c: 149:     }
 11185   0036D6  EFA7  F01B         	goto	i1l528
 11186   0036DA                     i1l6556:
 11187                           
 11188                           ;MCAL_Layer/CCP/hal_ccp.c: 151:     {;MCAL_Layer/CCP/hal_ccp.c: 152:         if (_ccp_ob
      +                          j->ccp_inst == CCP1_INST)
 11189   0036DA  EE20 F001          	lfsr	2,1
 11190   0036DE  5013               	movf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 11191   0036E0  26D9               	addwf	fsr2l,f,c
 11192   0036E2  5014               	movf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 11193   0036E4  22DA               	addwfc	fsr2h,f,c
 11194   0036E6  50DF               	movf	indf2,w,c
 11195   0036E8  A4D8               	btfss	status,2,c
 11196   0036EA  EF79  F01B         	goto	i1u560_21
 11197   0036EE  EF7B  F01B         	goto	i1u560_20
 11198   0036F2                     i1u560_21:
 11199   0036F2  EF81  F01B         	goto	i1l6560
 11200   0036F6                     i1u560_20:
 11201   0036F6                     
 11202                           ;MCAL_Layer/CCP/hal_ccp.c: 153:         {;MCAL_Layer/CCP/hal_ccp.c: 154:            capt
      +                          ure_temp_value.ccpr_low = (*( (volatile uint8 *)(0xFBE) ) );
 11203   0036F6  CFBE F01B          	movff	4030,CCP_Capture_Mode_Read_Value@capture_temp_value	;volatile
 11204                           
 11205                           ;MCAL_Layer/CCP/hal_ccp.c: 155:            capture_temp_value.ccpr_high = (*( (volatile 
      +                          uint8 *)(0xFBF) ) );
 11206   0036FA  CFBF F01C          	movff	4031,CCP_Capture_Mode_Read_Value@capture_temp_value+1	;volatile
 11207                           
 11208                           ;MCAL_Layer/CCP/hal_ccp.c: 156:         }
 11209   0036FE  EF95  F01B         	goto	i1l6566
 11210   003702                     i1l6560:
 11211   003702  EE20 F001          	lfsr	2,1
 11212   003706  5013               	movf	CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 11213   003708  26D9               	addwf	fsr2l,f,c
 11214   00370A  5014               	movf	(CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 11215   00370C  22DA               	addwfc	fsr2h,f,c
 11216   00370E  04DE               	decf	postinc2,w,c
 11217   003710  A4D8               	btfss	status,2,c
 11218   003712  EF8D  F01B         	goto	i1u561_21
 11219   003716  EF8F  F01B         	goto	i1u561_20
 11220   00371A                     i1u561_21:
 11221   00371A  EF95  F01B         	goto	i1l6564
 11222   00371E                     i1u561_20:
 11223   00371E                     
 11224                           ;MCAL_Layer/CCP/hal_ccp.c: 158:         {;MCAL_Layer/CCP/hal_ccp.c: 159:            capt
      +                          ure_temp_value.ccpr_low = (*( (volatile uint8 *)(0xFBB) ) );
 11225   00371E  CFBB F01B          	movff	4027,CCP_Capture_Mode_Read_Value@capture_temp_value	;volatile
 11226                           
 11227                           ;MCAL_Layer/CCP/hal_ccp.c: 160:            capture_temp_value.ccpr_high = (*( (volatile 
      +                          uint8 *)(0xFBC) ) );
 11228   003722  CFBC F01C          	movff	4028,CCP_Capture_Mode_Read_Value@capture_temp_value+1	;volatile
 11229                           
 11230                           ;MCAL_Layer/CCP/hal_ccp.c: 161:         }
 11231   003726  EF95  F01B         	goto	i1l6566
 11232   00372A                     i1l6564:
 11233   00372A                     i1l6566:
 11234                           
 11235                           ;MCAL_Layer/CCP/hal_ccp.c: 163:         *capture_value = capture_temp_value.ccpr_16Bit;
 11236   00372A  501B               	movf	CCP_Capture_Mode_Read_Value@capture_temp_value^0,w,c
 11237   00372C  6E17               	movwf	??_CCP_Capture_Mode_Read_Value^0,c
 11238   00372E  501C               	movf	(CCP_Capture_Mode_Read_Value@capture_temp_value+1)^0,w,c
 11239   003730  6E18               	movwf	(??_CCP_Capture_Mode_Read_Value+1)^0,c
 11240   003732  6A19               	clrf	(??_CCP_Capture_Mode_Read_Value+2)^0,c
 11241   003734  6A1A               	clrf	(??_CCP_Capture_Mode_Read_Value+3)^0,c
 11242   003736  C015  FFD9         	movff	CCP_Capture_Mode_Read_Value@capture_value,fsr2l
 11243   00373A  C016  FFDA         	movff	CCP_Capture_Mode_Read_Value@capture_value+1,fsr2h
 11244   00373E  C017  FFDE         	movff	??_CCP_Capture_Mode_Read_Value,postinc2
 11245   003742  C018  FFDE         	movff	??_CCP_Capture_Mode_Read_Value+1,postinc2
 11246   003746  C019  FFDE         	movff	??_CCP_Capture_Mode_Read_Value+2,postinc2
 11247   00374A  C01A  FFDE         	movff	??_CCP_Capture_Mode_Read_Value+3,postinc2
 11248   00374E                     i1l528:
 11249   00374E  0012               	return		;funcret
 11250   003750                     __end_of_CCP_Capture_Mode_Read_Value:
 11251                           	callstack 0
 11252                           
 11253 ;; *************** function _ADC_ISR *****************
 11254 ;; Defined at:
 11255 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;		None
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;		None
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  1    wreg      void 
 11262 ;; Registers used:
 11263 ;;		None
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11273 ;;Total ram usage:        0 bytes
 11274 ;; Hardware stack levels used: 1
 11275 ;; Hardware stack levels required when called: 4
 11276 ;; This function calls:
 11277 ;;		Nothing
 11278 ;; This function is called by:
 11279 ;;		_InterruptManagerLow
 11280 ;; This function uses a non-reentrant model
 11281 ;;
 11282                           
 11283                           	psect	text70
 11284   00440A                     __ptext70:
 11285                           	callstack 0
 11286   00440A                     _ADC_ISR:
 11287                           	callstack 15
 11288   00440A                     
 11289                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
 11290   00440A  9C9E               	bcf	158,6,c	;volatile
 11291   00440C  0012               	return		;funcret
 11292   00440E                     __end_of_ADC_ISR:
 11293                           	callstack 0
 11294                           
 11295 ;; *************** function _InterruptManagerHigh *****************
 11296 ;; Defined at:
 11297 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
 11298 ;; Parameters:    Size  Location     Type
 11299 ;;		None
 11300 ;; Auto vars:     Size  Location     Type
 11301 ;;		None
 11302 ;; Return value:  Size  Location     Type
 11303 ;;                  1    wreg      void 
 11304 ;; Registers used:
 11305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11306 ;; Tracked objects:
 11307 ;;		On entry : 0/0
 11308 ;;		On exit  : 0/0
 11309 ;;		Unchanged: 0/0
 11310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11313 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11314 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11315 ;;Total ram usage:        4 bytes
 11316 ;; Hardware stack levels used: 1
 11317 ;; Hardware stack levels required when called: 3
 11318 ;; This function calls:
 11319 ;;		_INT0_ISR
 11320 ;;		i2_ADC_ISR
 11321 ;;		i2_CCP1_ISR
 11322 ;;		i2_CCP2_ISR
 11323 ;;		i2_INT1_ISR
 11324 ;;		i2_INT2_ISR
 11325 ;;		i2_RB4_ISR
 11326 ;;		i2_RB5_ISR
 11327 ;;		i2_RB6_ISR
 11328 ;;		i2_RB7_ISR
 11329 ;;		i2_TMR0_ISR
 11330 ;;		i2_TMR1_ISR
 11331 ;;		i2_TMR2_ISR
 11332 ;;		i2_TMR3_ISR
 11333 ;; This function is called by:
 11334 ;;		Interrupt level 2
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           	psect	intcode
 11339   000008                     __pintcode:
 11340                           	callstack 0
 11341   000008                     _InterruptManagerHigh:
 11342                           	callstack 13
 11343                           
 11344                           ;incstack = 0
 11345   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11346   00000A  ED29  F00C         	call	int_func,f	;refresh shadow registers
 11347                           
 11348                           	psect	intcode_body
 11349   001852                     __pintcode_body:
 11350                           	callstack 13
 11351   001852                     int_func:
 11352                           	callstack 13
 11353   001852  0006               	pop		; remove dummy address from shadow register refresh
 11354   001854  CFFA F00F          	movff	pclath,??_InterruptManagerHigh
 11355   001858  CFFB F010          	movff	pclatu,??_InterruptManagerHigh+1
 11356   00185C  CFD9 F011          	movff	fsr2l,??_InterruptManagerHigh+2
 11357   001860  CFDA F012          	movff	fsr2h,??_InterruptManagerHigh+3
 11358   001864                     
 11359                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 4:     if((1 == (*((volatile INTCON_t *)
      +                          (0xFF2))).INT0IE)&&(1 == (*((volatile INTCON_t *)(0xFF2))).INT0IF)){
 11360   001864  A8F2               	btfss	242,4,c	;volatile
 11361   001866  EF37  F00C         	goto	i2u747_41
 11362   00186A  EF39  F00C         	goto	i2u747_40
 11363   00186E                     i2u747_41:
 11364   00186E  EF42  F00C         	goto	i2l1113
 11365   001872                     i2u747_40:
 11366   001872  A2F2               	btfss	242,1,c	;volatile
 11367   001874  EF3E  F00C         	goto	i2u748_41
 11368   001878  EF40  F00C         	goto	i2u748_40
 11369   00187C                     i2u748_41:
 11370   00187C  EF42  F00C         	goto	i2l1113
 11371   001880                     i2u748_40:
 11372   001880                     
 11373                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 5:         INT0_ISR();
 11374   001880  EC17  F022         	call	_INT0_ISR	;wreg free
 11375   001884                     i2l1113:
 11376                           
 11377                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 8:      if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT1IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT1IF)){
 11378   001884  ACF0               	btfss	240,6,c	;volatile
 11379   001886  EF47  F00C         	goto	i2u749_41
 11380   00188A  EF49  F00C         	goto	i2u749_40
 11381   00188E                     i2u749_41:
 11382   00188E  EF52  F00C         	goto	i2l1115
 11383   001892                     i2u749_40:
 11384   001892  A0F0               	btfss	240,0,c	;volatile
 11385   001894  EF4E  F00C         	goto	i2u750_41
 11386   001898  EF50  F00C         	goto	i2u750_40
 11387   00189C                     i2u750_41:
 11388   00189C  EF52  F00C         	goto	i2l1115
 11389   0018A0                     i2u750_40:
 11390   0018A0                     
 11391                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 9:         INT1_ISR();
 11392   0018A0  EC13  F022         	call	i2_INT1_ISR	;wreg free
 11393   0018A4                     i2l1115:
 11394                           
 11395                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 12:     if((1 == (*((volatile INTCON3_t 
      +                          *)(0xFF0))).INT2IP)&&(1 == (*((volatile INTCON3_t *)(0xFF0))).INT2IF)){
 11396   0018A4  AEF0               	btfss	240,7,c	;volatile
 11397   0018A6  EF57  F00C         	goto	i2u751_41
 11398   0018AA  EF59  F00C         	goto	i2u751_40
 11399   0018AE                     i2u751_41:
 11400   0018AE  EF62  F00C         	goto	i2l1117
 11401   0018B2                     i2u751_40:
 11402   0018B2  A2F0               	btfss	240,1,c	;volatile
 11403   0018B4  EF5E  F00C         	goto	i2u752_41
 11404   0018B8  EF60  F00C         	goto	i2u752_40
 11405   0018BC                     i2u752_41:
 11406   0018BC  EF62  F00C         	goto	i2l1117
 11407   0018C0                     i2u752_40:
 11408   0018C0                     
 11409                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 13:         INT2_ISR();
 11410   0018C0  EC11  F022         	call	i2_INT2_ISR	;wreg free
 11411   0018C4                     i2l1117:
 11412                           
 11413                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 16:      if((1 == (*((volatile INTCON2_t
      +                           *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile ui
      +                          nt8*)(0xF81)))>>4)&((uint8)0x01)))!=RB4_pin_init_value)){
 11414   0018C4  A0F1               	btfss	241,0,c	;volatile
 11415   0018C6  EF67  F00C         	goto	i2u753_41
 11416   0018CA  EF69  F00C         	goto	i2u753_40
 11417   0018CE                     i2u753_41:
 11418   0018CE  EF7F  F00C         	goto	i2l1119
 11419   0018D2                     i2u753_40:
 11420   0018D2  A0F2               	btfss	242,0,c	;volatile
 11421   0018D4  EF6E  F00C         	goto	i2u754_41
 11422   0018D8  EF70  F00C         	goto	i2u754_40
 11423   0018DC                     i2u754_41:
 11424   0018DC  EF7F  F00C         	goto	i2l1119
 11425   0018E0                     i2u754_40:
 11426   0018E0  3881               	swapf	129,w,c	;volatile
 11427   0018E2  0B0F               	andlw	15
 11428   0018E4  0B01               	andlw	1
 11429   0018E6  184E               	xorwf	_RB4_pin_init_value^0,w,c	;volatile
 11430   0018E8  B4D8               	btfsc	status,2,c
 11431   0018EA  EF79  F00C         	goto	i2u755_41
 11432   0018EE  EF7B  F00C         	goto	i2u755_40
 11433   0018F2                     i2u755_41:
 11434   0018F2  EF7F  F00C         	goto	i2l1119
 11435   0018F6                     i2u755_40:
 11436   0018F6                     
 11437                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 17:         RB4_pin_init_value^=1;
 11438   0018F6  0E01               	movlw	1
 11439   0018F8  1A4E               	xorwf	_RB4_pin_init_value^0,f,c	;volatile
 11440   0018FA                     
 11441                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 18:         RB4_ISR();
 11442   0018FA  EC0F  F022         	call	i2_RB4_ISR	;wreg free
 11443   0018FE                     i2l1119:
 11444                           
 11445                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 21:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>5)&((uint8)0x01)))!=RB5_pin_init_value)){
 11446   0018FE  A0F1               	btfss	241,0,c	;volatile
 11447   001900  EF84  F00C         	goto	i2u756_41
 11448   001904  EF86  F00C         	goto	i2u756_40
 11449   001908                     i2u756_41:
 11450   001908  EF9D  F00C         	goto	i2l1121
 11451   00190C                     i2u756_40:
 11452   00190C  A0F2               	btfss	242,0,c	;volatile
 11453   00190E  EF8B  F00C         	goto	i2u757_41
 11454   001912  EF8D  F00C         	goto	i2u757_40
 11455   001916                     i2u757_41:
 11456   001916  EF9D  F00C         	goto	i2l1121
 11457   00191A                     i2u757_40:
 11458   00191A  3881               	swapf	129,w,c	;volatile
 11459   00191C  42E8               	rrncf	wreg,f,c
 11460   00191E  0B07               	andlw	7
 11461   001920  0B01               	andlw	1
 11462   001922  184D               	xorwf	_RB5_pin_init_value^0,w,c	;volatile
 11463   001924  B4D8               	btfsc	status,2,c
 11464   001926  EF97  F00C         	goto	i2u758_41
 11465   00192A  EF99  F00C         	goto	i2u758_40
 11466   00192E                     i2u758_41:
 11467   00192E  EF9D  F00C         	goto	i2l1121
 11468   001932                     i2u758_40:
 11469   001932                     
 11470                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 22:         RB5_pin_init_value^=1;
 11471   001932  0E01               	movlw	1
 11472   001934  1A4D               	xorwf	_RB5_pin_init_value^0,f,c	;volatile
 11473   001936                     
 11474                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 23:         RB5_ISR();
 11475   001936  EC0D  F022         	call	i2_RB5_ISR	;wreg free
 11476   00193A                     i2l1121:
 11477                           
 11478                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 26:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>6)&((uint8)0x01)))!=RB6_pin_init_value)){
 11479   00193A  A0F1               	btfss	241,0,c	;volatile
 11480   00193C  EFA2  F00C         	goto	i2u759_41
 11481   001940  EFA4  F00C         	goto	i2u759_40
 11482   001944                     i2u759_41:
 11483   001944  EFBB  F00C         	goto	i2l1123
 11484   001948                     i2u759_40:
 11485   001948  A0F2               	btfss	242,0,c	;volatile
 11486   00194A  EFA9  F00C         	goto	i2u760_41
 11487   00194E  EFAB  F00C         	goto	i2u760_40
 11488   001952                     i2u760_41:
 11489   001952  EFBB  F00C         	goto	i2l1123
 11490   001956                     i2u760_40:
 11491   001956  4481               	rlncf	129,w,c	;volatile
 11492   001958  46E8               	rlncf	wreg,f,c
 11493   00195A  0B03               	andlw	3
 11494   00195C  0B01               	andlw	1
 11495   00195E  184C               	xorwf	_RB6_pin_init_value^0,w,c	;volatile
 11496   001960  B4D8               	btfsc	status,2,c
 11497   001962  EFB5  F00C         	goto	i2u761_41
 11498   001966  EFB7  F00C         	goto	i2u761_40
 11499   00196A                     i2u761_41:
 11500   00196A  EFBB  F00C         	goto	i2l1123
 11501   00196E                     i2u761_40:
 11502   00196E                     
 11503                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 27:         RB6_pin_init_value^=1;
 11504   00196E  0E01               	movlw	1
 11505   001970  1A4C               	xorwf	_RB6_pin_init_value^0,f,c	;volatile
 11506   001972                     
 11507                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 28:         RB6_ISR();
 11508   001972  EC0B  F022         	call	i2_RB6_ISR	;wreg free
 11509   001976                     i2l1123:
 11510                           
 11511                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 31:        if((1 == (*((volatile INTCON2
      +                          _t *)(0xFF1))).RBIP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).RBIF) && (((((*((volatile 
      +                          uint8*)(0xF81)))>>7)&((uint8)0x01)))!=RB7_pin_init_value)){
 11512   001976  A0F1               	btfss	241,0,c	;volatile
 11513   001978  EFC0  F00C         	goto	i2u762_41
 11514   00197C  EFC2  F00C         	goto	i2u762_40
 11515   001980                     i2u762_41:
 11516   001980  EFD7  F00C         	goto	i2l1125
 11517   001984                     i2u762_40:
 11518   001984  A0F2               	btfss	242,0,c	;volatile
 11519   001986  EFC7  F00C         	goto	i2u763_41
 11520   00198A  EFC9  F00C         	goto	i2u763_40
 11521   00198E                     i2u763_41:
 11522   00198E  EFD7  F00C         	goto	i2l1125
 11523   001992                     i2u763_40:
 11524   001992  4481               	rlncf	129,w,c	;volatile
 11525   001994  0B01               	andlw	1
 11526   001996  184B               	xorwf	_RB7_pin_init_value^0,w,c	;volatile
 11527   001998  B4D8               	btfsc	status,2,c
 11528   00199A  EFD1  F00C         	goto	i2u764_41
 11529   00199E  EFD3  F00C         	goto	i2u764_40
 11530   0019A2                     i2u764_41:
 11531   0019A2  EFD7  F00C         	goto	i2l1125
 11532   0019A6                     i2u764_40:
 11533   0019A6                     
 11534                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 32:         RB7_pin_init_value^=1;
 11535   0019A6  0E01               	movlw	1
 11536   0019A8  1A4B               	xorwf	_RB7_pin_init_value^0,f,c	;volatile
 11537   0019AA                     
 11538                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 33:         RB7_ISR();
 11539   0019AA  EC09  F022         	call	i2_RB7_ISR	;wreg free
 11540   0019AE                     i2l1125:
 11541                           
 11542                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 36:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).ADIP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).ADIF)){
 11543   0019AE  AC9F               	btfss	159,6,c	;volatile
 11544   0019B0  EFDC  F00C         	goto	i2u765_41
 11545   0019B4  EFDE  F00C         	goto	i2u765_40
 11546   0019B8                     i2u765_41:
 11547   0019B8  EFE7  F00C         	goto	i2l1127
 11548   0019BC                     i2u765_40:
 11549   0019BC  AC9E               	btfss	158,6,c	;volatile
 11550   0019BE  EFE3  F00C         	goto	i2u766_41
 11551   0019C2  EFE5  F00C         	goto	i2u766_40
 11552   0019C6                     i2u766_41:
 11553   0019C6  EFE7  F00C         	goto	i2l1127
 11554   0019CA                     i2u766_40:
 11555   0019CA                     
 11556                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 37:         ADC_ISR();
 11557   0019CA  EC15  F022         	call	i2_ADC_ISR	;wreg free
 11558   0019CE                     i2l1127:
 11559                           
 11560                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 40:     if((1 == (*((volatile INTCON2_t 
      +                          *)(0xFF1))).TMR0IP)&&(1 == (*((volatile INTCON_t *)(0xFF2))).TMR0IF)){
 11561   0019CE  A4F1               	btfss	241,2,c	;volatile
 11562   0019D0  EFEC  F00C         	goto	i2u767_41
 11563   0019D4  EFEE  F00C         	goto	i2u767_40
 11564   0019D8                     i2u767_41:
 11565   0019D8  EFF7  F00C         	goto	i2l1129
 11566   0019DC                     i2u767_40:
 11567   0019DC  A4F2               	btfss	242,2,c	;volatile
 11568   0019DE  EFF3  F00C         	goto	i2u768_41
 11569   0019E2  EFF5  F00C         	goto	i2u768_40
 11570   0019E6                     i2u768_41:
 11571   0019E6  EFF7  F00C         	goto	i2l1129
 11572   0019EA                     i2u768_40:
 11573   0019EA                     
 11574                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 41:         TMR0_ISR();
 11575   0019EA  ECE8  F021         	call	i2_TMR0_ISR	;wreg free
 11576   0019EE                     i2l1129:
 11577                           
 11578                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 44:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).TMR1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR1IF)){
 11579   0019EE  A09F               	btfss	159,0,c	;volatile
 11580   0019F0  EFFC  F00C         	goto	i2u769_41
 11581   0019F4  EFFE  F00C         	goto	i2u769_40
 11582   0019F8                     i2u769_41:
 11583   0019F8  EF07  F00D         	goto	i2l1131
 11584   0019FC                     i2u769_40:
 11585   0019FC  A09E               	btfss	158,0,c	;volatile
 11586   0019FE  EF03  F00D         	goto	i2u770_41
 11587   001A02  EF05  F00D         	goto	i2u770_40
 11588   001A06                     i2u770_41:
 11589   001A06  EF07  F00D         	goto	i2l1131
 11590   001A0A                     i2u770_40:
 11591   001A0A                     
 11592                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45:         TMR1_ISR();
 11593   001A0A  ECFB  F020         	call	i2_TMR1_ISR	;wreg free
 11594   001A0E                     i2l1131:
 11595                           
 11596                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 48:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).TMR2IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).TMR2IF)){
 11597   001A0E  A29F               	btfss	159,1,c	;volatile
 11598   001A10  EF0C  F00D         	goto	i2u771_41
 11599   001A14  EF0E  F00D         	goto	i2u771_40
 11600   001A18                     i2u771_41:
 11601   001A18  EF17  F00D         	goto	i2l1133
 11602   001A1C                     i2u771_40:
 11603   001A1C  A29E               	btfss	158,1,c	;volatile
 11604   001A1E  EF13  F00D         	goto	i2u772_41
 11605   001A22  EF15  F00D         	goto	i2u772_40
 11606   001A26                     i2u772_41:
 11607   001A26  EF17  F00D         	goto	i2l1133
 11608   001A2A                     i2u772_40:
 11609   001A2A                     
 11610                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 49:         TMR2_ISR();
 11611   001A2A  ECF6  F021         	call	i2_TMR2_ISR	;wreg free
 11612   001A2E                     i2l1133:
 11613                           
 11614                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52:     if((1 == (*((volatile IPR2_t *)(
      +                          0xFA2))).TMR3IP)&&(1 == (*((volatile PIR2_t *)(0xFA1))).TMR3IF)){
 11615   001A2E  A2A2               	btfss	162,1,c	;volatile
 11616   001A30  EF1C  F00D         	goto	i2u773_41
 11617   001A34  EF1E  F00D         	goto	i2u773_40
 11618   001A38                     i2u773_41:
 11619   001A38  EF27  F00D         	goto	i2l1135
 11620   001A3C                     i2u773_40:
 11621   001A3C  A2A1               	btfss	161,1,c	;volatile
 11622   001A3E  EF23  F00D         	goto	i2u774_41
 11623   001A42  EF25  F00D         	goto	i2u774_40
 11624   001A46                     i2u774_41:
 11625   001A46  EF27  F00D         	goto	i2l1135
 11626   001A4A                     i2u774_40:
 11627   001A4A                     
 11628                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 53:         TMR3_ISR();
 11629   001A4A  ECE2  F021         	call	i2_TMR3_ISR	;wreg free
 11630   001A4E                     i2l1135:
 11631                           
 11632                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56:     if((1 == (*((volatile IPR1_t *)(
      +                          0xF9F))).CCP1IP)&&(1 == (*((volatile PIR1_t *)(0xF9E))).CCP1IF)){
 11633   001A4E  A49F               	btfss	159,2,c	;volatile
 11634   001A50  EF2C  F00D         	goto	i2u775_41
 11635   001A54  EF2E  F00D         	goto	i2u775_40
 11636   001A58                     i2u775_41:
 11637   001A58  EF37  F00D         	goto	i2l1137
 11638   001A5C                     i2u775_40:
 11639   001A5C  A49E               	btfss	158,2,c	;volatile
 11640   001A5E  EF33  F00D         	goto	i2u776_41
 11641   001A62  EF35  F00D         	goto	i2u776_40
 11642   001A66                     i2u776_41:
 11643   001A66  EF37  F00D         	goto	i2l1137
 11644   001A6A                     i2u776_40:
 11645   001A6A                     
 11646                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57:         CCP1_ISR();
 11647   001A6A  EC5B  F021         	call	i2_CCP1_ISR	;wreg free
 11648   001A6E                     i2l1137:
 11649                           
 11650                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60:       if((1 == (*((volatile IPR2_t *
      +                          )(0xFA2))).CCP2IP)&&(1 == (*((volatile PIR2_t *)(0xFA1))).CCP2IF)){
 11651   001A6E  A0A2               	btfss	162,0,c	;volatile
 11652   001A70  EF3C  F00D         	goto	i2u777_41
 11653   001A74  EF3E  F00D         	goto	i2u777_40
 11654   001A78                     i2u777_41:
 11655   001A78  EF47  F00D         	goto	i2l1140
 11656   001A7C                     i2u777_40:
 11657   001A7C  A0A1               	btfss	161,0,c	;volatile
 11658   001A7E  EF43  F00D         	goto	i2u778_41
 11659   001A82  EF45  F00D         	goto	i2u778_40
 11660   001A86                     i2u778_41:
 11661   001A86  EF47  F00D         	goto	i2l1140
 11662   001A8A                     i2u778_40:
 11663   001A8A                     
 11664                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61:         CCP2_ISR();
 11665   001A8A  EC44  F021         	call	i2_CCP2_ISR	;wreg free
 11666   001A8E                     i2l1140:
 11667   001A8E  C012  FFDA         	movff	??_InterruptManagerHigh+3,fsr2h
 11668   001A92  C011  FFD9         	movff	??_InterruptManagerHigh+2,fsr2l
 11669   001A96  C010  FFFB         	movff	??_InterruptManagerHigh+1,pclatu
 11670   001A9A  C00F  FFFA         	movff	??_InterruptManagerHigh,pclath
 11671   001A9E  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11672   001AA0  0011               	retfie		f
 11673   001AA2                     __end_of_InterruptManagerHigh:
 11674                           	callstack 0
 11675                           
 11676 ;; *************** function i2_TMR3_ISR *****************
 11677 ;; Defined at:
 11678 ;;		line 139 in file "MCAL_Layer/Timer3/hal_timer3.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;		None
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;		None
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      void 
 11685 ;; Registers used:
 11686 ;;		wreg, status,2
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11696 ;;Total ram usage:        0 bytes
 11697 ;; Hardware stack levels used: 1
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_InterruptManagerHigh
 11702 ;; This function uses a non-reentrant model
 11703 ;;
 11704                           
 11705                           	psect	text72
 11706   0043C4                     __ptext72:
 11707                           	callstack 0
 11708   0043C4                     i2_TMR3_ISR:
 11709                           	callstack 15
 11710   0043C4                     
 11711                           ;MCAL_Layer/Timer3/hal_timer3.c: 141:     (*((volatile uint8 *)(0xFB3))) = (timer3_prelo
      +                          ad)>>8;
 11712   0043C4  5032               	movf	(_timer3_preload+1)^0,w,c
 11713   0043C6  6EB3               	movwf	179,c	;volatile
 11714   0043C8                     
 11715                           ;MCAL_Layer/Timer3/hal_timer3.c: 142:     (*((volatile uint8 *)(0xFB2))) = (uint8)(timer
      +                          3_preload);
 11716   0043C8  C031  FFB2         	movff	_timer3_preload,4018	;volatile
 11717   0043CC                     
 11718                           ;MCAL_Layer/Timer3/hal_timer3.c: 143:     ((*((volatile PIR2_t *)(0xFA1))).TMR3IF=0);
 11719   0043CC  92A1               	bcf	161,1,c	;volatile
 11720   0043CE  0012               	return		;funcret
 11721   0043D0                     __end_ofi2_TMR3_ISR:
 11722                           	callstack 0
 11723                           
 11724 ;; *************** function i2_TMR2_ISR *****************
 11725 ;; Defined at:
 11726 ;;		line 111 in file "MCAL_Layer/Timer2/hal_timer2.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;		None
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;		None
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  1    wreg      void 
 11733 ;; Registers used:
 11734 ;;		None
 11735 ;; Tracked objects:
 11736 ;;		On entry : 0/0
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11744 ;;Total ram usage:        0 bytes
 11745 ;; Hardware stack levels used: 1
 11746 ;; This function calls:
 11747 ;;		Nothing
 11748 ;; This function is called by:
 11749 ;;		_InterruptManagerHigh
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           	psect	text73
 11754   0043EC                     __ptext73:
 11755                           	callstack 0
 11756   0043EC                     i2_TMR2_ISR:
 11757                           	callstack 15
 11758   0043EC                     
 11759                           ;MCAL_Layer/Timer2/hal_timer2.c: 112:     (*((volatile uint8 *)(0xFCC))) = timer2_preloa
      +                          d;
 11760   0043EC  C04A  FFCC         	movff	_timer2_preload,4044	;volatile
 11761   0043F0  0012               	return		;funcret
 11762   0043F2                     __end_ofi2_TMR2_ISR:
 11763                           	callstack 0
 11764                           
 11765 ;; *************** function i2_TMR1_ISR *****************
 11766 ;; Defined at:
 11767 ;;		line 114 in file "MCAL_Layer/Timer1/hal_timer1.c"
 11768 ;; Parameters:    Size  Location     Type
 11769 ;;		None
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;		None
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  1    wreg      void 
 11774 ;; Registers used:
 11775 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/0
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;Total ram usage:        0 bytes
 11786 ;; Hardware stack levels used: 1
 11787 ;; Hardware stack levels required when called: 1
 11788 ;; This function calls:
 11789 ;;		NULL
 11790 ;;		i2_TMR1_Callback_ISR
 11791 ;; This function is called by:
 11792 ;;		_InterruptManagerHigh
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           	psect	text74
 11797   0041F6                     __ptext74:
 11798                           	callstack 0
 11799   0041F6                     i2_TMR1_ISR:
 11800                           	callstack 14
 11801   0041F6                     
 11802                           ;MCAL_Layer/Timer1/hal_timer1.c: 115:     (*((volatile uint8 *)(0xFCF))) = (timer1_prelo
      +                          ad)>>8;
 11803   0041F6  5034               	movf	(_timer1_preload+1)^0,w,c
 11804   0041F8  6ECF               	movwf	207,c	;volatile
 11805   0041FA                     
 11806                           ;MCAL_Layer/Timer1/hal_timer1.c: 116:     (*((volatile uint8 *)(0xFCE))) = (uint8)(timer
      +                          1_preload);
 11807   0041FA  C033  FFCE         	movff	_timer1_preload,4046	;volatile
 11808   0041FE                     
 11809                           ;MCAL_Layer/Timer1/hal_timer1.c: 117:     ((*((volatile PIR1_t *)(0xF9E))).TMR1IF=0);
 11810   0041FE  909E               	bcf	158,0,c	;volatile
 11811   004200                     
 11812                           ;MCAL_Layer/Timer1/hal_timer1.c: 118:       if(TMR1_InterruptHandler){
 11813   004200  5035               	movf	_TMR1_InterruptHandler^0,w,c
 11814   004202  1036               	iorwf	(_TMR1_InterruptHandler+1)^0,w,c
 11815   004204  B4D8               	btfsc	status,2,c
 11816   004206  EF07  F021         	goto	i2u217_41
 11817   00420A  EF09  F021         	goto	i2u217_40
 11818   00420E                     i2u217_41:
 11819   00420E  EF15  F021         	goto	i2l1275
 11820   004212                     i2u217_40:
 11821   004212                     
 11822                           ;MCAL_Layer/Timer1/hal_timer1.c: 119:        TMR1_InterruptHandler();
 11823   004212  D802               	call	i2u218_48
 11824   004214  EF15  F021         	goto	i2u218_49
 11825   004218                     i2u218_48:
 11826   004218  0005               	push	
 11827   00421A  6EFA               	movwf	pclath,c
 11828   00421C  5035               	movf	_TMR1_InterruptHandler^0,w,c
 11829   00421E  6EFD               	movwf	tosl,c
 11830   004220  5036               	movf	(_TMR1_InterruptHandler+1)^0,w,c
 11831   004222  6EFE               	movwf	tosh,c
 11832   004224  6AFF               	clrf	tosu,c
 11833   004226  50FA               	movf	pclath,w,c
 11834   004228  0012               	return		;indir
 11835   00422A                     i2u218_49:
 11836   00422A                     i2l1275:
 11837   00422A  0012               	return		;funcret
 11838   00422C                     __end_ofi2_TMR1_ISR:
 11839                           	callstack 0
 11840                           
 11841 ;; *************** function i2_TMR1_Callback_ISR *****************
 11842 ;; Defined at:
 11843 ;;		line 169 in file "Pulse_Meter.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;		None
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;		None
 11848 ;; Return value:  Size  Location     Type
 11849 ;;                  1    wreg      void 
 11850 ;; Registers used:
 11851 ;;		status,2, status,0
 11852 ;; Tracked objects:
 11853 ;;		On entry : 0/0
 11854 ;;		On exit  : 0/0
 11855 ;;		Unchanged: 0/0
 11856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11861 ;;Total ram usage:        0 bytes
 11862 ;; Hardware stack levels used: 1
 11863 ;; This function calls:
 11864 ;;		Nothing
 11865 ;; This function is called by:
 11866 ;;		_TMR1_ISR
 11867 ;;		i2_TMR1_ISR
 11868 ;; This function uses a non-reentrant model
 11869 ;;
 11870                           
 11871                           	psect	text75
 11872   00440E                     __ptext75:
 11873                           	callstack 0
 11874   00440E                     i2_TMR1_Callback_ISR:
 11875                           	callstack 14
 11876   00440E                     
 11877                           ;Pulse_Meter.c: 170:     ovf_cnt++;
 11878   00440E  2A49               	incf	_ovf_cnt^0,f,c	;volatile
 11879   004410  0012               	return		;funcret
 11880   004412                     __end_ofi2_TMR1_Callback_ISR:
 11881                           	callstack 0
 11882                           
 11883 ;; *************** function i2_TMR0_ISR *****************
 11884 ;; Defined at:
 11885 ;;		line 110 in file "MCAL_Layer/Timer0/hal_timer0.c"
 11886 ;; Parameters:    Size  Location     Type
 11887 ;;		None
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;		None
 11890 ;; Return value:  Size  Location     Type
 11891 ;;                  1    wreg      void 
 11892 ;; Registers used:
 11893 ;;		wreg, status,2
 11894 ;; Tracked objects:
 11895 ;;		On entry : 0/0
 11896 ;;		On exit  : 0/0
 11897 ;;		Unchanged: 0/0
 11898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11903 ;;Total ram usage:        0 bytes
 11904 ;; Hardware stack levels used: 1
 11905 ;; This function calls:
 11906 ;;		Nothing
 11907 ;; This function is called by:
 11908 ;;		_InterruptManagerHigh
 11909 ;; This function uses a non-reentrant model
 11910 ;;
 11911                           
 11912                           	psect	text76
 11913   0043D0                     __ptext76:
 11914                           	callstack 0
 11915   0043D0                     i2_TMR0_ISR:
 11916                           	callstack 15
 11917   0043D0                     
 11918                           ;MCAL_Layer/Timer0/hal_timer0.c: 112:     TMR0H = (timer0_preload)>>8;
 11919   0043D0  5038               	movf	(_timer0_preload+1)^0,w,c
 11920   0043D2  6ED7               	movwf	215,c	;volatile
 11921   0043D4                     
 11922                           ;MCAL_Layer/Timer0/hal_timer0.c: 113:     (*((volatile uint8 *)(0xFD6))) = (uint8)(timer
      +                          0_preload);
 11923   0043D4  C037  FFD6         	movff	_timer0_preload,4054	;volatile
 11924   0043D8                     
 11925                           ;MCAL_Layer/Timer0/hal_timer0.c: 114:     ((*((volatile INTCON_t *)(0xFF2))).TMR0IF=0);
 11926   0043D8  94F2               	bcf	242,2,c	;volatile
 11927   0043DA  0012               	return		;funcret
 11928   0043DC                     __end_ofi2_TMR0_ISR:
 11929                           	callstack 0
 11930                           
 11931 ;; *************** function i2_RB7_ISR *****************
 11932 ;; Defined at:
 11933 ;;		line 180 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;		None
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;		None
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		None
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11951 ;;Total ram usage:        0 bytes
 11952 ;; Hardware stack levels used: 1
 11953 ;; This function calls:
 11954 ;;		Nothing
 11955 ;; This function is called by:
 11956 ;;		_InterruptManagerHigh
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           	psect	text77
 11961   004412                     __ptext77:
 11962                           	callstack 0
 11963   004412                     i2_RB7_ISR:
 11964                           	callstack 15
 11965   004412                     
 11966                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 182:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 11967   004412  90F2               	bcf	242,0,c	;volatile
 11968   004414  0012               	return		;funcret
 11969   004416                     __end_ofi2_RB7_ISR:
 11970                           	callstack 0
 11971                           
 11972 ;; *************** function i2_RB6_ISR *****************
 11973 ;; Defined at:
 11974 ;;		line 172 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;		None
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;		None
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		None
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11992 ;;Total ram usage:        0 bytes
 11993 ;; Hardware stack levels used: 1
 11994 ;; This function calls:
 11995 ;;		Nothing
 11996 ;; This function is called by:
 11997 ;;		_InterruptManagerHigh
 11998 ;; This function uses a non-reentrant model
 11999 ;;
 12000                           
 12001                           	psect	text78
 12002   004416                     __ptext78:
 12003                           	callstack 0
 12004   004416                     i2_RB6_ISR:
 12005                           	callstack 15
 12006   004416                     
 12007                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 174:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 12008   004416  90F2               	bcf	242,0,c	;volatile
 12009   004418  0012               	return		;funcret
 12010   00441A                     __end_ofi2_RB6_ISR:
 12011                           	callstack 0
 12012                           
 12013 ;; *************** function i2_RB5_ISR *****************
 12014 ;; Defined at:
 12015 ;;		line 164 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 12016 ;; Parameters:    Size  Location     Type
 12017 ;;		None
 12018 ;; Auto vars:     Size  Location     Type
 12019 ;;		None
 12020 ;; Return value:  Size  Location     Type
 12021 ;;                  1    wreg      void 
 12022 ;; Registers used:
 12023 ;;		None
 12024 ;; Tracked objects:
 12025 ;;		On entry : 0/0
 12026 ;;		On exit  : 0/0
 12027 ;;		Unchanged: 0/0
 12028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12033 ;;Total ram usage:        0 bytes
 12034 ;; Hardware stack levels used: 1
 12035 ;; This function calls:
 12036 ;;		Nothing
 12037 ;; This function is called by:
 12038 ;;		_InterruptManagerHigh
 12039 ;; This function uses a non-reentrant model
 12040 ;;
 12041                           
 12042                           	psect	text79
 12043   00441A                     __ptext79:
 12044                           	callstack 0
 12045   00441A                     i2_RB5_ISR:
 12046                           	callstack 15
 12047   00441A                     
 12048                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 12049   00441A  90F2               	bcf	242,0,c	;volatile
 12050   00441C  0012               	return		;funcret
 12051   00441E                     __end_ofi2_RB5_ISR:
 12052                           	callstack 0
 12053                           
 12054 ;; *************** function i2_RB4_ISR *****************
 12055 ;; Defined at:
 12056 ;;		line 156 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 12057 ;; Parameters:    Size  Location     Type
 12058 ;;		None
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;		None
 12061 ;; Return value:  Size  Location     Type
 12062 ;;                  1    wreg      void 
 12063 ;; Registers used:
 12064 ;;		None
 12065 ;; Tracked objects:
 12066 ;;		On entry : 0/0
 12067 ;;		On exit  : 0/0
 12068 ;;		Unchanged: 0/0
 12069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12074 ;;Total ram usage:        0 bytes
 12075 ;; Hardware stack levels used: 1
 12076 ;; This function calls:
 12077 ;;		Nothing
 12078 ;; This function is called by:
 12079 ;;		_InterruptManagerHigh
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           	psect	text80
 12084   00441E                     __ptext80:
 12085                           	callstack 0
 12086   00441E                     i2_RB4_ISR:
 12087                           	callstack 15
 12088   00441E                     
 12089                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 158:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).RBIF=0);
 12090   00441E  90F2               	bcf	242,0,c	;volatile
 12091   004420  0012               	return		;funcret
 12092   004422                     __end_ofi2_RB4_ISR:
 12093                           	callstack 0
 12094                           
 12095 ;; *************** function i2_INT2_ISR *****************
 12096 ;; Defined at:
 12097 ;;		line 148 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;		None
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;		None
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      void 
 12104 ;; Registers used:
 12105 ;;		None
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12115 ;;Total ram usage:        0 bytes
 12116 ;; Hardware stack levels used: 1
 12117 ;; This function calls:
 12118 ;;		Nothing
 12119 ;; This function is called by:
 12120 ;;		_InterruptManagerHigh
 12121 ;; This function uses a non-reentrant model
 12122 ;;
 12123                           
 12124                           	psect	text81
 12125   004422                     __ptext81:
 12126                           	callstack 0
 12127   004422                     i2_INT2_ISR:
 12128                           	callstack 15
 12129   004422                     
 12130                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 150:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT2IF=0);
 12131   004422  92F0               	bcf	240,1,c	;volatile
 12132   004424  0012               	return		;funcret
 12133   004426                     __end_ofi2_INT2_ISR:
 12134                           	callstack 0
 12135                           
 12136 ;; *************** function i2_INT1_ISR *****************
 12137 ;; Defined at:
 12138 ;;		line 140 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 12139 ;; Parameters:    Size  Location     Type
 12140 ;;		None
 12141 ;; Auto vars:     Size  Location     Type
 12142 ;;		None
 12143 ;; Return value:  Size  Location     Type
 12144 ;;                  1    wreg      void 
 12145 ;; Registers used:
 12146 ;;		None
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/0
 12149 ;;		On exit  : 0/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12156 ;;Total ram usage:        0 bytes
 12157 ;; Hardware stack levels used: 1
 12158 ;; This function calls:
 12159 ;;		Nothing
 12160 ;; This function is called by:
 12161 ;;		_InterruptManagerHigh
 12162 ;; This function uses a non-reentrant model
 12163 ;;
 12164                           
 12165                           	psect	text82
 12166   004426                     __ptext82:
 12167                           	callstack 0
 12168   004426                     i2_INT1_ISR:
 12169                           	callstack 15
 12170   004426                     
 12171                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 142:     ((*((volatile INTCON3_t *)(0xF
      +                          F0))).INT1IF=0);
 12172   004426  90F0               	bcf	240,0,c	;volatile
 12173   004428  0012               	return		;funcret
 12174   00442A                     __end_ofi2_INT1_ISR:
 12175                           	callstack 0
 12176                           
 12177 ;; *************** function i2_CCP2_ISR *****************
 12178 ;; Defined at:
 12179 ;;		line 606 in file "MCAL_Layer/CCP/hal_ccp.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;		None
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;		None
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      void 
 12186 ;; Registers used:
 12187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12197 ;;Total ram usage:        0 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 2
 12200 ;; This function calls:
 12201 ;;		NULL
 12202 ;;		i2_CCP1_Callback_ISR
 12203 ;; This function is called by:
 12204 ;;		_InterruptManagerHigh
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208                           	psect	text83
 12209   004288                     __ptext83:
 12210                           	callstack 0
 12211   004288                     i2_CCP2_ISR:
 12212                           	callstack 13
 12213   004288                     
 12214                           ;MCAL_Layer/CCP/hal_ccp.c: 609:     ((*((volatile PIR2_t *)(0xFA1))).CCP2IF=0);
 12215   004288  90A1               	bcf	161,0,c	;volatile
 12216   00428A                     
 12217                           ;MCAL_Layer/CCP/hal_ccp.c: 610:       if(CCP2_InterruptHandler){
 12218   00428A  5041               	movf	_CCP2_InterruptHandler^0,w,c
 12219   00428C  1042               	iorwf	(_CCP2_InterruptHandler+1)^0,w,c
 12220   00428E  B4D8               	btfsc	status,2,c
 12221   004290  EF4C  F021         	goto	i2u664_41
 12222   004294  EF4E  F021         	goto	i2u664_40
 12223   004298                     i2u664_41:
 12224   004298  EF5A  F021         	goto	i2l646
 12225   00429C                     i2u664_40:
 12226   00429C                     
 12227                           ;MCAL_Layer/CCP/hal_ccp.c: 611:        CCP2_InterruptHandler();
 12228   00429C  D802               	call	i2u665_48
 12229   00429E  EF5A  F021         	goto	i2u665_49
 12230   0042A2                     i2u665_48:
 12231   0042A2  0005               	push	
 12232   0042A4  6EFA               	movwf	pclath,c
 12233   0042A6  5041               	movf	_CCP2_InterruptHandler^0,w,c
 12234   0042A8  6EFD               	movwf	tosl,c
 12235   0042AA  5042               	movf	(_CCP2_InterruptHandler+1)^0,w,c
 12236   0042AC  6EFE               	movwf	tosh,c
 12237   0042AE  6AFF               	clrf	tosu,c
 12238   0042B0  50FA               	movf	pclath,w,c
 12239   0042B2  0012               	return		;indir
 12240   0042B4                     i2u665_49:
 12241   0042B4                     i2l646:
 12242   0042B4  0012               	return		;funcret
 12243   0042B6                     __end_ofi2_CCP2_ISR:
 12244                           	callstack 0
 12245                           
 12246 ;; *************** function i2_CCP1_ISR *****************
 12247 ;; Defined at:
 12248 ;;		line 596 in file "MCAL_Layer/CCP/hal_ccp.c"
 12249 ;; Parameters:    Size  Location     Type
 12250 ;;		None
 12251 ;; Auto vars:     Size  Location     Type
 12252 ;;		None
 12253 ;; Return value:  Size  Location     Type
 12254 ;;                  1    wreg      void 
 12255 ;; Registers used:
 12256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12257 ;; Tracked objects:
 12258 ;;		On entry : 0/0
 12259 ;;		On exit  : 0/0
 12260 ;;		Unchanged: 0/0
 12261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12266 ;;Total ram usage:        0 bytes
 12267 ;; Hardware stack levels used: 1
 12268 ;; Hardware stack levels required when called: 2
 12269 ;; This function calls:
 12270 ;;		NULL
 12271 ;;		i2_CCP1_Callback_ISR
 12272 ;; This function is called by:
 12273 ;;		_InterruptManagerHigh
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           	psect	text84
 12278   0042B6                     __ptext84:
 12279                           	callstack 0
 12280   0042B6                     i2_CCP1_ISR:
 12281                           	callstack 13
 12282   0042B6                     
 12283                           ;MCAL_Layer/CCP/hal_ccp.c: 599:     ((*((volatile PIR1_t *)(0xF9E))).CCP1IF=0);
 12284   0042B6  949E               	bcf	158,2,c	;volatile
 12285   0042B8                     
 12286                           ;MCAL_Layer/CCP/hal_ccp.c: 600:       if(CCP1_InterruptHandler){
 12287   0042B8  5043               	movf	_CCP1_InterruptHandler^0,w,c
 12288   0042BA  1044               	iorwf	(_CCP1_InterruptHandler+1)^0,w,c
 12289   0042BC  B4D8               	btfsc	status,2,c
 12290   0042BE  EF63  F021         	goto	i2u662_41
 12291   0042C2  EF65  F021         	goto	i2u662_40
 12292   0042C6                     i2u662_41:
 12293   0042C6  EF71  F021         	goto	i2l641
 12294   0042CA                     i2u662_40:
 12295   0042CA                     
 12296                           ;MCAL_Layer/CCP/hal_ccp.c: 601:        CCP1_InterruptHandler();
 12297   0042CA  D802               	call	i2u663_48
 12298   0042CC  EF71  F021         	goto	i2u663_49
 12299   0042D0                     i2u663_48:
 12300   0042D0  0005               	push	
 12301   0042D2  6EFA               	movwf	pclath,c
 12302   0042D4  5043               	movf	_CCP1_InterruptHandler^0,w,c
 12303   0042D6  6EFD               	movwf	tosl,c
 12304   0042D8  5044               	movf	(_CCP1_InterruptHandler+1)^0,w,c
 12305   0042DA  6EFE               	movwf	tosh,c
 12306   0042DC  6AFF               	clrf	tosu,c
 12307   0042DE  50FA               	movf	pclath,w,c
 12308   0042E0  0012               	return		;indir
 12309   0042E2                     i2u663_49:
 12310   0042E2                     i2l641:
 12311   0042E2  0012               	return		;funcret
 12312   0042E4                     __end_ofi2_CCP1_ISR:
 12313                           	callstack 0
 12314                           
 12315 ;; *************** function i2_CCP1_Callback_ISR *****************
 12316 ;; Defined at:
 12317 ;;		line 134 in file "Pulse_Meter.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;		None
 12320 ;; Auto vars:     Size  Location     Type
 12321 ;;		None
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12334 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12335 ;;Total ram usage:        4 bytes
 12336 ;; Hardware stack levels used: 1
 12337 ;; Hardware stack levels required when called: 1
 12338 ;; This function calls:
 12339 ;;		i2_CCP_Capture_Mode_Read_Value
 12340 ;; This function is called by:
 12341 ;;		_CCP1_ISR
 12342 ;;		_CCP2_ISR
 12343 ;;		i2_CCP1_ISR
 12344 ;;		i2_CCP2_ISR
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           	psect	text85
 12349   002B9A                     __ptext85:
 12350                           	callstack 0
 12351   002B9A                     i2_CCP1_Callback_ISR:
 12352                           	callstack 13
 12353   002B9A                     
 12354                           ;Pulse_Meter.c: 135:    if (cap_flag == 0)
 12355   002B9A  0100               	movlb	0	; () banked
 12356   002B9C  51D6               	movf	_cap_flag& (0+255),w,b	;volatile
 12357   002B9E  A4D8               	btfss	status,2,c
 12358   002BA0  EFD4  F015         	goto	i2u644_41
 12359   002BA4  EFD6  F015         	goto	i2u644_40
 12360   002BA8                     i2u644_41:
 12361   002BA8  EFF4  F015         	goto	i2l7154
 12362   002BAC                     i2u644_40:
 12363   002BAC                     
 12364                           ; BSR set to: 0
 12365                           ;Pulse_Meter.c: 136:             {;Pulse_Meter.c: 137:                 ovf_cnt = 0;
 12366   002BAC  0E00               	movlw	0
 12367   002BAE  6E49               	movwf	_ovf_cnt^0,c	;volatile
 12368                           
 12369                           ;Pulse_Meter.c: 138:                 Cap1=0;
 12370   002BB0  0E00               	movlw	0
 12371   002BB2  6FE5               	movwf	_Cap1& (0+255),b	;volatile
 12372   002BB4  0E00               	movlw	0
 12373   002BB6  6FE6               	movwf	(_Cap1+1)& (0+255),b	;volatile
 12374   002BB8  0E00               	movlw	0
 12375   002BBA  6FE7               	movwf	(_Cap1+2)& (0+255),b	;volatile
 12376   002BBC  0E00               	movlw	0
 12377   002BBE  6FE8               	movwf	(_Cap1+3)& (0+255),b	;volatile
 12378                           
 12379                           ;Pulse_Meter.c: 139:                 cap_flag = 1;
 12380   002BC0  0E01               	movlw	1
 12381   002BC2  6FD6               	movwf	_cap_flag& (0+255),b	;volatile
 12382   002BC4                     
 12383                           ; BSR set to: 0
 12384                           ;Pulse_Meter.c: 140:                 CCP_Capture_Mode_Read_Value(&ccp1_obj,&Cap1);
 12385   002BC4  0E44               	movlw	low _ccp1_obj
 12386   002BC6  6E01               	movwf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,c
 12387   002BC8  0E01               	movlw	high _ccp1_obj
 12388   002BCA  6E02               	movwf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,c
 12389   002BCC  0EE5               	movlw	low _Cap1
 12390   002BCE  6E03               	movwf	i2CCP_Capture_Mode_Read_Value@capture_value^0,c
 12391   002BD0  0E00               	movlw	high _Cap1
 12392   002BD2  6E04               	movwf	(i2CCP_Capture_Mode_Read_Value@capture_value+1)^0,c
 12393   002BD4  ECA8  F01B         	call	i2_CCP_Capture_Mode_Read_Value	;wreg free
 12394   002BD8                     
 12395                           ;Pulse_Meter.c: 141:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8
      +                          )0x00));
 12396   002BD8  0EF0               	movlw	-16
 12397   002BDA  16BD               	andwf	189,f,c	;volatile
 12398   002BDC                     
 12399                           ;Pulse_Meter.c: 142:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8
      +                          )0x04));
 12400   002BDC  50BD               	movf	189,w,c	;volatile
 12401   002BDE  0BF0               	andlw	-16
 12402   002BE0  0904               	iorlw	4
 12403   002BE2  6EBD               	movwf	189,c	;volatile
 12404                           
 12405                           ;Pulse_Meter.c: 144:             }
 12406   002BE4  EF5D  F016         	goto	i2l1494
 12407   002BE8                     i2l7154:
 12408                           
 12409                           ; BSR set to: 0
 12410   002BE8  05D6               	decf	_cap_flag& (0+255),w,b	;volatile
 12411   002BEA  A4D8               	btfss	status,2,c
 12412   002BEC  EFFA  F015         	goto	i2u645_41
 12413   002BF0  EFFC  F015         	goto	i2u645_40
 12414   002BF4                     i2u645_41:
 12415   002BF4  EF2C  F016         	goto	i2l7166
 12416   002BF8                     i2u645_40:
 12417   002BF8                     
 12418                           ; BSR set to: 0
 12419                           ;Pulse_Meter.c: 146:                 Cap2 = 0;
 12420   002BF8  0E00               	movlw	0
 12421   002BFA  6FE1               	movwf	_Cap2& (0+255),b	;volatile
 12422   002BFC  0E00               	movlw	0
 12423   002BFE  6FE2               	movwf	(_Cap2+1)& (0+255),b	;volatile
 12424   002C00  0E00               	movlw	0
 12425   002C02  6FE3               	movwf	(_Cap2+2)& (0+255),b	;volatile
 12426   002C04  0E00               	movlw	0
 12427   002C06  6FE4               	movwf	(_Cap2+3)& (0+255),b	;volatile
 12428                           
 12429                           ;Pulse_Meter.c: 147:                 cap_flag = 2;
 12430   002C08  0E02               	movlw	2
 12431   002C0A  6FD6               	movwf	_cap_flag& (0+255),b	;volatile
 12432   002C0C                     
 12433                           ; BSR set to: 0
 12434                           ;Pulse_Meter.c: 148:                 CCP_Capture_Mode_Read_Value(&ccp1_obj,&Cap2);
 12435   002C0C  0E44               	movlw	low _ccp1_obj
 12436   002C0E  6E01               	movwf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,c
 12437   002C10  0E01               	movlw	high _ccp1_obj
 12438   002C12  6E02               	movwf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,c
 12439   002C14  0EE1               	movlw	low _Cap2
 12440   002C16  6E03               	movwf	i2CCP_Capture_Mode_Read_Value@capture_value^0,c
 12441   002C18  0E00               	movlw	high _Cap2
 12442   002C1A  6E04               	movwf	(i2CCP_Capture_Mode_Read_Value@capture_value+1)^0,c
 12443   002C1C  ECA8  F01B         	call	i2_CCP_Capture_Mode_Read_Value	;wreg free
 12444   002C20                     
 12445                           ;Pulse_Meter.c: 149:                 Cap2 += (ovf_cnt * 65536);
 12446   002C20  C049  F00B         	movff	_ovf_cnt,??i2_CCP1_Callback_ISR	;volatile
 12447   002C24  6A0C               	clrf	(??i2_CCP1_Callback_ISR+1)^0,c
 12448   002C26  6A0D               	clrf	(??i2_CCP1_Callback_ISR+2)^0,c
 12449   002C28  6A0E               	clrf	(??i2_CCP1_Callback_ISR+3)^0,c
 12450   002C2A  C00C  F00E         	movff	??i2_CCP1_Callback_ISR+1,??i2_CCP1_Callback_ISR+3
 12451   002C2E  C00B  F00D         	movff	??i2_CCP1_Callback_ISR,??i2_CCP1_Callback_ISR+2
 12452   002C32  6A0C               	clrf	(??i2_CCP1_Callback_ISR+1)^0,c
 12453   002C34  6A0B               	clrf	??i2_CCP1_Callback_ISR^0,c
 12454   002C36  500B               	movf	??i2_CCP1_Callback_ISR^0,w,c
 12455   002C38  0100               	movlb	0	; () banked
 12456   002C3A  27E1               	addwf	_Cap2& (0+255),f,b	;volatile
 12457   002C3C  500C               	movf	(??i2_CCP1_Callback_ISR+1)^0,w,c
 12458   002C3E  23E2               	addwfc	(_Cap2+1)& (0+255),f,b	;volatile
 12459   002C40  500D               	movf	(??i2_CCP1_Callback_ISR+2)^0,w,c
 12460   002C42  23E3               	addwfc	(_Cap2+2)& (0+255),f,b	;volatile
 12461   002C44  500E               	movf	(??i2_CCP1_Callback_ISR+3)^0,w,c
 12462   002C46  23E4               	addwfc	(_Cap2+3)& (0+255),f,b	;volatile
 12463   002C48                     
 12464                           ; BSR set to: 0
 12465                           ;Pulse_Meter.c: 150:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8
      +                          )0x00));
 12466   002C48  0EF0               	movlw	-16
 12467   002C4A  16BD               	andwf	189,f,c	;volatile
 12468   002C4C                     
 12469                           ; BSR set to: 0
 12470                           ;Pulse_Meter.c: 151:                 ((*((volatile CCP1CON_t *)(0xFBD))).CCP1M = ((uint8
      +                          )0x05));
 12471   002C4C  50BD               	movf	189,w,c	;volatile
 12472   002C4E  0BF0               	andlw	-16
 12473   002C50  0905               	iorlw	5
 12474   002C52  6EBD               	movwf	189,c	;volatile
 12475                           
 12476                           ;Pulse_Meter.c: 152:             }
 12477   002C54  EF5D  F016         	goto	i2l1494
 12478   002C58                     i2l7166:
 12479                           
 12480                           ; BSR set to: 0
 12481   002C58  0E02               	movlw	2
 12482   002C5A  19D6               	xorwf	_cap_flag& (0+255),w,b	;volatile
 12483   002C5C  A4D8               	btfss	status,2,c
 12484   002C5E  EF33  F016         	goto	i2u646_41
 12485   002C62  EF35  F016         	goto	i2u646_40
 12486   002C66                     i2u646_41:
 12487   002C66  EF5D  F016         	goto	i2l1494
 12488   002C6A                     i2u646_40:
 12489   002C6A                     
 12490                           ; BSR set to: 0
 12491                           ;Pulse_Meter.c: 154:             {;Pulse_Meter.c: 155:                 Cap3 = 0;
 12492   002C6A  0E00               	movlw	0
 12493   002C6C  6FDD               	movwf	_Cap3& (0+255),b	;volatile
 12494   002C6E  0E00               	movlw	0
 12495   002C70  6FDE               	movwf	(_Cap3+1)& (0+255),b	;volatile
 12496   002C72  0E00               	movlw	0
 12497   002C74  6FDF               	movwf	(_Cap3+2)& (0+255),b	;volatile
 12498   002C76  0E00               	movlw	0
 12499   002C78  6FE0               	movwf	(_Cap3+3)& (0+255),b	;volatile
 12500   002C7A                     
 12501                           ; BSR set to: 0
 12502                           ;Pulse_Meter.c: 156:                 CCP_Capture_Mode_Read_Value(&ccp1_obj,&Cap3);
 12503   002C7A  0E44               	movlw	low _ccp1_obj
 12504   002C7C  6E01               	movwf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,c
 12505   002C7E  0E01               	movlw	high _ccp1_obj
 12506   002C80  6E02               	movwf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,c
 12507   002C82  0EDD               	movlw	low _Cap3
 12508   002C84  6E03               	movwf	i2CCP_Capture_Mode_Read_Value@capture_value^0,c
 12509   002C86  0E00               	movlw	high _Cap3
 12510   002C88  6E04               	movwf	(i2CCP_Capture_Mode_Read_Value@capture_value+1)^0,c
 12511   002C8A  ECA8  F01B         	call	i2_CCP_Capture_Mode_Read_Value	;wreg free
 12512   002C8E                     
 12513                           ;Pulse_Meter.c: 157:                 Cap3 += (ovf_cnt * 65536);
 12514   002C8E  C049  F00B         	movff	_ovf_cnt,??i2_CCP1_Callback_ISR	;volatile
 12515   002C92  6A0C               	clrf	(??i2_CCP1_Callback_ISR+1)^0,c
 12516   002C94  6A0D               	clrf	(??i2_CCP1_Callback_ISR+2)^0,c
 12517   002C96  6A0E               	clrf	(??i2_CCP1_Callback_ISR+3)^0,c
 12518   002C98  C00C  F00E         	movff	??i2_CCP1_Callback_ISR+1,??i2_CCP1_Callback_ISR+3
 12519   002C9C  C00B  F00D         	movff	??i2_CCP1_Callback_ISR,??i2_CCP1_Callback_ISR+2
 12520   002CA0  6A0C               	clrf	(??i2_CCP1_Callback_ISR+1)^0,c
 12521   002CA2  6A0B               	clrf	??i2_CCP1_Callback_ISR^0,c
 12522   002CA4  500B               	movf	??i2_CCP1_Callback_ISR^0,w,c
 12523   002CA6  0100               	movlb	0	; () banked
 12524   002CA8  27DD               	addwf	_Cap3& (0+255),f,b	;volatile
 12525   002CAA  500C               	movf	(??i2_CCP1_Callback_ISR+1)^0,w,c
 12526   002CAC  23DE               	addwfc	(_Cap3+1)& (0+255),f,b	;volatile
 12527   002CAE  500D               	movf	(??i2_CCP1_Callback_ISR+2)^0,w,c
 12528   002CB0  23DF               	addwfc	(_Cap3+2)& (0+255),f,b	;volatile
 12529   002CB2  500E               	movf	(??i2_CCP1_Callback_ISR+3)^0,w,c
 12530   002CB4  23E0               	addwfc	(_Cap3+3)& (0+255),f,b	;volatile
 12531   002CB6                     
 12532                           ; BSR set to: 0
 12533                           ;Pulse_Meter.c: 158:                 cap_flag = 3;
 12534   002CB6  0E03               	movlw	3
 12535   002CB8  6FD6               	movwf	_cap_flag& (0+255),b	;volatile
 12536   002CBA                     i2l1494:
 12537   002CBA  0012               	return		;funcret
 12538   002CBC                     __end_ofi2_CCP1_Callback_ISR:
 12539                           	callstack 0
 12540                           
 12541 ;; *************** function i2_CCP_Capture_Mode_Read_Value *****************
 12542 ;; Defined at:
 12543 ;;		line 142 in file "MCAL_Layer/CCP/hal_ccp.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  _ccp_obj        2    0[COMRAM] PTR const struct .
 12546 ;;		 -> ccp1_obj(13), 
 12547 ;;  capture_valu    2    2[COMRAM] PTR unsigned long 
 12548 ;;		 -> Cap3(4), Cap1(4), Cap2(4), 
 12549 ;; Auto vars:     Size  Location     Type
 12550 ;;  capture_temp    2    8[COMRAM] struct .
 12551 ;;  ret             1    0        unsigned char 
 12552 ;; Return value:  Size  Location     Type
 12553 ;;                  1    wreg      unsigned char 
 12554 ;; Registers used:
 12555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12556 ;; Tracked objects:
 12557 ;;		On entry : 0/0
 12558 ;;		On exit  : 0/0
 12559 ;;		Unchanged: 0/0
 12560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12561 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;Total ram usage:       10 bytes
 12566 ;; Hardware stack levels used: 1
 12567 ;; This function calls:
 12568 ;;		Nothing
 12569 ;; This function is called by:
 12570 ;;		i2_CCP1_Callback_ISR
 12571 ;; This function uses a non-reentrant model
 12572 ;;
 12573                           
 12574                           	psect	text86
 12575   003750                     __ptext86:
 12576                           	callstack 0
 12577   003750                     i2_CCP_Capture_Mode_Read_Value:
 12578                           	callstack 13
 12579   003750                     
 12580                           ;MCAL_Layer/CCP/hal_ccp.c: 145:     CCP_REG_T capture_temp_value = {0};
 12581   003750  C03F  F009         	movff	CCP_Capture_Mode_Read_Value@F3461,i2CCP_Capture_Mode_Read_Value@capture_temp_valu
      +                          e
 12582   003754  C040  F00A         	movff	CCP_Capture_Mode_Read_Value@F3461+1,i2CCP_Capture_Mode_Read_Value@capture_temp_va
      +                          lue+1
 12583   003758                     
 12584                           ;MCAL_Layer/CCP/hal_ccp.c: 146:     if( (capture_value==((void*)0)) || (_ccp_obj == ((vo
      +                          id*)0)) )
 12585   003758  5003               	movf	i2CCP_Capture_Mode_Read_Value@capture_value^0,w,c
 12586   00375A  1004               	iorwf	(i2CCP_Capture_Mode_Read_Value@capture_value+1)^0,w,c
 12587   00375C  B4D8               	btfsc	status,2,c
 12588   00375E  EFB3  F01B         	goto	i2u562_41
 12589   003762  EFB5  F01B         	goto	i2u562_40
 12590   003766                     i2u562_41:
 12591   003766  EFBE  F01B         	goto	i2l6606
 12592   00376A                     i2u562_40:
 12593   00376A  5001               	movf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 12594   00376C  1002               	iorwf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 12595   00376E  A4D8               	btfss	status,2,c
 12596   003770  EFBC  F01B         	goto	i2u563_41
 12597   003774  EFBE  F01B         	goto	i2u563_40
 12598   003778                     i2u563_41:
 12599   003778  EFC0  F01B         	goto	i2l6608
 12600   00377C                     i2u563_40:
 12601   00377C                     i2l6606:
 12602                           
 12603                           ;MCAL_Layer/CCP/hal_ccp.c: 149:     }
 12604   00377C  EFFA  F01B         	goto	i2l528
 12605   003780                     i2l6608:
 12606                           
 12607                           ;MCAL_Layer/CCP/hal_ccp.c: 151:     {;MCAL_Layer/CCP/hal_ccp.c: 152:         if (_ccp_ob
      +                          j->ccp_inst == CCP1_INST)
 12608   003780  EE20 F001          	lfsr	2,1
 12609   003784  5001               	movf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 12610   003786  26D9               	addwf	fsr2l,f,c
 12611   003788  5002               	movf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 12612   00378A  22DA               	addwfc	fsr2h,f,c
 12613   00378C  50DF               	movf	indf2,w,c
 12614   00378E  A4D8               	btfss	status,2,c
 12615   003790  EFCC  F01B         	goto	i2u564_41
 12616   003794  EFCE  F01B         	goto	i2u564_40
 12617   003798                     i2u564_41:
 12618   003798  EFD4  F01B         	goto	i2l6612
 12619   00379C                     i2u564_40:
 12620   00379C                     
 12621                           ;MCAL_Layer/CCP/hal_ccp.c: 153:         {;MCAL_Layer/CCP/hal_ccp.c: 154:            capt
      +                          ure_temp_value.ccpr_low = (*( (volatile uint8 *)(0xFBE) ) );
 12622   00379C  CFBE F009          	movff	4030,i2CCP_Capture_Mode_Read_Value@capture_temp_value	;volatile
 12623                           
 12624                           ;MCAL_Layer/CCP/hal_ccp.c: 155:            capture_temp_value.ccpr_high = (*( (volatile 
      +                          uint8 *)(0xFBF) ) );
 12625   0037A0  CFBF F00A          	movff	4031,i2CCP_Capture_Mode_Read_Value@capture_temp_value+1	;volatile
 12626                           
 12627                           ;MCAL_Layer/CCP/hal_ccp.c: 156:         }
 12628   0037A4  EFE8  F01B         	goto	i2l6618
 12629   0037A8                     i2l6612:
 12630   0037A8  EE20 F001          	lfsr	2,1
 12631   0037AC  5001               	movf	i2CCP_Capture_Mode_Read_Value@_ccp_obj^0,w,c
 12632   0037AE  26D9               	addwf	fsr2l,f,c
 12633   0037B0  5002               	movf	(i2CCP_Capture_Mode_Read_Value@_ccp_obj+1)^0,w,c
 12634   0037B2  22DA               	addwfc	fsr2h,f,c
 12635   0037B4  04DE               	decf	postinc2,w,c
 12636   0037B6  A4D8               	btfss	status,2,c
 12637   0037B8  EFE0  F01B         	goto	i2u565_41
 12638   0037BC  EFE2  F01B         	goto	i2u565_40
 12639   0037C0                     i2u565_41:
 12640   0037C0  EFE8  F01B         	goto	i2l6616
 12641   0037C4                     i2u565_40:
 12642   0037C4                     
 12643                           ;MCAL_Layer/CCP/hal_ccp.c: 158:         {;MCAL_Layer/CCP/hal_ccp.c: 159:            capt
      +                          ure_temp_value.ccpr_low = (*( (volatile uint8 *)(0xFBB) ) );
 12644   0037C4  CFBB F009          	movff	4027,i2CCP_Capture_Mode_Read_Value@capture_temp_value	;volatile
 12645                           
 12646                           ;MCAL_Layer/CCP/hal_ccp.c: 160:            capture_temp_value.ccpr_high = (*( (volatile 
      +                          uint8 *)(0xFBC) ) );
 12647   0037C8  CFBC F00A          	movff	4028,i2CCP_Capture_Mode_Read_Value@capture_temp_value+1	;volatile
 12648                           
 12649                           ;MCAL_Layer/CCP/hal_ccp.c: 161:         }
 12650   0037CC  EFE8  F01B         	goto	i2l6618
 12651   0037D0                     i2l6616:
 12652   0037D0                     i2l6618:
 12653                           
 12654                           ;MCAL_Layer/CCP/hal_ccp.c: 163:         *capture_value = capture_temp_value.ccpr_16Bit;
 12655   0037D0  5009               	movf	i2CCP_Capture_Mode_Read_Value@capture_temp_value^0,w,c
 12656   0037D2  6E05               	movwf	??i2_CCP_Capture_Mode_Read_Value^0,c
 12657   0037D4  500A               	movf	(i2CCP_Capture_Mode_Read_Value@capture_temp_value+1)^0,w,c
 12658   0037D6  6E06               	movwf	(??i2_CCP_Capture_Mode_Read_Value+1)^0,c
 12659   0037D8  6A07               	clrf	(??i2_CCP_Capture_Mode_Read_Value+2)^0,c
 12660   0037DA  6A08               	clrf	(??i2_CCP_Capture_Mode_Read_Value+3)^0,c
 12661   0037DC  C003  FFD9         	movff	i2CCP_Capture_Mode_Read_Value@capture_value,fsr2l
 12662   0037E0  C004  FFDA         	movff	i2CCP_Capture_Mode_Read_Value@capture_value+1,fsr2h
 12663   0037E4  C005  FFDE         	movff	??i2_CCP_Capture_Mode_Read_Value,postinc2
 12664   0037E8  C006  FFDE         	movff	??i2_CCP_Capture_Mode_Read_Value+1,postinc2
 12665   0037EC  C007  FFDE         	movff	??i2_CCP_Capture_Mode_Read_Value+2,postinc2
 12666   0037F0  C008  FFDE         	movff	??i2_CCP_Capture_Mode_Read_Value+3,postinc2
 12667   0037F4                     i2l528:
 12668   0037F4  0012               	return		;funcret
 12669   0037F6                     __end_ofi2_CCP_Capture_Mode_Read_Value:
 12670                           	callstack 0
 12671                           
 12672 ;; *************** function i2_ADC_ISR *****************
 12673 ;; Defined at:
 12674 ;;		line 3 in file "MCAL_Layer/Interrupt/mcal_internal_interrupt.c"
 12675 ;; Parameters:    Size  Location     Type
 12676 ;;		None
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;		None
 12679 ;; Return value:  Size  Location     Type
 12680 ;;                  1    wreg      void 
 12681 ;; Registers used:
 12682 ;;		None
 12683 ;; Tracked objects:
 12684 ;;		On entry : 0/0
 12685 ;;		On exit  : 0/0
 12686 ;;		Unchanged: 0/0
 12687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12692 ;;Total ram usage:        0 bytes
 12693 ;; Hardware stack levels used: 1
 12694 ;; This function calls:
 12695 ;;		Nothing
 12696 ;; This function is called by:
 12697 ;;		_InterruptManagerHigh
 12698 ;; This function uses a non-reentrant model
 12699 ;;
 12700                           
 12701                           	psect	text87
 12702   00442A                     __ptext87:
 12703                           	callstack 0
 12704   00442A                     i2_ADC_ISR:
 12705                           	callstack 15
 12706   00442A                     
 12707                           ;MCAL_Layer/Interrupt/mcal_internal_interrupt.c: 5:        ((*((volatile PIR1_t *)(0xF9E
      +                          ))).ADIF=0);
 12708   00442A  9C9E               	bcf	158,6,c	;volatile
 12709   00442C  0012               	return		;funcret
 12710   00442E                     __end_ofi2_ADC_ISR:
 12711                           	callstack 0
 12712                           
 12713 ;; *************** function _INT0_ISR *****************
 12714 ;; Defined at:
 12715 ;;		line 132 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
 12716 ;; Parameters:    Size  Location     Type
 12717 ;;		None
 12718 ;; Auto vars:     Size  Location     Type
 12719 ;;		None
 12720 ;; Return value:  Size  Location     Type
 12721 ;;                  1    wreg      void 
 12722 ;; Registers used:
 12723 ;;		None
 12724 ;; Tracked objects:
 12725 ;;		On entry : 0/0
 12726 ;;		On exit  : 0/0
 12727 ;;		Unchanged: 0/0
 12728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12733 ;;Total ram usage:        0 bytes
 12734 ;; Hardware stack levels used: 1
 12735 ;; This function calls:
 12736 ;;		Nothing
 12737 ;; This function is called by:
 12738 ;;		_InterruptManagerHigh
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           	psect	text88
 12743   00442E                     __ptext88:
 12744                           	callstack 0
 12745   00442E                     _INT0_ISR:
 12746                           	callstack 15
 12747   00442E                     
 12748                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 134:     ((*((volatile INTCON_t *)(0xFF
      +                          2))).INT0IF=0);
 12749   00442E  92F2               	bcf	242,1,c	;volatile
 12750   004430  0012               	return		;funcret
 12751   004432                     __end_of_INT0_ISR:
 12752                           	callstack 0
 12753                           
 12754                           	psect	text89
 12755   000000                     __ptext89:
 12756                           	callstack 0
 12757   000000                     
 12758                           	psect	rparam
 12759   000000                     
 12760                           	psect	temp
 12761   000058                     btemp:
 12762                           	callstack 0
 12763   000058                     	ds	1
 12764   000000                     int$flags	set	btemp
 12765   000000                     wtemp8	set	btemp+1
 12766   000000                     ttemp5	set	btemp+1
 12767   000000                     ttemp6	set	btemp+4
 12768   000000                     ttemp7	set	btemp+8
 12769                           
 12770                           	psect	config
 12771                           
 12772                           ; Padding undefined space
 12773   300000                     	org	3145728
 12774   300000  FF                 	db	255
 12775                           
 12776                           ;Config register CONFIG1H @ 0x300001
 12777                           ;	Oscillator Selection bits
 12778                           ;	OSC = HS, HS oscillator
 12779                           ;	Fail-Safe Clock Monitor Enable bit
 12780                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12781                           ;	Internal/External Oscillator Switchover bit
 12782                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12783   300001                     	org	3145729
 12784   300001  02                 	db	2
 12785                           
 12786                           ;Config register CONFIG2L @ 0x300002
 12787                           ;	Power-up Timer Enable bit
 12788                           ;	PWRT = OFF, PWRT disabled
 12789                           ;	Brown-out Reset Enable bits
 12790                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 12791                           ;	Brown Out Reset Voltage bits
 12792                           ;	BORV = 1, 
 12793   300002                     	org	3145730
 12794   300002  09                 	db	9
 12795                           
 12796                           ;Config register CONFIG2H @ 0x300003
 12797                           ;	Watchdog Timer Enable bit
 12798                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12799                           ;	Watchdog Timer Postscale Select bits
 12800                           ;	WDTPS = 32768, 1:32768
 12801   300003                     	org	3145731
 12802   300003  1E                 	db	30
 12803                           
 12804                           ; Padding undefined space
 12805   300004                     	org	3145732
 12806   300004  FF                 	db	255
 12807                           
 12808                           ;Config register CONFIG3H @ 0x300005
 12809                           ;	CCP2 MUX bit
 12810                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 12811                           ;	PORTB A/D Enable bit
 12812                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12813                           ;	Low-Power Timer1 Oscillator Enable bit
 12814                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12815                           ;	MCLR Pin Enable bit
 12816                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12817   300005                     	org	3145733
 12818   300005  81                 	db	129
 12819                           
 12820                           ;Config register CONFIG4L @ 0x300006
 12821                           ;	Stack Full/Underflow Reset Enable bit
 12822                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12823                           ;	Single-Supply ICSP Enable bit
 12824                           ;	LVP = OFF, Single-Supply ICSP disabled
 12825                           ;	Extended Instruction Set Enable bit
 12826                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12827                           ;	Background Debugger Enable bit
 12828                           ;	DEBUG = 0x1, unprogrammed default
 12829   300006                     	org	3145734
 12830   300006  81                 	db	129
 12831                           
 12832                           ; Padding undefined space
 12833   300007                     	org	3145735
 12834   300007  FF                 	db	255
 12835                           
 12836                           ;Config register CONFIG5L @ 0x300008
 12837                           ;	Code Protection bit
 12838                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 12839                           ;	Code Protection bit
 12840                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 12841                           ;	Code Protection bit
 12842                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 12843                           ;	Code Protection bit
 12844                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 12845   300008                     	org	3145736
 12846   300008  0F                 	db	15
 12847                           
 12848                           ;Config register CONFIG5H @ 0x300009
 12849                           ;	Boot Block Code Protection bit
 12850                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12851                           ;	Data EEPROM Code Protection bit
 12852                           ;	CPD = OFF, Data EEPROM not code-protected
 12853   300009                     	org	3145737
 12854   300009  C0                 	db	192
 12855                           
 12856                           ;Config register CONFIG6L @ 0x30000A
 12857                           ;	Write Protection bit
 12858                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 12859                           ;	Write Protection bit
 12860                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 12861                           ;	Write Protection bit
 12862                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 12863                           ;	Write Protection bit
 12864                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 12865   30000A                     	org	3145738
 12866   30000A  0F                 	db	15
 12867                           
 12868                           ;Config register CONFIG6H @ 0x30000B
 12869                           ;	Configuration Register Write Protection bit
 12870                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12871                           ;	Boot Block Write Protection bit
 12872                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12873                           ;	Data EEPROM Write Protection bit
 12874                           ;	WRTD = OFF, Data EEPROM not write-protected
 12875   30000B                     	org	3145739
 12876   30000B  E0                 	db	224
 12877                           
 12878                           ;Config register CONFIG7L @ 0x30000C
 12879                           ;	Table Read Protection bit
 12880                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 12881                           ;	Table Read Protection bit
 12882                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12883                           ;	Table Read Protection bit
 12884                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 12885                           ;	Table Read Protection bit
 12886                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 12887   30000C                     	org	3145740
 12888   30000C  0F                 	db	15
 12889                           
 12890                           ;Config register CONFIG7H @ 0x30000D
 12891                           ;	Boot Block Table Read Protection bit
 12892                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12893   30000D                     	org	3145741
 12894   30000D  40                 	db	64
 12895                           tosu	equ	0xFFF
 12896                           tosh	equ	0xFFE
 12897                           tosl	equ	0xFFD
 12898                           stkptr	equ	0xFFC
 12899                           pclatu	equ	0xFFB
 12900                           pclath	equ	0xFFA
 12901                           pcl	equ	0xFF9
 12902                           tblptru	equ	0xFF8
 12903                           tblptrh	equ	0xFF7
 12904                           tblptrl	equ	0xFF6
 12905                           tablat	equ	0xFF5
 12906                           prodh	equ	0xFF4
 12907                           prodl	equ	0xFF3
 12908                           indf0	equ	0xFEF
 12909                           postinc0	equ	0xFEE
 12910                           postdec0	equ	0xFED
 12911                           preinc0	equ	0xFEC
 12912                           plusw0	equ	0xFEB
 12913                           fsr0h	equ	0xFEA
 12914                           fsr0l	equ	0xFE9
 12915                           wreg	equ	0xFE8
 12916                           indf1	equ	0xFE7
 12917                           postinc1	equ	0xFE6
 12918                           postdec1	equ	0xFE5
 12919                           preinc1	equ	0xFE4
 12920                           plusw1	equ	0xFE3
 12921                           fsr1h	equ	0xFE2
 12922                           fsr1l	equ	0xFE1
 12923                           bsr	equ	0xFE0
 12924                           indf2	equ	0xFDF
 12925                           postinc2	equ	0xFDE
 12926                           postdec2	equ	0xFDD
 12927                           preinc2	equ	0xFDC
 12928                           plusw2	equ	0xFDB
 12929                           fsr2h	equ	0xFDA
 12930                           fsr2l	equ	0xFD9
 12931                           status	equ	0xFD8

Data Sizes:
    Strings     119
    Constant    16
    Data        37
    BSS         173
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     48      87
    BANK0           128     70     128
    BANK1           256     40     154
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S3359$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK1[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> convert_uint32_to_string@Temp_str(BANK1[11]), convert_uint16_to_string@Temp_str(COMRAM[6]), convert_uint8_to_string@Temp_str(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S3306$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3306$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 5
		 -> Pulse_Meter_Display@Duty_Cycle_Str(BANK1[4]), Pulse_Meter_Display@Freq_Str(BANK1[5]), 

    memset@s	PTR unsigned char  size(2) Largest target is 5
		 -> Pulse_Meter_Display@Duty_Cycle_Str(BANK1[4]), Pulse_Meter_Display@Freq_Str(BANK1[5]), 

    Pulse_Meter_Calculate@Pulse_Duty_Cycle	PTR unsigned char  size(2) Largest target is 1
		 -> Duty_Cycle(COMRAM[1]), 

    Pulse_Meter_Calculate@Pulse_Freq	PTR unsigned long  size(2) Largest target is 4
		 -> Frequency(BANK0[4]), 

    ccp1_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_CCP1_Callback_ISR(), CCP1_Callback_ISR(), 

    timer3_obj.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    timer1_obj.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_TMR1_Callback_ISR(), TMR1_Callback_ISR(), 

    ccp2_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2400$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer	PTR const struct . size(2) Largest target is 2
		 -> timer2_obj(BANK0[2]), 

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Callback_ISR(), 

    Timer1_Mode_Select@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer1_obj(BANK0[6]), 

    Timer1_Write_Value@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer1_obj(BANK0[6]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_TMR1_Callback_ISR(), TMR1_Callback_ISR(), NULL(), 

    S2226$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Callback_ISR(), 

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_Callback_ISR(), 

    Timer1_Init@_timer	PTR const struct . size(2) Largest target is 6
		 -> timer1_obj(BANK0[6]), 

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2076$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RBx_set_pin_init_value@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1598$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_Flag@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1556$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    RB7_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_write_logic@pin_config	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), led_turn_off@pin_obj(COMRAM[1]), 
		 -> led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), lcd1.lcd_data(BANK0[4]), lcd1(BANK0[6]), 
		 -> relay_initialize@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 3967
		 -> RAM(DATA[3967]), 

    CCP_Interrupt_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Interrupt_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), 

    CCP2_Interrupt_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_CCP1_Callback_ISR(), CCP1_Callback_ISR(), NULL(), 

    CCP2_Interrupt_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), 

    CCP1_Interrupt_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_CCP1_Callback_ISR(), CCP1_Callback_ISR(), NULL(), 

    CCP1_Interrupt_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), 

    CCP_Capture_Compare_Timer_Config@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Capture_Compare_Timer_Config@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), 

    CCP_PWM_Mode_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_PWM_Mode_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), 

    CCP_Capture_Mode_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Capture_Mode_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), 

    CCP_PWM_Stop@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_PWM_Start@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_PWM_Set_Duty@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_PWM_Set_Duty@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp2_obj(BANK1[13]), 

    CCP_Capture_Mode_Read_Value@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Capture_Mode_Read_Value@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), 

    CCP_Capture_Mode_Read_Value@capture_value	PTR unsigned long  size(2) Largest target is 4
		 -> Cap3(BANK0[4]), Cap1(BANK0[4]), Cap2(BANK0[4]), 

    CCP_IsCapturedDataReady@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_DeInit@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    S952$CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Init@_ccp_obj.CCP_Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_Callback_ISR(), 

    CCP_Init@_ccp_obj	PTR const struct . size(2) Largest target is 13
		 -> ccp1_obj(BANK1[13]), ccp2_obj(BANK1[13]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S718$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    lcd_4bit_set_cursor@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    convert_uint32_to_string@str	PTR unsigned char  size(2) Largest target is 5
		 -> Pulse_Meter_Display@Freq_Str(BANK1[5]), 

    sp__memset	PTR void  size(2) Largest target is 5
		 -> Pulse_Meter_Display@Duty_Cycle_Str(BANK1[4]), Pulse_Meter_Display@Freq_Str(BANK1[5]), 

    convert_uint8_to_string@str	PTR unsigned char  size(2) Largest target is 4
		 -> Pulse_Meter_Display@Duty_Cycle_Str(BANK1[4]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 21
		 -> STR_10(CODE[15]), STR_8(CODE[14]), STR_7(CODE[19]), STR_6(CODE[21]), 
		 -> STR_5(CODE[18]), STR_4(CODE[18]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_11(CODE[5]), STR_9(CODE[6]), Pulse_Meter_Display@Duty_Cycle_Str(BANK1[4]), Pulse_Meter_Display@Freq_Str(BANK1[5]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(2) Largest target is 6
		 -> lcd1(BANK0[6]), 


Critical Paths under _main in COMRAM

    _Timer2_Timer_Init->_Timer2_Init
    _Timer1_Timer_Init->_Timer1_Init
    _Timer1_Init->_Timer1_Mode_Select
    _CCP_Init->_CCP_PWM_Mode_Init
    _CCP_PWM_Mode_Init->___lmul
    ___lldiv->___lmul
    _CCP_Interrupt_Init->_CCP1_Interrupt_Init
    _CCP_Interrupt_Init->_CCP2_Interrupt_Init
    _CCP_Capture_Mode_Init->_CCP_Capture_Compare_Timer_Config
    _gpio_pin_initialize->_gpio_pin_direction_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _lcd_4bit_send_command->_gpio_pin_write_logic
    _lcd_4bit_send_char_data->_gpio_pin_write_logic
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _vfpfcnvrt->_fputc
    _pad->_fputc
    _fputs->_fputc
    _abs->___awmod
    _Pulse_Meter_Calculate->___lmul
    ___xxtofl->___lmul
    ___fltol->___lmul
    ___flmul->___lmul
    ___fldiv->___lmul

Critical Paths under _InterruptManagerLow in COMRAM

    _CCP2_ISR->_CCP1_Callback_ISR
    _CCP1_ISR->_CCP1_Callback_ISR
    _CCP1_Callback_ISR->_CCP_Capture_Mode_Read_Value

Critical Paths under _InterruptManagerHigh in COMRAM

    i2_CCP2_ISR->i2_CCP1_Callback_ISR
    i2_CCP1_ISR->i2_CCP1_Callback_ISR
    i2_CCP1_Callback_ISR->i2_CCP_Capture_Mode_Read_Value

Critical Paths under _main in BANK0

    _Welcome_Message->_lcd_4bit_send_string_pos
    _CCP2_PWM_1KHZ_INIT->_CCP_Init
    _CCP1_Capture_Mode_Init->_CCP_Init
    _CCP_Init->_CCP_PWM_Mode_Init
    _CCP_PWM_Mode_Init->___lldiv
    ___lldiv->___lmul
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _gpio_pin_initialize->_gpio_pin_write_logic
    _Pulse_Meter_Display->_convert_uint8_to_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _convert_uint8_to_string->_sprintf
    _convert_uint32_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _Pulse_Meter_Calculate->___fltol
    _CCP_PWM_Set_Duty->___fltol
    ___xxtofl->___lmul
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _InterruptManagerLow in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Pulse_Meter_Display
    _Pulse_Meter_Display->_convert_uint32_to_string
    _convert_uint8_to_string->_sprintf
    _convert_uint32_to_string->_sprintf
    _Pulse_Meter_Calculate->___fltol
    _CCP_PWM_Set_Duty->___fltol

Critical Paths under _InterruptManagerLow in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerLow in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerLow in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerLow in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerLow in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerLow in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerLow in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerLow in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerLow in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerLow in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerLow in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerLow in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerLow in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerLow in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerLow in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  222886
                   _CCP_PWM_Set_Duty
              _Pulse_Meter_Calculate
                _Pulse_Meter_Display
                   _Pulse_Meter_Init
                    _Welcome_Message
 ---------------------------------------------------------------------------------
 (1) _Welcome_Message                                      2     2      0   66661
                                             21 BANK0      2     2      0
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _Pulse_Meter_Init                                     0     0      0   53707
               _ecu_layer_initialize
              _mcal_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _mcal_layer_initialize                                0     0      0   23252
             _CCP1_Capture_Mode_Init
                 _CCP2_PWM_1KHZ_INIT
                  _Timer1_Timer_Init
                  _Timer2_Timer_Init
 ---------------------------------------------------------------------------------
 (3) _Timer2_Timer_Init                                    0     0      0     210
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (4) _Timer2_Init                                          4     2      2     210
                                             39 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _Timer1_Timer_Init                                    0     0      0     462
                        _Timer1_Init
 ---------------------------------------------------------------------------------
 (4) _Timer1_Init                                          5     3      2     462
                                             41 COMRAM     5     3      2
                 _Timer1_Mode_Select
 ---------------------------------------------------------------------------------
 (5) _Timer1_Mode_Select                                   2     0      2     164
                                             39 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CCP2_PWM_1KHZ_INIT                                   0     0      0   11290
                           _CCP_Init
 ---------------------------------------------------------------------------------
 (3) _CCP1_Capture_Mode_Init                               0     0      0   11290
                           _CCP_Init
 ---------------------------------------------------------------------------------
 (4) _CCP_Init                                             5     3      2   11290
                                             20 BANK0      5     3      2
              _CCP_Capture_Mode_Init
                 _CCP_Interrupt_Init
                  _CCP_PWM_Mode_Init
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (5) _CCP_PWM_Mode_Init                                    4     2      2    1290
                                             47 COMRAM     1     1      0
                                             17 BANK0      3     1      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     361
                                              4 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _CCP_Interrupt_Init                                   5     3      2     714
                                             42 COMRAM     5     3      2
                _CCP1_Interrupt_Init
                _CCP2_Interrupt_Init
 ---------------------------------------------------------------------------------
 (6) _CCP2_Interrupt_Init                                  4     2      2     230
                                             39 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (6) _CCP1_Interrupt_Init                                  4     2      2     230
                                             39 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _CCP_Capture_Mode_Init                                5     3      2     552
                                             42 COMRAM     5     3      2
   _CCP_Capture_Compare_Timer_Config
 ---------------------------------------------------------------------------------
 (6) _CCP_Capture_Compare_Timer_Config                     4     2      2     230
                                             39 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   30455
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  6     4      2   30449
                                              9 BANK0      6     4      2
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_initialize                                  4     2      2    8275
                                              1 BANK0      4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_direction_initialize                        9     7      2     738
                                             39 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Pulse_Meter_Display                                 14     9      5   86570
                                             26 BANK1     14     9      5
           _convert_uint32_to_string
            _convert_uint8_to_string
               _lcd_4bit_send_string
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_pos                             7     1      6   45053
                                             15 BANK0      6     0      6
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_cursor                                  7     3      4   22489
                                              9 BANK0      6     2      4
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                4     1      3   21608
                                              5 BANK0      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 5     1      4   21031
                                              9 BANK0      4     0      4
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              4     1      3   20168
                                              5 BANK0      4     1      3
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       4     1      3    6916
                                              1 BANK0      4     1      3
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_signal                          3     1      2    6364
                                              1 BANK0      3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                10     7      3    5868
                                             39 COMRAM     9     6      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _convert_uint8_to_string                              9     7      2    9940
                                             61 BANK0      8     6      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _convert_uint32_to_string                            19    13      6   10030
                                             61 BANK0      6     0      6
                                             14 BANK1     12    12      0
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             24    16      8    7642
                                             53 BANK0      8     0      8
                                              0 BANK1     14    14      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6796
                                             45 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           19    13      6    6335
                                             31 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                13     9      4    4768
                                             18 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2533
                                              7 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1177
                                              0 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     857
                                             39 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             45 COMRAM     2     0      2
                                              0 BANK0      2     2      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     613
                                             39 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     625
                                             39 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                              12     6      6    1827
                                             39 COMRAM     8     2      6
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Pulse_Meter_Calculate                               14     5      9    8459
                                              8 BANK1     14     5      9
                 _Timer1_Write_Value
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     576
                                             39 COMRAM     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _Timer1_Write_Value                                   5     1      4     286
                                             39 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _CCP_PWM_Set_Duty                                     8     5      3    7489
                                              8 BANK1      7     4      3
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1016
                                              4 BANK0     14    10      4
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     607
                                             68 BANK0      2     2      0
                                              0 BANK1      8     4      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    3053
                                             18 BANK0     25    17      8
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    2363
                                             43 BANK0     25    17      8
                            ___flmul (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptManagerLow                                 7     7      0    1296
                                             32 COMRAM     7     7      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
                                NULL *
                  _TMR1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (13) _TMR1_Callback_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB7_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB6_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB5_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _RB4_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP2_ISR                                            0     0      0     648
                                NULL *
                  _CCP1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (12) _CCP1_ISR                                            0     0      0     648
                                NULL *
                  _CCP1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (13) _CCP1_Callback_ISR                                   4     4      0     648
                                             28 COMRAM     4     4      0
        _CCP_Capture_Mode_Read_Value
 ---------------------------------------------------------------------------------
 (14) _CCP_Capture_Mode_Read_Value                        11     7      4     648
                                             18 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _InterruptManagerHigh                                4     4      0     696
                                             14 COMRAM     4     4      0
                           _INT0_ISR
                          i2_ADC_ISR
                         i2_CCP1_ISR
                         i2_CCP2_ISR
                         i2_INT1_ISR
                         i2_INT2_ISR
                          i2_RB4_ISR
                          i2_RB5_ISR
                          i2_RB6_ISR
                          i2_RB7_ISR
                         i2_TMR0_ISR
                         i2_TMR1_ISR
                         i2_TMR2_ISR
                         i2_TMR3_ISR
 ---------------------------------------------------------------------------------
 (16) i2_TMR3_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_TMR2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_TMR1_ISR                                          0     0      0       0
                                NULL *
                i2_TMR1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_Callback_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_TMR0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_RB7_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_RB6_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_RB5_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_RB4_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_INT2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_INT1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_CCP2_ISR                                          0     0      0     348
                                NULL *
                i2_CCP1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (16) i2_CCP1_ISR                                          0     0      0     348
                                NULL *
                i2_CCP1_Callback_ISR *
 ---------------------------------------------------------------------------------
 (17) i2_CCP1_Callback_ISR                                 4     4      0     348
                                             10 COMRAM     4     4      0
      i2_CCP_Capture_Mode_Read_Value
 ---------------------------------------------------------------------------------
 (18) i2_CCP_Capture_Mode_Read_Value                      11     7      4     348
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) i2_ADC_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP_PWM_Set_Duty
     ___fldiv
       ___flmul (ARG)
         ___lmul (ARG)
         ___xxtofl (ARG)
           ___lmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___lmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Pulse_Meter_Calculate
     _Timer1_Write_Value
     ___fldiv
     ___flmul
     ___fltol
     ___lmul
     ___xxtofl
   _Pulse_Meter_Display
     _convert_uint32_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _fputc
     _convert_uint8_to_string
       _memset
       _sprintf
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_signal
           _gpio_pin_write_logic
         _lcd_send_4bits
           _gpio_pin_write_logic
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_cursor
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
           _lcd_send_4bits
   _Pulse_Meter_Init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
         _lcd_4bit_send_command
     _mcal_layer_initialize
       _CCP1_Capture_Mode_Init
         _CCP_Init
           _CCP_Capture_Mode_Init
             _CCP_Capture_Compare_Timer_Config
           _CCP_Interrupt_Init
             _CCP1_Interrupt_Init
             _CCP2_Interrupt_Init
           _CCP_PWM_Mode_Init
             ___lldiv
               ___lmul (ARG)
             ___lmul
           _gpio_pin_initialize
       _CCP2_PWM_1KHZ_INIT
         _CCP_Init
       _Timer1_Timer_Init
         _Timer1_Init
           _Timer1_Mode_Select
       _Timer2_Timer_Init
         _Timer2_Init
   _Welcome_Message
     _lcd_4bit_send_command
     _lcd_4bit_send_string_pos

 _InterruptManagerLow (ROOT)
   _ADC_ISR
   _CCP1_ISR
     NULL(Fake) *
     _CCP1_Callback_ISR *
       _CCP_Capture_Mode_Read_Value
   _CCP2_ISR
     NULL(Fake) *
     _CCP1_Callback_ISR *
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_Callback_ISR *
   _TMR2_ISR
   _TMR3_ISR

 _InterruptManagerHigh (ROOT)
   _INT0_ISR
   i2_ADC_ISR
   i2_CCP1_ISR
     NULL(Fake) *
     i2_CCP1_Callback_ISR *
       i2_CCP_Capture_Mode_Read_Value
   i2_CCP2_ISR
     NULL(Fake) *
     i2_CCP1_Callback_ISR *
   i2_INT1_ISR
   i2_INT2_ISR
   i2_RB4_ISR
   i2_RB5_ISR
   i2_RB6_ISR
   i2_RB7_ISR
   i2_TMR0_ISR
   i2_TMR1_ISR
     NULL(Fake) *
     i2_TMR1_Callback_ISR *
   i2_TMR2_ISR
   i2_TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     28      9A       7       60.2%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     46      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     30      57       1       69.0%
BITBIGSFRl          43      0       0      38        0.0%
BITBIGSFRhh         28      0       0      36        0.0%
BITBIGSFRhl         12      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     171      39        0.0%
DATA                 0      0     171       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jan 08 19:28:24 2024

                                   ___fldiv@aexp 00C3                                     ___fldiv@bexp 00C2  
                                   ___fldiv@sign 00BB                                  ?_lcd_send_4bits 0081  
                                             l71 26C8                                               l81 3C12  
                                             l76 3B94                                               l94 399A  
                                   ___awdiv@sign 002D                                               bsr 0FE0  
                          ??_InterruptManagerLow 0021                                              l102 3EE0  
                                            l227 3552                                              l168 34A0  
                                            l193 3886                                              l601 3E48  
                                            l354 439C                                              l611 3D98  
                                            l188 3324                                              l620 3D20  
                                            l605 3E6A                                              l198 4060  
                                            l711 2416                                              l608 3E6E  
                                            l537 22B4                                              l617 3DF8  
                                            l730 2816                                              l626 3D80  
                                            l636 3D08                                              l559 256E  
                                            l591 2B98                                              l487 2ED0  
                                            l578 2570                                              l597 3E28  
                                            l699 3916                    gpio_pin_initialize@pin_config 0081  
                                            _abs 4142                           ??_InterruptManagerHigh 000F  
                                            _pad 3C14                                      ?i2_CCP1_ISR 0001  
                                __end_of_ADC_ISR 440E                                      ?i2_CCP2_ISR 0001  
                                            _ret 00FF              __end_of_lcd_4bit_send_enable_signal 4062  
                    _lcd_4bit_send_enable_signal 400C                                     ___awmod@sign 002D  
                            led_initialize@F3319 0055                                              prod 0FF3  
                                            tosl 0FFD                                              wreg 0FE8  
                          relay_initialize@F3313 0051                                     ___flmul@aexp 009F  
                                   ___flmul@bexp 00A4                      lcd_send_4bits@_data_command 0083  
                                   ___flmul@sign 009E                                     ___flmul@temp 00A9  
                                   ___flmul@prod 00A5                        ?_convert_uint32_to_string 00BD  
                                __end_of_RB4_ISR 4402                                  __end_of_RB5_ISR 43FE  
                                __end_of_RB6_ISR 43FA                                  __end_of_RB7_ISR 43F6  
                                   ___fltol@exp1 00C5                                             ?_abs 002E  
                                           l2121 1346                                             l2114 1150  
                                           l2210 3C38                                             l2131 1476  
                                           l2123 13BE                                             l1251 30AC  
                                           l2124 13AC                                             l2221 1E8C  
                                           l1253 30B0                                             l2118 14B4  
                                           l2214 3C90                                             l2222 1ED2  
                                           l1422 4336                                             l1263 4356  
                                           l1511 3F3E                                             l1431 430E  
                                           l1512 3F4E                                             l2240 2942  
                                           l1248 2FE2                                             l2233 1FD4  
                                           l1425 4140                                             l2082 1850  
                                           l2162 1D76                                             l2250 417A  
                                           l2155 1CDE                                             l2219 1E84  
                                           l1291 3A3A                                             l1419 437C  
                                           l2084 16B0                                             l1428 41BE  
                                           l2093 16F6                                             l2253 4182  
                                           l1285 3B16                                             l1293 3A98  
                                           l2158 1E3A                                             l2246 40B4  
                                           l1534 36A8                                             l1286 3B16  
                                           l2095 176E                                             l2087 1674  
                                           l2175 214C                                             l1527 3698  
                                           l2096 175C                                             l1472 2FC2  
                                           l2169 1DD2                                             l2265 325E  
                                           l2273 40FC                                             l1731 33E8  
                                           l1475 43E4                                             l2276 4432  
                                           l2188 400A                                             l1486 3194  
                                           l1479 1C82                                             l1744 3602  
                                           l1797 2DD8                                             ?_pad 0087  
                                           l6400 3A3C                                             l6402 3A7C  
                                           l6404 3A88                                             l6270 3ABA  
                                           l6406 3A94                                             l6280 3B10  
                                           l6272 3AD4                                             l6360 2FC8  
                                           l6408 3A96                                             l9010 285E  
                                           l9002 2818                                             l6274 3AD6  
                                           l6266 3A9A                                             l6370 302C  
                                           l6362 2FDA                                             l9012 286E  
                                           l9004 283E                                             l6276 3AF0  
                                           l6268 3AB4                                             l6380 3064  
                                           l6372 303C                                             l6364 2FE4  
                                           l9022 2906                                             l9014 288C  
                                           l9006 284C                                             l9110 25FA  
                                           l9102 25BA                                             l6278 3AF6  
                                           l6382 3066                                             l6374 3050  
                                           l6366 3002                                             l6390 30AE  
                                           l6358 2FC4                                             l9200 213A  
                                           l9016 28AA                                             l9008 285A  
                                           l9040 3B92                                             l9032 3B18  
                                           l9120 2678                                             l9112 260C  
                                           l9104 25D6                                             l6384 3082  
                                           l6376 3052                                             l6368 300E  
                                           l9018 28EE                                             l9026 2918  
                                           l9210 3FF4                                             l9202 3FB4  
                                           l9130 3B96                                             l9034 3B18  
                                           l9122 269C                                             l9114 2630  
                                           l9106 25DA                                             l9050 2DF6  
                                           l6386 308A                                             l6378 3054  
                                           l6394 3A1C                                             l6570 4310  
                                           l9204 3FC6                                             l9300 341A  
                                           l9132 3B96                                             l9036 3B2C  
                                           l9124 26B2                                             l9116 2642  
                                           l9108 25EA                                             l9060 2E46  
                                           l9052 2E12                                             l9044 2DDA  
                                           l9220 4184                                             l6388 30A6  
                                           l6580 42E4                                             l6396 3A20  
                                           l6572 4326                                             l9206 3FCE  
                                           l9310 3492                                             l9302 3436  
                                           l9134 3BAA                                             l9230 3918  
                                           l9038 3B34                                             l9150 34C0  
                                           l9142 34A2                                             l9118 2666  
                                           l9126 26C4                                             l9070 2EC0  
                                           l9062 2E5A                                             l9054 2E1A  
                                           l9046 2DE0                                             l9222 4196  
                                           l9214 40FE                                             l6582 42EE  
                                           l6398 3A32                                             l9400 159A  
                                           l8600 33C2                                             l9080 406E  
                                           l9208 3FD6                                             l9320 3272  
                                           l9304 3456                                             l9136 3BB2  
                                           l9232 392C                                             l9152 34D6  
                                           l9144 34A2                                             l9240 3E70  
                                           l9064 2E6E                                             l9056 2E36  
                                           l9048 2DF2                                             l9224 41A8  
                                           l9216 410C                                             l6584 42F0  
                                           l9402 15AA                                             l9410 15CA  
                                           l9170 1FD6                                             l8602 33C8  
                                           l8610 3554                                             l9082 408C  
                                           l9330 32F2                                             l9322 3286  
                                           l9314 3260                                             l9306 3472  
                                           l9138 3C10                                             l9234 3930  
                                           l9154 34EC                                             l9162 3518  
                                           l9146 34B6                                             l9250 3EBC  
                                           l9242 3E70                                             l9090 2578  
                                           l9058 2E3E                                             l9066 2E76  
                                           l9226 41B0                                             l9218 4132  
                                           l6586 42F6                                             l9420 1608  
                                           l9412 15DA                                             l9404 15B2  
                                           l9500 1098                                             l9180 2038  
                                           l8604 33D8                                             l8620 3580  
                                           l8612 3558                                             l9084 40AA  
                                           l9332 32F6                                             l9324 328A  
                                           l9316 3260                                             l9308 3474  
                                           l9236 3962                                             l9228 3918  
                                           l9156 3502                                             l9148 34BA  
                                           l9252 3EC2                                             l9244 3E84  
                                           l8700 2314                                             l9092 258A  
                                           l9340 438E                                             l9068 2EAC  
                                           l6588 42FE                                             l9430 1650  
                                           l9422 1618                                             l9414 15DA  
                                           l9406 15B6                                             l9510 10D8  
                                           l9502 10A6                                             l9350 4352  
                                           l9342 4338                                             l9182 2090  
                                           l9174 1FF4                                             l8606 33E0  
                                           l8630 35B8                                             l8622 3588  
                                           l8614 3566                                             l8550 31C4  
                                           l9078 4062                                             l9334 3314  
                                           l9326 32A6                                             l9318 326C  
                                           l9238 3968                                             l9246 3E88  
                                           l8702 2376                                             l9094 2592  
                                           l9440 169E                                             l9432 1664  
                                           l9424 1628                                             l9360 14B6  
                                           l9600 13DA                                             l9520 1108  
                                           l9512 10DE                                             l9504 10A8  
                                           l9344 4338                                             l9192 20F0  
                                           l9176 2000                                             l8640 35F2  
                                           l8632 35CE                                             l8624 359A  
                                           l8616 356E                                             l8552 31E2  
                                           l8544 3196                                             l8560 40C4  
                                           l9328 32D0                                             l9248 3EA0  
                                           l9096 25B6                                             l9088 2572  
                                           l8720 3E0C                                             l8800 3688  
                                           l9450 16E6                                             l9442 16AE  
                                           l9434 1672                                             l9426 1638  
                                           l9418 15EE                                             l9370 14F4  
                                           l9362 14C4                                             l9610 1444  
                                           l9602 13E8                                             l9530 1140  
                                           l9522 110A                                             l9514 10EE  
                                           l9506 10B8                                             l9346 434A  
                                           l9194 2124                                             l9186 20AA  
                                           l8570 3338                                             l8642 35FA  
                                           l8634 35D6                                             l8626 35A2  
                                           l8618 3572                                             l8554 3218  
                                           l8546 31A8                                             l8562 40D6  
                                           l8650 3C30                                             l8810 1E6A  
                                           l8706 23D2                                             l9338 438E  
                                           l8722 3E10                                             l8802 3692  
                                           l9354 436C                                             l9460 1726  
                                           l9452 16F4                                             l9444 16C0  
                                           l9436 167E                                             l9428 1640  
                                           l9380 1524                                             l9372 1504  
                                           l9364 14D2                                             l9620 149A  
                                           l9612 145E                                             l9604 1412  
                                           l9540 1190                                             l9532 1160  
                                           l9524 111A                                             l9516 10F4  
                                           l9508 10C8                                             l9700 1DC2  
                                           l9348 434E                                             l9196 2130  
                                           l9188 20D6                                             l8580 335E  
                                           l8572 3340                                             l8636 35DC  
                                           l8628 35AA                                             l8660 4142  
                                           l8548 31BA                                             l8564 40DC  
                                           l8652 3C44                                             l8820 1EBA  
                                           l8812 1E78                                             l8804 1E3C  
                                           l8708 2414                                             l8724 3E30  
                                           l8716 3DFA                                             l8900 241C  
                                           l8740 3DB0                                             l8732 3D82  
                                           l9356 4370                                             l9470 1798  
                                           l9462 1754                                             l9446 16D6  
                                           l9454 1706                                             l9438 169C  
                                           l9390 155A                                             l9382 152A  
                                           l9374 1506                                             l9366 14D4  
                                           l9614 147A                                             l9622 14A0  
                                           l9606 1416                                             l9550 11E0  
                                           l9542 119A                                             l9534 1170  
                                           l9526 112A                                             l9518 10FA  
                                           l9630 2CD6                                             l9710 1E1A  
                                           l9702 1DE0                                             l9198 2136  
                                           l8590 3396                                             l8582 3366  
                                           l8574 3344                                             l8566 3326  
                                           l8638 35E2                                             l8662 415C  
                                           l8558 40B6                                             l8654 3C58  
                                           l8646 3C14                                             l8830 1EEA  
                                           l8822 1EC6                                             l8814 1E94  
                                           l8806 1E52                                             l9294 33EE  
                                           l8670 2704                                             l8726 3E50  
                                           l8718 3DFA                                             l8910 2462  
                                           l8902 242E                                             l8742 3DCE  
                                           l8734 3D82                                             l9358 4374  
                                           l9480 1810                                             l9472 17C2  
                                           l9456 1714                                             l9448 16DC  
                                           l9392 156A                                             l9384 1538  
                                           l9368 14E4                                             l9376 150E  
                                           l9624 14A4                                             l9616 148A  
                                           l9608 1430                                             l9560 1222  
                                           l9552 11EC                                             l9544 11B0  
                                           l9528 113A                                             l9640 2D2E  
                                           l9712 1E28                                             l9704 1DE2  
                                           l8592 339C                                             l8584 3378  
                                           l8576 3352                                             l8568 332A  
                                           l8656 3C5E                                             l8648 3C24  
                                           l8840 1F62                                             l8832 1F1C  
                                           l8824 1ECE                                             l8816 1EA4  
                                           l8808 1E62                                             l9296 3404  
                                           l8680 27E8                                             l8672 2722  
                                           l8664 26CA                                             l8912 246E  
                                           l8920 2492                                             l8904 2436  
                                           l8744 3DD6                                             l8736 3D94  
                                           l8760 3D38                                             l8752 3D0A  
                                           l9800 2F98                                             l9490 1846  
                                           l9482 182C                                             l9466 177E  
                                           l9474 17C6                                             l9458 1718  
                                           l9394 156C                                             l9386 153A  
                                           l9378 151E                                             l9618 1498  
                                           l9570 1284                                             l9562 1232  
                                           l9554 11FA                                             l9546 11BC  
                                           l9538 1184                                             l9650 2D5A  
                                           l9642 2D34                                             l9634 2CEC  
                                           l9714 1E2A                                             l9706 1DE6  
                                           l9810 1C44                                             l8594 33B2  
                                           l8586 3380                                             l8578 335A  
                                           l8658 3C7C                                             l8850 1FB4  
                                           l8842 1F74                                             l8834 1F24  
                                           l8826 1EDA                                             l8818 1EAA  
                                           l9298 3416                                             l8674 272A  
                                           l8682 2812                                             l8666 26D0  
                                           l8690 22B6                                             l8930 2510  
                                           l8914 247A                                             l8922 24D8  
                                           l8906 2442                                             l8746 3DF2  
                                           l8738 3D9C                                             l8762 3D56  
                                           l8754 3D0A                                             l9802 2FB0  
                                           l9484 1830                                             l9476 17E0  
                                           l9468 178A                                             l9388 154A  
                                           l9396 1574                                             l9580 132C  
                                           l9572 12A0                                             l9564 124C  
                                           l9556 1206                                             l9548 11D4  
                                           l9660 2D86                                             l9652 2D66  
                                           l9644 2D42                                             l9636 2D1A  
                                           l9628 2CBC                                             l9708 1E0A  
                                           l8780 3F1E                                             l8772 3EE2  
                                           l9812 1C5C                                             l9804 1AA2  
                                           l8596 33BA                                             l8588 3388  
                                           l8844 1F8E                                             l8836 1F2A  
                                           l8828 1EE4                                             l8676 2786  
                                           l8668 26E2                                             l9820 30BE  
                                           l8692 22BA                                             l8860 38BE  
                                           l8932 251C                                             l8916 2486  
                                           l8764 3D5E                                             l8756 3D1C  
                                           l9486 183E                                             l9478 17F6  
                                           l9398 1584                                             l9590 1368  
                                           l9582 1336                                             l9574 12CA  
                                           l9566 125C                                             l9558 1216  
                                           l9662 2D96                                             l9654 2D72  
                                           l9638 2D1E                                             l8774 3EF4  
                                           l9814 1C68                                             l9806 1AA8  
                                           l8598 33BC                                             l8846 1F9E  
                                           l8838 1F46                                             l8870 37F6  
                                           l9830 3138                                             l9822 30D0  
                                           l8694 22CC                                             l8862 38DC  
                                           l8854 3888                                             l8926 24F8  
                                           l8766 3D7A                                             l8758 3D24  
                                           l8790 3640                                             l8782 3604  
                                           l8950 2A70                                             l9488 1844  
                                           l9592 1376                                             l9584 1344  
                                           l9576 1300                                             l9568 1278  
                                           l9664 2DA6                                             l9680 1D04  
                                           l9672 1C88                                             l8776 3F02  
                                           l9816 1C7C                                             l9808 1ABC  
                                           l8848 1FA4                                             l8872 37F6  
                                           l9832 3156                                             l9824 30EE  
                                           l8696 22EE                                             l8864 38E4  
                                           l8856 3888                                             l8928 2504  
                                           l8936 2528                                             l8792 364E  
                                           l8784 3616                                             l8960 2ACA  
                                           l8952 2A76                                             l9594 13A4  
                                           l9586 1356                                             l9578 130E  
                                           l9498 108A                                             l9666 2DB6  
                                           l9690 1D5E                                             l9674 1C9A  
                                           l9770 2158                                             l8778 3F14  
                                           l8890 403C                                             l8882 400C  
                                           l8874 380A                                             l9834 3168  
                                           l9826 310C                                             l9818 30B2  
                                           l8698 230C                                             l8866 3914  
                                           l8858 389C                                             l8794 3658  
                                           l8786 362C                                             l8962 2AD6  
                                           l8954 2A88                                             l9588 1364  
                                           l9668 2DC8                                             l9692 1D60  
                                           l9684 1D18                                             l9676 1CA8  
                                           l9780 226C                                             l9772 216A  
                                           l8892 4044                                             l8884 400C  
                                           l8876 3812                                             l9836 317E  
                                           l9828 3122                                             l8980 3C92  
                                           l8796 3676                                             l8788 3634  
                                           l8964 2ADE                                             l8956 2A90  
                                           l9598 13CE                                             l9694 1D6C  
                                           l9686 1D20                                             l9678 1CEE  
                                           l9782 2288                                             l9774 216E  
                                           l8894 405E                                             l8886 4020  
                                           l8878 3884                                             l8982 3C96  
                                           l8798 3686                                             l8966 2AFA  
                                           l8974 2B20                                             l8958 2AAC  
                                           l9790 2ED2                                             STR_1 1085  
                                           l9696 1DA8                                             l9688 1D2C  
                                           l9776 221E                                             l9768 214E  
                                           l8888 4028                                             l8984 3CA8  
                                           l8992 3CD0                                             l8968 2B18  
                                           l8976 2B96                                             l9792 2EF0  
                                           STR_3 1085                                             l9698 1DB4  
                                           l9778 223C                                             l8898 2418  
                                           l8986 3CB0                                             l8994 3D06  
                                           l9794 2F0A                                             STR_4 1039  
                                           STR_5 104B                                             l8988 3CC0  
                                           l9788 43DC                                             l9796 2F42  
                                           STR_6 1011                                             STR_7 1026  
                                           l9798 2F60                                             STR_8 106C  
                                           STR_9 107A                   __end_of_CCP1_Capture_Mode_Init 41C0  
               CCP_Capture_Mode_Read_Value@F3461 003F                                             u5330 3AB4  
                                           u5331 3AB0                                             u5340 3AD4  
                                           u5341 3AD0                                             u5350 3AF0  
                                           u5351 3AEC                                             u5360 3B10  
                                           u5440 2FDA                                             u5361 3B0C  
                                           u5441 2FD6                                             u5450 3082  
                                           u5451 307E                                             u5460 30A6  
                                           u5461 30A2                                             u5470 3A32  
                                           u5471 3A2E                                             u9000 288C  
                                           u9001 2888                                             u9010 28AA  
                                           u9011 28A6                                             u8300 3218  
                                           u9020 3B2C                                             u9100 34B6  
                                           u8301 3214                                             u9021 3B28  
                                           u9101 34B2                                             u9110 1FF0  
                                           u8310 40FC                                             u9030 2DF2  
                                           u9111 1FEC                                             u8311 40F8  
                                           u9031 2DEE                                             u9120 2034  
                                           u8320 3338                                             u8400 359A  
                                           u9200 3E84                                             u9040 2E12  
                                           u9121 2030                                             u8321 3334  
                                           u8401 3596                                             u9201 3E80  
                                           u9041 2E0E                                             u9130 20A6  
                                           u8330 3352                                             u8410 35B8  
                                           u9210 3EE0                                             u9050 2E36  
                                           u9131 20A2                                             u8331 334E  
                                           u8411 35B4                                             u9211 3EDC  
                                           u9051 2E32                                             u9140 20EC  
                                           u8340 3378                                             u8420 35CE  
                                           u9060 40AA                                             u9300 3314  
                                           u9141 20E8                                             u8341 3374  
                                           u8421 35CA                                             u9061 40A6  
                                           u9301 3310                                             u9310 434A  
                                           u9150 214C                                             u8350 3396  
                                           u8430 35F2                                             u8270 31A8  
                                           u9070 258A                                             u9311 4346  
                                           u9151 2148                                             u8351 3392  
                                           u8431 35EE                                             u8271 31A4  
                                           u9071 2586                                             u9400 1650  
                                           u9320 14D2                                             u8360 33B2  
                                           u8280 31BA                                             u8440 3C24  
                                           u8504 274A                                             u9160 392C  
                                           u8520 22CC                                             u9080 25EA  
                                           u8600 3E28                                             u9401 164C  
                                           u9321 14CE                                             u8361 33AE  
                                           u8281 31B6                                             u8441 3C20  
                                           u8505 2746                                             u9161 3928  
                                           u8521 22C8                                             u9081 25E6  
                                           u8601 3E24                                             u9410 1672  
                                           u9330 14E4                                             u8370 33D8  
                                           u8290 31E2                                             u8450 3C7C  
                                           u8514 27A6                                             u9090 3BAA  
                                           u9170 395A                                             u8530 22EE  
                                           u8610 3E48                                             u9411 166E  
                                           u9331 14E0                                             u8371 33D4  
                                           u8291 31DE                                             u8451 3C78  
                                           u8515 27A2                                             u9091 3BA6  
                                           u8531 22EA                                             u8611 3E44  
                                           u9500 177E                                             u9420 169C  
                                           u9340 14F4                                             u8700 3F3E  
                                           u8380 3566                                             u8460 415C  
                                           u9260 3416                                             u9180 398A  
                                           u8540 230C                                             u8620 3E6A  
                                           u9501 177A                                             u9421 1698  
                                           u9341 14F0                                             u8701 3F3A  
                                           u8381 3562                                             u8461 4158  
                                           u9261 3412                                             u8541 2308  
                                           u8621 3E66                                             u9510 1798  
                                           u9430 16C0                                             u9350 1538  
                                           u8390 3580                                             u9270 3492  
                                           u8470 26E2                                             u9190 399A  
                                           u8630 3D94                                             u8710 362C  
                                           u9511 1794                                             u9431 16BC  
                                           u9351 1534                                             u8391 357C  
                                           u9271 348E                                             u8471 26DE  
                                           u9191 3996                                             u8631 3D90  
                                           u8711 3628                                             u9520 17E0  
                                           u9440 16D6                                             u9360 154A  
                                           u9600 112A                                             u8800 1F62  
                                           u8480 2704                                             u8640 3DCE  
                                           u8720 364E                                             u9521 17DC  
                                           u9441 16D2                                             u9361 1546  
                                           u9601 1126                                             u8801 1F5E  
                                           u9281 3266                                             u8481 2700  
                                           u9177 3950                                             u8641 3DCA  
                                           u8721 364A                                             u9530 1810  
                                           u9450 16F4                                             u9370 155A  
                                           u9610 1160                                             u8810 1F74  
                                           u9290 3286                                             u8490 2722  
                                           u8570 23EA                                             u8554 2334  
                                           u8650 3DF2                                             u8730 3676  
                                           u9531 180C                                             u9451 16F0  
                                           u9371 1556                                             u9611 115C  
                                           u8811 1F70                                             u9291 3282  
                                           u8491 271E                                             u9187 3980  
                                           u8571 23E4                                             u8555 2330  
                                           u8651 3DEE                                             u8731 3672  
                                           u9540 183E                                             u9460 1714  
                                           u9380 159A                                             u9700 13E8  
                                           u9620 1170                                             u8820 1F8E  
                                           u8740 1E4E                                             u8580 23EC  
                                           u8564 2396                                             u8900 245E  
                                           u8660 3D1C                                             u9541 183A  
                                           u9461 1710                                             u9381 1596  
                                           u9701 13E4                                             u9621 116C  
                                           u8821 1F8A                                             u8741 1E48  
                                           u8565 2392                                             u8901 245A  
                                           u8661 3D18                                             u9470 1726  
                                           u9390 15DA                                             u9710 1430  
                                           u9630 12EA                                             u9550 10A6  
                                           u8830 1F9E                                             u8750 1E50  
                                           u8590 3E0C                                             u8910 24F4  
                                           u8670 3D56                                             u9471 1722  
                                           u9391 15D6                                             u9711 142C  
                                           u9551 10A2                                             u8831 1F9A  
                                           u8591 3E08                                             u8911 24F0  
                                           u8671 3D52                                             u9480 1754  
                                           u9720 145E                                             u9640 1344  
                                           u9560 10B8                                             u9800 2DB6  
                                           u8760 1E62                                             u8840 389C  
                                           u8680 3D7A                                             u8920 2A88  
                                           u9481 1750                                             u9721 145A  
                                           u9641 1340                                             u9561 10B4  
                                           u9801 2DB2                                             u8761 1E5E  
                                           u8841 3898                                             u8681 3D76  
                                           u8921 2A84                                             u9490 176A  
                                           u9730 1498                                             u9650 1364  
                                           u9570 10C8                                             u9810 1C9A  
                                           u8690 3F02                                             u8770 1E78  
                                           u8850 38BE                                             u8930 2AAC  
                                           u9491 1766                                             u9731 1494  
                                           u9651 1360                                             u9635 12E0  
                                           u9571 10C4                                             u9811 1C96  
                                           u8691 3EFE                                             u8771 1E74  
                                           u8851 38BA                                             u8931 2AA8  
                                           u9660 1376                                             u9580 1108  
                                           u9740 2CD6                                             u9900 1E28  
                                           u9820 1CA8                                             u8780 1EA4  
                                           u8860 38DC                                             u8940 2ACA  
                                           u9661 1372                                             u9581 1104  
                                           u9741 2CD2                                             u9901 1E24  
                                           u9821 1CA4                                             u8781 1EA0  
                                           u8861 38D8                                             u8941 2AC6  
                                           u9670 13A4                                             u9590 111A  
                                           u9750 2D0E                                             u9830 1D04  
                                           u8790 1EBA                                             u8870 380A  
                                           u8950 2AFA                                             u9671 13A0  
                                           u9591 1116                                             u9831 1D00  
                                           u8791 1EB6                                             u8871 3806  
                                           u8951 2AF6                                             u9680 13BA  
                                           u9760 2D42                                             u9840 1D5A  
                                           u8880 4020                                             u8960 2B18  
                                           u9681 13B6                                             u9761 2D3E  
                                           u9841 1D56                                             u8881 401C  
                                           u8961 2B14                                             u9690 13CE  
                                           u9770 2D56                                             u9850 1DA4  
                                           u8890 242E                                             u9691 13CA  
                                           u9771 2D52                                             u9755 2D02  
                                           u9851 1DA0                                             u8891 242A  
                                           u9780 2D82                                             u9860 1DC2  
                                           u8980 3CA8                                             u9781 2D7E  
                                           u9861 1DBE                                             u8981 3CA4  
                                           u9790 2DA6                                             u9870 1DD2  
                                           u8990 283E                                             u9791 2DA2  
                                           u9871 1DCE                                             u8991 283A  
                                           u8975 2B6C                                             u9880 1DE0  
                                           u9960 216A                                             u9881 1DDC  
                                           u9961 2166                                             u9890 1E1A  
                                           u9970 223C                                             u9891 1E16  
                                           u9971 2238                                             u9980 2288  
                                           u9981 2284                                             _Cap1 00E5  
                                           u9990 1ABC                                             _Cap2 00E1  
                                           u9991 1AB8                                             _Cap3 00DD  
                           _lcd_4bit_send_string 3918                    __end_of_mcal_layer_initialize 437E  
                  ??_lcd_4bit_send_enable_signal 0031                                             abs@a 002E  
                                           _lcd1 00F9                                             _led1 0057  
                                           _dbuf 0124                                             _main 3F50  
                                           _dtoa 1E3C                                      ?i2_INT1_ISR 0001  
                                    ?i2_INT2_ISR 0001                                 __end_of_CCP1_ISR 4288  
                               __end_of_CCP2_ISR 425A                                             _prec 00C8  
                                           pad@i 008E                                             pad@p 008B  
                                           fsr0h 0FEA                                             fsr1h 0FE2  
                                           indf0 0FEF                                             fsr2h 0FDA  
                                           fsr0l 0FE9                                             indf1 0FE7  
                                           indf2 0FDF                                             fsr1l 0FE1  
                                           pad@w 0090                                             fsr2l 0FD9  
                                           btemp 0058                                             prodh 0FF4  
                                           prodl 0FF3                                             start 0260  
                                ___fldiv@new_exp 00BC                             _RB7_InterruptHandler 00CE  
                               __end_of_CCP_Init 2ED2                                     ___param_bank 0000  
                          _lcd_4bit_send_command 3B18                                      ?i2_TMR0_ISR 0001  
                                    ?i2_TMR1_ISR 0001                                      ?i2_TMR2_ISR 0001  
                                    ?i2_TMR3_ISR 0001                                            ??_abs 0080  
                           _gpio_pin_write_logic 26CA                   lcd_4bit_send_string_pos@column 0092  
                                          ??_pad 008D                                 __end_of_INT0_ISR 4432  
                               __end_of_INT1_ISR 440A                                 __end_of_INT2_ISR 4406  
                                          l10500 24B2                                            l10340 3F58  
                                          l10502 2548                                            l10342 3F6A  
                                          l10504 23FE                                            l10344 3F94  
                                          l10336 3F50                                            l10506 352C  
                                          l10338 3F54                                            l10508 27FC  
                                          l10496 2E96                                            l10498 3CF0  
                                  ___fltol@sign1 00C4                                            ?_main 0001  
                                          ?_dtoa 0092                                  __end_of___fldiv 1852  
                                __end_of___awdiv 33EA                                            STR_10 105D  
                                          STR_11 1080                                  __end_of___awmod 3604  
                                __end_of___flmul 14B6                                  __end_of___fltol 2DDA  
                                          u10001 30B8                                  __end_of___lldiv 36AA  
                                          u10507 2F6C                                  ___awdiv@divisor 002A  
                                          u10517 2FA4                                            u10527 2602  
                                          u10537 2626                                            u10547 264A  
                                          u10557 266E                                            u10567 2692  
                                          u10487 2EFC                                            u10577 26BA  
                                          u10497 2F34                                            u10587 403E  
                                          i1l528 374E                                            i1l641 4286  
                                          i1l646 4258                                            i1l780 440C  
                                          i1l870 4404                                            i2l528 37F4  
                                          i2l641 42E2                                            i1l866 4408  
                                          i1l874 4400                                            i1l882 43F8  
                                          i2l646 42B4                                            i1l878 43FC  
                                          i1l886 43F4                                            i2l780 442C  
                                          i2l862 4430                                            i2l870 4424  
                                          i2l866 4428                                            i2l874 4420  
                                          i2l882 4418                                  ___awdiv@counter 002C  
                                          i2l878 441C                                            i2l886 4414  
                            relay_turn_off@F3323 004F                                     vfpfcnvrt@fmt 00A1  
                                          _TMR0H 0FD7            Pulse_Meter_Calculate@Pulse_Duty_Cycle 016D  
                  CCP_Capture_Mode_Init@_ccp_obj 002B                        lcd_4bit_set_cursor@column 008C  
                            ___lmul@multiplicand 002C                                 __end_of_TMR0_ISR 43C4  
                               __end_of_TMR1_ISR 41F6                                 __end_of_TMR2_ISR 43EC  
                     __end_of_CCP_Interrupt_Init 3D0A                                 __end_of_TMR3_ISR 43B8  
                                          _flags 0047                          __end_of_Welcome_Message 2FC4  
                                          _fputc 3196                                            _fputs 40B6  
                                          pad@fp 0087                                            _width 00C6  
                                          _putch 4432                                            dtoa@d 0094  
                                          dtoa@i 009D                                            dtoa@p 0098  
                                          dtoa@s 009C                                            dtoa@w 009A  
                          ?_lcd_4bit_send_string 0089                                            pclath 0FFA  
                                          pclatu 0FFB                                            tablat 0FF5  
                                          ttemp5 0059                                            ttemp6 005C  
                                          ttemp7 0060                                            status 0FD8  
                                          wtemp8 0059                                  __end_of_sprintf 400C  
                    __end_of_CCP1_Interrupt_Init 3DFA                   ?_gpio_pin_direction_initialize 0028  
                                __initialization 399C                                     __end_of_main 3FB4  
                                   __end_of_dtoa 1FD6                            ?_gpio_pin_write_logic 0028  
                             _Timer1_Write_Value 4338                    __end_of_Pulse_Meter_Calculate 1C84  
                                      ??_ADC_ISR 0013                                _CCP1_Callback_ISR 2944  
                                     _Duty_Cycle 0056                                    _lat_registers 0190  
                    CCP2_Interrupt_Init@_ccp_obj 0028                                           ??_main 0031  
                                         ??_dtoa 0031                               ?_CCP1_Callback_ISR 0001  
                                  __activetblptr 0003                         __end_of_Pulse_Meter_Init 43E6  
                          _TMR3_InterruptHandler 00CA                              ?_Timer1_Write_Value 0028  
                               led_turn_on@F3324 0054                                        ??_RB4_ISR 0013  
                                      ??_RB5_ISR 0013                                        ??_RB6_ISR 0013  
                                      ??_RB7_ISR 0013                                Timer1_Init@_timer 002A  
                    _CCP1_Callback_ISR$intlevel1 294E                               _RB4_pin_init_value 004E  
                              __end_ofi2_ADC_ISR 442E                              ??_CCP1_Callback_ISR 001D  
                                         ?_fputc 0028                                           ?_fputs 0080  
                                         _ADRESH 0FC4                                           _ADRESL 0FC3  
                               ___awdiv@dividend 0028                                           ?_putch 0001  
                                         i1l1214 43C2                                           i1l1150 00B0  
                                         i1l1160 01A0                                           i1l1152 00EC  
                                         i1l1313 43EA                                           i1l1162 01C0  
                                         i1l1154 0128                                           i1l1146 0056  
                                         i1l1171 0240                                           i1l1164 01E0  
                                         i1l1156 0160                                           i1l1148 0076  
                                         i1l1166 0200                                           i1l1158 0180  
                                         i1l1360 43B6                                           i1l1168 0220  
                                         i1l1275 41F4                                           i1l1494 2A6E  
                                         i1l3264 43A8                                           i2l1121 193A  
                                         i2l1113 1884                                           i1l1497 43AA  
                                         i2l1131 1A0E                                           i2l1123 1976  
                                         i2l1115 18A4                                           i2l1140 1A8E  
                                         i2l1133 1A2E                                           i2l1125 19AE  
                                         i2l1117 18C4                                           i2l1214 43DA  
                                         i2l1135 1A4E                                           i2l1127 19CE  
                                         i2l1119 18FE                                           i2l1313 43F0  
                                         i2l1137 1A6E                                           i2l1129 19EE  
                                         i1l3802 4406                                           i1l3810 43FE  
                                         i1l3806 4402                                           i2l4000 41FE  
                                         i2l1360 43CE                                           i2l4002 4200  
                                         i2l1275 422A                                           i2l4004 4212  
                                         i1l7300 43B4                                           i2l4006 43EC  
                                         i1l3792 440A                                           i1l3880 41DC  
                                         i1l3872 41C0                                           i1l7250 426E  
                                         i1l3874 41C4                                           i1l3882 43E6  
                                         i1l8210 0044                                           i1l7252 422C  
                                         i1l3876 41C8                                           i1l8220 0092  
                                         i1l8212 0052                                           i2l1494 2CBA  
                                         i1l6550 36B2                                           i1l7246 425A  
                                         i1l7254 422E                                           i1l7262 43FA  
                                         i1l7270 43F2                                           i1l3878 41CA  
                                         i1l8230 00E4                                           i1l8222 00A8  
                                         i1l8214 0064                                __end_ofi2_RB4_ISR 4422  
                                         i1l6560 3702                                           i1l6552 36C4  
                                         i1l7248 425C                                           i1l7256 4240  
                                         i1l8240 0124                                           i1l8232 00E8  
                                         i1l8224 00AC                                           i1l8216 0072  
                                         i1l8208 0036                                           i2l1497 4410  
                                         i1l6562 371E                                           i1l6554 36D6  
                                         i1l6546 36AA                                           i1l7266 43F6  
                                         i1l7290 43C0                                           i1l8250 016E  
                                         i1l8242 0136                                           i1l8234 00FA  
                                         i1l8226 00BE                                           i1l8218 0084  
                                         i1l6564 372A                                           i1l6556 36DA  
                                         i1l6548 36AA                                           i1l8260 01BC  
                                         i1l8252 017C                                           i1l8244 0144  
                                         i1l8236 0108                                           i1l8228 00CC  
                                         i1l6566 372A                                           i1l6558 36F6  
                                         i1l7286 43B8                                           i1l8270 020E  
                                         i1l8262 01CE                                           i1l8254 018E  
                                         i1l8246 0158                                           i1l8238 0120  
                                         i1l6760 298C                                           i1l7288 43BC  
                                         i1l7296 43AC                                           i1l8272 021C  
                                         i1l8264 01DC                                           i1l8256 019C  
                                         i1l8248 015C                                           i1l6770 29D4  
                                         i1l6762 2990                                           i1l6754 294E  
                                         i1l7298 43B0                                           i1l8274 022E  
                                         i1l8266 01EE                                           i1l8258 01AE  
                                         i1l6780 2A2E                                           i1l6772 29FC  
                                         i1l6756 2960                                           i1l6764 299C  
                                         i1l8276 023C                                           i1l8268 01FC  
                                         i1l6782 2A42                                           i1l6774 2A00  
                                         i1l6766 29AC                                           i1l6758 2978  
                              __end_ofi2_RB5_ISR 441E                                           i2l3656 440E  
                                         i1l6784 2A6A                                           i1l6768 29C0  
                                         i1l6776 2A0C                                           i1l6778 2A1E  
                                         i2l7150 2BD8                                           i2l6600 3750  
                                         i2l7160 2C20                                           i2l7152 2BDC  
                                         i2l7144 2B9A                                           i2l8200 1A5C  
                                         i2l6610 379C                                           i2l6602 3758  
                                         i2l7170 2C7A                                           i2l7162 2C48  
                                         i2l7146 2BAC                                           i2l7154 2BE8  
                                         i2l3962 4426                                           i2l3970 441E  
                                         i2l8202 1A6A                                           i2l3956 442A  
                                         i2l6612 37A8                                           i2l6604 376A  
                                         i2l7172 2C8E                                           i2l7164 2C4C  
                                         i2l7156 2BF8                                           i2l7148 2BC4  
                                         i2l8204 1A7C                                           i2l8140 1892  
                                         i2l6614 37C4                                           i2l6606 377C  
                                         i2l7174 2CB6                                           i2l7158 2C0C  
                                         i2l7166 2C58                                           i2l3966 4422  
                                         i2l8206 1A8A                                           i2l8150 18E0  
                                         i2l8142 18A0                                           i2l8134 1864  
                                         i2l6616 37D0                                           i2l6608 3780  
                                         i2l7168 2C6A                                           i2l7360 42CA  
                              __end_ofi2_RB6_ISR 441A                                           i2l8160 1932  
                                         i2l8152 18F6                                           i2l8144 18B2  
                                         i2l8136 1872                                           i2l7258 442E  
                                         i2l6618 37D0                                           i2l7362 4288  
                                         i2l8170 1972                                           i2l8162 1936  
                                         i2l8154 18FA                                           i2l8146 18C0  
                                         i2l8138 1880                                           i2l7356 42B6  
                                         i2l7364 428A                                           i2l7372 4416  
                                         i2l7380 43D0                                           i2l3996 41F6  
                                         i2l8180 19BC                                           i2l8172 1984  
                                         i2l8164 1948                                           i2l8156 190C  
                                         i2l8148 18D2                                           i2l7358 42B8  
                                         i2l7366 429C                                           i2l7382 43D4  
                                         i2l3998 41FA                                           i2l7390 43C4  
                                         i2l8190 1A0A                                           i2l8182 19CA  
                                         i2l8174 1992                                           i2l8166 1956  
                                         i2l8158 191A                                           i2l7368 441A  
                                         i2l7376 4412                                           i2l7384 43D8  
                                         i2l7392 43C8                                           i2l8192 1A1C  
                                         i2l8184 19DC                                           i2l8176 19A6  
                                         i2l8168 196E                                           i2l7394 43CC  
                                         i2l8194 1A2A                                           i2l8186 19EA  
                                         i2l8178 19AA                                           i2l8196 1A3C  
                                         i2l8188 19FC                                           i2l6598 3750  
                                         i2l8198 1A4A                                __end_ofi2_RB7_ISR 4416  
                             _CCP2_PWM_1KHZ_INIT 40FE                                 __end_of___xxtofl 1E3C  
                           ??_Timer1_Write_Value 002C                 __end_of_lcd_4bit_send_string_pos 3EE2  
                                  ??_Timer1_Init 002C                                    ??_Timer2_Init 002A  
                            ?_CCP2_PWM_1KHZ_INIT 0001                           ?_lcd_4bit_send_command 0085  
                                   vfprintf@cfmt 00B3                                           ___lmul 3EE2  
                                      ??___fldiv 00B3                        __end_of_CCP1_Callback_ISR 2A70  
                                      ??___awdiv 002C                                        ??___awmod 002C  
                                      ??___flmul 009A                                        ??___fltol 0162  
                                      ??___lldiv 0030                                           _memset 1FD6  
                                         clear_0 39F4                                           clear_1 3A00  
                                         clear_2 3A0C                                 ___awdiv@quotient 002E  
                                ___awmod@divisor 002A                                           isa$std 0001  
                                ___awmod@counter 002C                                           pad@buf 0089  
                                         dtoa@fp 0092                              i2_TMR1_Callback_ISR 440E  
                                         fputc@c 0028                                        ?_CCP1_ISR 0001  
                                         fputs@c 0084                                           fputs@i 0085  
                                   __pdataCOMRAM 0057                                        ?_CCP2_ISR 0001  
                                         fputs@s 0080                             ??_CCP2_PWM_1KHZ_INIT 0031  
            Pulse_Meter_Calculate@TimerPrescaler 016A                                Timer2_Init@_timer 0028  
                                   __mediumconst 0000                                           tblptrh 0FF7  
                          _CCP_Capture_Mode_Init 2418                                           tblptrl 0FF6  
                                         tblptru 0FF8                                           putch@c 0001  
                               __end_of_vfprintf 40B6                           ??_lcd_4bit_send_string 0031  
                                      ?_CCP_Init 0094                                        ??_sprintf 0031  
                               ?_Welcome_Message 0001                                     ___xxtofl@arg 008E  
                            _CCP2_Interrupt_Init 3D0A                                     ___xxtofl@exp 008D  
                                   ___xxtofl@val 0084                          _convert_uint8_to_string 33EA  
                             _RB6_pin_init_value 004C                                       __accesstop 0080  
                        __end_of__initialization 3A12                                        ?_INT0_ISR 0001  
                                      ?_INT1_ISR 0001                                 _CCP_PWM_Set_Duty 214E  
                                      ?_INT2_ISR 0001                             ?i2_TMR1_Callback_ISR 0001  
                                  ___rparam_used 0001               Pulse_Meter_Calculate@XTAL_FREQ_MHZ 0166  
                                     ___fltol@f1 015E                       convert_uint8_to_string@cnt 00C4  
                               ??_lcd_send_4bits 0031                       convert_uint8_to_string@str 00BD  
                    __end_ofi2_CCP1_Callback_ISR 2CBC                          _lcd_4bit_send_char_data 3B96  
                         ??_gpio_pin_write_logic 002B                                   __pcstackCOMRAM 0001  
                                   __pidataBANK0 437E                                     __pidataBANK1 4358  
                                      ?_TMR0_ISR 0001                                        ?_TMR1_ISR 0001  
                                      ?_TMR2_ISR 0001                                        ?_TMR3_ISR 0001  
                                  __end_of_fputc 3260                                    __end_of_fputs 40FE  
                       Timer1_Write_Value@_value 002A                         Timer1_Write_Value@_timer 0028  
                                  __end_of_putch 4434                              __end_of_Timer1_Init 30B2  
                           ?_CCP2_Interrupt_Init 0028                              __end_of_Timer2_Init 3A9A  
                       lcd_4bit_send_command@lcd 0085                         lcd_4bit_send_command@ret 0088  
                                   ??i2_CCP1_ISR 000F                                     ??i2_CCP2_ISR 000F  
                                     ??_CCP1_ISR 0021                                       ??_CCP2_ISR 0021  
                                     ??_CCP_Init 0096                                          ??_fputc 002C  
                                        ??_fputs 0031                          lcd_4bit_send_string@lcd 0089  
                        lcd_4bit_send_string@str 008B                                          ??_putch 0028  
                          CCP_PWM_Set_Duty@_duty 0168                                       __pbssBANK0 00C6  
                                     __pbssBANK1 0100                                     ??i2_INT1_ISR 0001  
                          _INT0_InterruptHandler 00D4                                       ??_INT0_ISR 0001  
                                   ??i2_INT2_ISR 0001                                       ??_INT1_ISR 0013  
                          ??i2_TMR1_Callback_ISR 0001                                       ??_INT2_ISR 0013  
                     CCP_Interrupt_Init@_ccp_obj 002B                      __end_of_InterruptManagerLow 0260  
                             __end_ofi2_CCP1_ISR 42E4                               __end_ofi2_CCP2_ISR 42B6  
                                        ?___lmul 0028                                     ??i2_TMR0_ISR 0001  
                                   ??i2_TMR1_ISR 0001                                       ??_TMR0_ISR 0013  
                                   ??i2_TMR2_ISR 0001                                       ??_TMR1_ISR 0013  
                                   ??i2_TMR3_ISR 0001                      CCP_PWM_Set_Duty@l_duty_temp 016B  
                                     ??_TMR2_ISR 0013                                       ??_TMR3_ISR 0013  
                              led_turn_off@F3329 0053                            ??_CCP2_Interrupt_Init 002A  
                    convert_uint32_to_string@cnt 0177                                          _ADC_ISR 440A  
                    convert_uint32_to_string@str 00C1                                  led_toggle@F3334 0052  
                                        ?_memset 0028                                   ___lmul@product 0080  
                                        _RB4_ISR 43FE                                          _RB5_ISR 43FA  
                                        _RB6_ISR 43F6                                          _RB7_ISR 43F2  
                         ?_CCP_Capture_Mode_Init 002B                               __end_ofi2_INT1_ISR 442A  
                                      ?___xxtofl 0084                               __end_ofi2_INT2_ISR 4426  
                      ?_lcd_4bit_send_string_pos 008F                        ??_convert_uint8_to_string 0031  
                                     _btn_values 1001                              _Pulse_Meter_Display 30B2  
                             __end_ofi2_TMR0_ISR 43DC                               __end_ofi2_TMR1_ISR 422C  
                             __end_ofi2_TMR2_ISR 43F2                               __end_ofi2_TMR3_ISR 43D0  
                                 _tris_registers 00EF                             CCP_PWM_Mode_Init@ret 0093  
                   ?_CCP_Capture_Mode_Read_Value 0013                        ??_lcd_4bit_send_char_data 0031  
                          _mcal_layer_initialize 436C                      Pulse_Meter_Display@Freq_Str 017D  
                             _CCP_Interrupt_Init 3C92           lcd_4bit_initialize@l_data_pins_counter 008D  
                           _ADC_InterruptHandler 0045                                          __Hparam 0000  
                                    _Timer1_Init 2FC4                                      _Timer2_Init 3A1C  
                                        __Lparam 0000                              _gpio_pin_initialize 3888  
                                        ___fldiv 14B6                                          ___awdiv 3326  
                                        ___awmod 3554                                          ___flmul 108A  
                                        ___fltol 2CBC                                          ___lldiv 3604  
                            ?_CCP_Interrupt_Init 002B                                        ?_vfprintf 00AD  
                                   __psmallconst 1000                             ?_Pulse_Meter_Display 0178  
                                        __pcinit 399C                         Pulse_Meter_Display@F3686 0117  
                       Pulse_Meter_Display@F3688 011C                                          __ramtop 1000  
                                        __ptext0 3F50                                          __ptext1 2ED2  
                                        __ptext2 43DC                                          __ptext3 436C  
                                        __ptext4 4310                                          __ptext5 3A1C  
                                        __ptext6 42E4                                          __ptext7 2FC4  
                                        __ptext8 3A9A                                          __ptext9 40FE  
                ??_gpio_pin_direction_initialize 002A                         _convert_uint32_to_string 3260  
                              ?_Pulse_Meter_Init 0001                                       ??___xxtofl 0088  
                               ___awmod@dividend 0028                                          _ovf_cnt 0049  
                             ??_Pulse_Meter_Init 0031                             ?_gpio_pin_initialize 0081  
                                        _sprintf 3FB4                             ??_CCP_Interrupt_Init 002D  
                                 __pintcode_body 1852                        Pulse_Meter_Calculate@Freq 016F  
                          CCP_Interrupt_Init@ret 002F                             end_of_initialization 3A12  
                              lcd_send_4bits@lcd 0081                                lcd_send_4bits@ret 0084  
                                      i2_ADC_ISR 442A                    Pulse_Meter_Display@Pulse_Freq 0178  
                                        fputc@fp 002A                                          memset@c 002A  
                                        memset@k 0080                                          memset@n 002C  
                                        memset@s 0082                                          int_func 1852  
                                        fputs@fp 0082                          ??_lcd_4bit_send_command 0031  
                                      i2_RB4_ISR 441E                                        i2_RB5_ISR 441A  
                                      i2_RB6_ISR 4416                                        i2_RB7_ISR 4412  
                  ??_CCP_Capture_Mode_Read_Value 0017                                  ___lldiv@divisor 0088  
                                ___lldiv@counter 0090                                __end_of_vfpfcnvrt 2944  
                       CCP_PWM_Set_Duty@_ccp_obj 0166                  __end_of_convert_uint8_to_string 34A2  
                                     _timer1_obj 00D7                                          postdec1 0FE5  
                                        postdec2 0FDD                                       _timer2_obj 00ED  
                                     _timer3_obj 010B                                          postinc0 0FEE  
                                        postinc1 0FE6                                          postinc2 0FDE  
                               vfpfcnvrt@convarg 00A7                            ??_Pulse_Meter_Display 0031  
                                     ??_vfprintf 0031                              _lcd_4bit_initialize 2572  
                __end_of_lcd_4bit_send_char_data 3C14                            _INT1_InterruptHandler 003D  
                       __end_of_CCP_PWM_Set_Duty 22B6                            _Pulse_Meter_Calculate 1AA2  
                              _CCP_PWM_Mode_Init 2A70                                     _compare_flag 0048  
                     lcd_4bit_send_char_data@lcd 0085                       lcd_4bit_send_char_data@ret 0088  
                       ??_CCP1_Capture_Mode_Init 0031                               ?_CCP_PWM_Mode_Init 0091  
                                  ___xxtofl@sign 008C                            ??_gpio_pin_initialize 0083  
                                    ___fldiv@grs 00BE                                      ___fldiv@rem 00B7  
                              _Timer1_Timer_Init 42E4                              ??_CCP_PWM_Mode_Init 0030  
                                     ?i2_ADC_ISR 0001              CCP_Capture_Mode_Read_Value@_ccp_obj 0013  
          i2CCP_Capture_Mode_Read_Value@_ccp_obj 0001                               ?_Timer1_Timer_Init 0001  
                           ?_lcd_4bit_initialize 0089                                      ___flmul@grs 00A0  
                         ?_mcal_layer_initialize 0001         CCP_Capture_Compare_Timer_Config@_ccp_obj 0028  
                               CCP_Init@_ccp_obj 0094                                _TMR1_Callback_ISR 439E  
                                     ?i2_RB4_ISR 0001                                       ?i2_RB5_ISR 0001  
                                     ?i2_RB6_ISR 0001                                       ?i2_RB7_ISR 0001  
                            ??_Timer1_Timer_Init 002F                               ?_TMR1_Callback_ISR 0001  
                            _lcd_4bit_set_cursor 34A2                               relay_turn_on@F3318 0050  
                    lcd_4bit_send_string_pos@lcd 008F                      lcd_4bit_send_string_pos@row 0091  
                    lcd_4bit_send_string_pos@str 0093                                _Timer2_Timer_Init 4310  
                  convert_uint16_to_string@F3472 0111                    convert_uint32_to_string@F3479 0100  
                                 __end_of___lmul 3F50                                      vfpfcnvrt@ap 00A3  
                                    vfpfcnvrt@cp 00AB                                      vfpfcnvrt@fp 009F  
                      __end_of_CCP_PWM_Mode_Init 2B9A                              ??_TMR1_Callback_ISR 0013  
                             ?_Timer2_Timer_Init 0001                                    __pidataCOMRAM 4434  
                         fp_i2_CCP1_Callback_ISR 0000                                   _timer0_preload 0037  
                                 __end_of_memset 214E                  ??i2_CCP_Capture_Mode_Read_Value 0005  
                                 _timer1_preload 0033                         Timer1_Mode_Select@_timer 0028  
                                 _timer2_preload 004A                              start_initialization 399C  
                                 _timer3_preload 0031                              ??_Timer2_Timer_Init 002C  
                      __end_of_Timer1_Timer_Init 4310                     ?_lcd_4bit_send_enable_signal 0081  
                           ?_lcd_4bit_set_cursor 0089                             _RB4_InterruptHandler 0039  
                                      _Frequency 00E9                    convert_uint32_to_string@value 00BD  
                                    __end_of_abs 4184                                      __end_of_pad 3C92  
          __end_of_gpio_pin_direction_initialize 2418                    _gpio_pin_direction_initialize 22B6  
                           fp__CCP1_Callback_ISR 0000                            ??_lcd_4bit_initialize 008B  
                      __end_of_TMR1_Callback_ISR 43AC                       __end_of_Timer1_Mode_Select 3B18  
                      __end_of_Timer2_Timer_Init 4338                                      vfprintf@fmt 00AF  
                                       ??___lmul 0030                                      __pdataBANK0 00EF  
                                    __pdataBANK1 0186                     convert_uint8_to_string@F3465 0120  
                                       ?_ADC_ISR 0001                                         ??_memset 002E  
                         ?_Pulse_Meter_Calculate 0166                          ??_CCP_Capture_Mode_Init 002D  
                   __end_of_ecu_layer_initialize 439E                                       memset@dest 0028  
                   lcd_4bit_send_command@command 0087                  convert_uint8_to_string@Temp_str 00BF  
                                      ___fldiv@a 00AF                                        ___fldiv@b 00AB  
                                       ?_RB4_ISR 0001                                         ?_RB5_ISR 0001  
                                       ?_RB6_ISR 0001                                         ?_RB7_ISR 0001  
                                      ___flmul@a 0096                                        ___flmul@b 0092  
                                    __pbssCOMRAM 0031                            ??_lcd_4bit_set_cursor 008D  
                                  __pcstackBANK0 0080                                    __pcstackBANK1 015E  
                   convert_uint8_to_string@value 00C3                      __end_ofi2_TMR1_Callback_ISR 4412  
                                    ??i2_ADC_ISR 0001                  Pulse_Meter_Calculate@Duty_Cycle 0173  
               convert_uint32_to_string@Temp_str 016C                            _INT2_InterruptHandler 003B  
                 gpio_pin_write_logic@pin_config 0028                            _TMR0_InterruptHandler 00CC  
                                      __pnvBANK0 00FF                                      ??i2_RB4_ISR 0001  
                                    ??i2_RB5_ISR 0001                                      ??i2_RB6_ISR 0001  
                                    ??i2_RB7_ISR 0001                      __end_of_CCP2_Interrupt_Init 3D82  
                                   ?_Timer1_Init 002A                     __end_of_InterruptManagerHigh 1AA2  
                                   ?_Timer2_Init 0028                                        _dtoa$3386 0096  
                                      __pintcode 0008                       ??_convert_uint32_to_string 0031  
                                       ?___fldiv 00AB                                         ?___awdiv 0028  
                                       ?___awmod 0028                                         ?___flmul 0092  
                                       ?___fltol 015E                                         ?___lldiv 0084  
                                    __pintcodelo 0018                        gpio_pin_write_logic@logic 002A  
                                    __smallconst 1000                                         _CCP1_ISR 425A  
                                       _CCP2_ISR 422C                Pulse_Meter_Display@Duty_Cycle_Str 0182  
          __end_ofi2_CCP_Capture_Mode_Read_Value 37F6                    i2_CCP_Capture_Mode_Read_Value 3750  
  CCP_Capture_Mode_Read_Value@capture_temp_value 001B  i2CCP_Capture_Mode_Read_Value@capture_temp_value 0009  
                                       _CCP_Init 2DDA                              _CCP1_Interrupt_Init 3D82  
                                       ?_sprintf 00B5                               _RB5_pin_init_value 004D  
       CCP_Capture_Mode_Read_Value@capture_value 0015       i2CCP_Capture_Mode_Read_Value@capture_value 0003  
                                       _INT0_ISR 442E                                         _INT1_ISR 4406  
                                       _INT2_ISR 4402                                         i1u210_28 41E2  
                                       i1u210_29 41F4                                         i1u209_20 41DC  
                                       i1u209_21 41D8                           _CCP1_Capture_Mode_Init 4184  
                  __end_of_lcd_4bit_send_command 3B96                                         i1u560_20 36F6  
                                       i1u800_20 01BC                                         i1u560_21 36F2  
                                       i1u800_21 01B8                                         i1u561_20 371E  
                                       i1u801_20 01CE                                         i1u561_21 371A  
                                       i1u801_21 01CA                                         i2u217_40 4212  
                                       i2u217_41 420E                                         i1u802_20 01DC  
                                       i1u802_21 01D8                                         i1u803_20 01EE  
                                       i1u803_21 01EA                                         i2u218_48 4218  
                                       i2u218_49 422A                                         i1u804_20 01FC  
                                       i1u804_21 01F8                                         i1u805_20 020E  
                                       i1u805_21 020A                                         i1u558_20 36C4  
                                       i1u582_20 2960                                         i1u806_20 021C  
                                       i1u558_21 36C0                                         i1u582_21 295C  
                                       i1u806_21 0218                                         i1u559_20 36D6  
                                       i1u583_20 29AC                                         i1u655_20 426E  
                                       i1u807_20 022E                                         i1u559_21 36D2  
                                       i1u583_21 29A8                                         i1u655_21 426A  
                                       i1u807_21 022A                                         i1u584_20 2A1E  
                                       i1u808_20 023C                                         i1u584_21 2A1A  
                                       i1u808_21 0238                                         i1u656_28 4274  
                                       i1u657_20 4240                                         i1u656_29 4286  
                                       i1u657_21 423C                                         i1u658_28 4246  
                                       i1u658_29 4258                                         i1u780_20 0052  
                                       i1u780_21 004E                  Pulse_Meter_Calculate@Pulse_Freq 016B  
                                       i1u781_20 0064                                         i1u781_21 0060  
                           _RB5_InterruptHandler 00D2                                         i1u790_20 0108  
                                       i1u782_20 0072                                         i1u790_21 0104  
                                       i1u782_21 006E                                         i1u791_20 0120  
                                       i1u783_20 0084                                         i1u791_21 011C  
                                       i1u783_21 0080                                         i1u792_20 0136  
                                       i1u784_20 0092                                         i1u792_21 0132  
                                       i1u784_21 008E                                         i1u793_20 0144  
                                       i1u785_20 00A8                                         i1u793_21 0140  
                                       i1u785_21 00A4                                         i1u794_20 0158  
                                       i1u786_20 00BE                                         i1u794_21 0154  
                                       i1u786_21 00BA                                         i2u562_40 376A  
                                       i2u562_41 3766                                         i1u795_20 016E  
                                       i1u787_20 00CC                                         i1u779_20 0044  
                                       i1u795_21 016A                                         i1u787_21 00C8  
                                       i1u779_21 0040                                         i2u563_40 377C  
                                       i2u563_41 3778                                         i1u796_20 017C  
                                       i1u788_20 00E4                                         i1u796_21 0178  
                                       i1u788_21 00E0                                         i2u564_40 379C  
                                       i2u644_40 2BAC                                         i2u564_41 3798  
                                       i2u644_41 2BA8                                         i1u797_20 018E  
                                       i1u789_20 00FA                                         i1u797_21 018A  
                                       i1u789_21 00F6                                         i2u565_40 37C4  
                                       i2u645_40 2BF8                                         i2u565_41 37C0  
                                       i2u645_41 2BF4                                         i1u798_20 019C  
                                       i1u798_21 0198                                         i2u646_40 2C6A  
                                       i2u662_40 42CA                                         i2u750_40 18A0  
                                       i2u646_41 2C66                                         i2u662_41 42C6  
                                       i2u750_41 189C                                         i1u799_20 01AE  
                                       i1u799_21 01AA                                         i2u751_40 18B2  
                                       i2u751_41 18AE                                         i2u663_48 42D0  
                                       i2u664_40 429C                                         i2u760_40 1956  
                                       i2u752_40 18C0                                         i2u663_49 42E2  
                                       i2u664_41 4298                                         i2u760_41 1952  
                                       i2u752_41 18BC                                         i2u761_40 196E  
                                       i2u753_40 18D2                                         i2u761_41 196A  
                                       i2u753_41 18CE                                         i2u665_48 42A2  
                                       i2u770_40 1A0A                                         i2u762_40 1984  
                                       i2u754_40 18E0                                         i2u665_49 42B4  
                                       i2u770_41 1A06                                         i2u762_41 1980  
                                       i2u754_41 18DC                                         i2u771_40 1A1C  
                                       i2u763_40 1992                                         i2u755_40 18F6  
                                       i2u747_40 1872                                         i2u771_41 1A18  
                                       i2u763_41 198E                                         i2u755_41 18F2  
                                       i2u747_41 186E                                         i2u772_40 1A2A  
                                       i2u764_40 19A6                                         i2u756_40 190C  
                                       i2u748_40 1880                                         i2u772_41 1A26  
                                       i2u764_41 19A2                                         i2u756_41 1908  
                                       i2u748_41 187C                                         i2u773_40 1A3C  
                                       i2u765_40 19BC                                         i2u757_40 191A  
                                       i2u749_40 1892                                         i2u773_41 1A38  
                                       i2u765_41 19B8                                         i2u757_41 1916  
                                       i2u749_41 188E                                         i2u774_40 1A4A  
                                       i2u766_40 19CA                                         i2u758_40 1932  
                                       i2u774_41 1A46                                         i2u766_41 19C6  
                                       i2u758_41 192E                                         i2u775_40 1A5C  
                                       i2u767_40 19DC                                         i2u759_40 1948  
                                       i2u775_41 1A58                                         i2u767_41 19D8  
                                       i2u759_41 1944                                         i2u776_40 1A6A  
                                       i2u768_40 19EA                                         i2u776_41 1A66  
                                       i2u768_41 19E6                                         i2u777_40 1A7C  
                                       i2u769_40 19FC                                         i2u777_41 1A78  
                                       i2u769_41 19F8                                         i2u778_40 1A8A  
                                       i2u778_41 1A86                             ?_CCP1_Interrupt_Init 0028  
               gpio_pin_direction_initialize@ret 0030                                         _TMR0_ISR 43B8  
                                       _TMR1_ISR 41C0                                         _TMR2_ISR 43E6  
                                       _TMR3_ISR 43AC                                ??_Welcome_Message 0095  
                                      _vfpfcnvrt 2818                         _lcd_4bit_send_string_pos 3E70  
                              ?_CCP_PWM_Set_Duty 0166          gpio_pin_direction_initialize@pin_config 0028  
                       ?_convert_uint8_to_string 00BD                           gpio_pin_initialize@ret 0084  
                             ??_CCP_PWM_Set_Duty 0169                          ??_mcal_layer_initialize 0031  
                        gpio_pin_write_logic@ret 0080                                ___lmul@multiplier 0028  
                       ?_lcd_4bit_send_char_data 0085                                        copy_data0 39B0  
                                      copy_data1 39D0                             _ecu_layer_initialize 438E  
                             _RB7_pin_init_value 004B                      __end_of_Pulse_Meter_Display 3196  
                                       __Hrparam 0000                                       vfprintf@ap 00B1  
                                       __Lrparam 0000                                       vfprintf@fp 00AD  
                          ??_CCP1_Interrupt_Init 002A                      CCP1_Interrupt_Init@_ccp_obj 0028  
                          _CCP1_InterruptHandler 0043                           lcd_4bit_set_cursor@lcd 0089  
                                     ?_vfpfcnvrt 009F                           lcd_4bit_set_cursor@row 008B  
                                       _ccp1_obj 0144                                         _ccp2_obj 0151  
                      CCP_PWM_Mode_Init@_ccp_obj 0091                      __end_of_gpio_pin_initialize 3918  
                             __end_of_btn_values 1011                            _TMR1_InterruptHandler 0035  
                                       _cap_flag 00D6                                       sprintf@fmt 00B7  
                                       ___xxtofl 1C84                             _InterruptManagerHigh 0008  
                                       __ptext10 4184                                         __ptext11 2DDA  
                                       __ptext20 2572                                         __ptext12 2A70  
                                       __ptext21 3888                                         __ptext13 3604  
                                       __ptext30 400C                                         __ptext22 22B6  
                                       __ptext14 3C92                                         __ptext31 26CA  
                                       __ptext23 30B2                                         __ptext15 3D0A  
                                       __ptext40 3196                                         __ptext32 33EA  
                                       __ptext24 3E70                                         __ptext16 3D82  
                                       __ptext41 4432                                         __ptext33 3260  
                                       __ptext25 34A2                                         __ptext17 2418  
                                       __ptext50 1C84                                         __ptext42 4142  
                                       __ptext34 3FB4                                         __ptext26 3B18  
                                       __ptext18 3DFA                                         __ptext51 2CBC  
                                       __ptext43 3554                                         __ptext35 4062  
                                       __ptext27 3918                                         __ptext19 438E  
                                       __ptext60 43F2                                         __ptext52 108A  
                                       __ptext44 3326                                         __ptext36 2818  
                                       __ptext28 3B96                                         __ptext61 43F6  
                                       __ptext53 14B6                                         __ptext45 1FD6  
                                       __ptext37 1E3C                                         __ptext29 37F6  
                                       __ptext70 440A                                         __ptext62 43FA  
                                       __ptext46 1AA2                                         __ptext38 3C14  
                                       __ptext63 43FE                                         __ptext55 43AC  
                                       __ptext47 3EE2                                         __ptext39 40B6  
                                       __ptext80 441E                                         __ptext72 43C4  
                                       __ptext64 4402                                         __ptext56 43E6  
                                       __ptext48 4338                                         __ptext81 4422  
                                       __ptext73 43EC                                         __ptext65 4406  
                                       __ptext57 41C0                                         __ptext49 214E  
                                       __ptext82 4426                                         __ptext74 41F6  
                                       __ptext66 422C                                         __ptext58 439E  
                                       __ptext83 4288                                         __ptext75 440E  
                                       __ptext67 425A                                         __ptext59 43B8  
                                       __ptext84 42B6                                         __ptext76 43D0  
                                       __ptext68 2944                                         __ptext85 2B9A  
                                       __ptext77 4412                                         __ptext69 36AA  
                                       __ptext86 3750                                         __ptext78 4416  
                                       __ptext87 442A                                         __ptext79 441A  
                                       __ptext88 442E                                         __ptext89 0000  
                       CCP_Capture_Mode_Init@ret 002F                              i2_CCP1_Callback_ISR 2B9A  
                     __end_of_Timer1_Write_Value 4358              __end_of_CCP_Capture_Mode_Read_Value 3750  
                 ?i2_CCP_Capture_Mode_Read_Value 0001                      _CCP_Capture_Mode_Read_Value 36AA  
                          ?_ecu_layer_initialize 0001                                      CCP_Init@ret 0098  
               __end_of_convert_uint32_to_string 3326                                         isa$xinst 0000  
                        ??_Pulse_Meter_Calculate 0030                                         int$flags 0058  
                   __end_of_lcd_4bit_send_string 399C                                         _vfprintf 4062  
                           ?i2_CCP1_Callback_ISR 0001                                   _lcd_send_4bits 37F6  
                             _Timer1_Mode_Select 3A9A                       __end_of_CCP2_PWM_1KHZ_INIT 4142  
                  __end_of_CCP_Capture_Mode_Init 2572                      _TMR1_Callback_ISR$intlevel1 43A8  
                                     i2_CCP1_ISR 42B6                                       i2_CCP2_ISR 4288  
                                 Timer1_Init@ret 002E                      __end_of_lcd_4bit_initialize 26CA  
                          ?_InterruptManagerHigh 0001                             _RB6_InterruptHandler 00D0  
                            ?_Timer1_Mode_Select 0028              Pulse_Meter_Display@Pulse_Duty_Cycle 017C  
                                 Timer2_Init@ret 002B                     __end_of_gpio_pin_write_logic 2818  
                                       intlevel1 0000                                         intlevel2 0000  
                                      sprintf@ap 015E                              _InterruptManagerLow 0018  
                 lcd_4bit_send_enable_signal@lcd 0081                   lcd_4bit_send_enable_signal@ret 0083  
                               ___lldiv@dividend 0084                                       i2_INT1_ISR 4426  
                                     i2_INT2_ISR 4422                                 _Pulse_Meter_Init 43DC  
                         fp_i2_TMR1_Callback_ISR 0000         __end_of_CCP_Capture_Compare_Timer_Config 3E70  
             ??_CCP_Capture_Compare_Timer_Config 002A                ?_CCP_Capture_Compare_Timer_Config 0028  
               _CCP_Capture_Compare_Timer_Config 3DFA                             ??_Timer1_Mode_Select 002A  
                                     i2_TMR0_ISR 43D0                                       i2_TMR1_ISR 41F6  
                         __end_of_lcd_send_4bits 3888                                       i2_TMR2_ISR 43EC  
                                     i2_TMR3_ISR 43C4                            ??i2_CCP1_Callback_ISR 000B  
                                    ??_vfpfcnvrt 00A5                      __end_of_lcd_4bit_set_cursor 3554  
                           fp__TMR1_Callback_ISR 0000                             ?_InterruptManagerLow 0001  
                                       sprintf@f 0160                                         sprintf@s 00B5  
                               ___lldiv@quotient 008C                                   _port_registers 0186  
                          _CCP2_InterruptHandler 0041                           ??_ecu_layer_initialize 0031  
                        ?_CCP1_Capture_Mode_Init 0001                      lcd_4bit_send_char_data@data 0087  
                                _Welcome_Message 2ED2                       ??_lcd_4bit_send_string_pos 0031  
                         lcd_4bit_initialize@lcd 0089                           lcd_4bit_initialize@ret 008E  
